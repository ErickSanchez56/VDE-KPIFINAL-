'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.42000
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
'
Namespace wsAXC
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="wsAXCMPSoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class wsAXCMP
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private WM_BajaEmpaqueArmadoTarimasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_CerrarRegistroPalletOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_CancelarRegistroPalletOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaOrdenesReabastecimientoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaOrdenesReabastecimientoDetOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaUbicacionPKOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ReabastecePalletOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ReabasteceEmpaqueOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ReabastecePiezasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ReabastecePalletSOOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ReabasteceEmpaqueSOOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ReabastecePiezasSOOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaContenedorOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaEmpaqueOSKUOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaContenedorAjustesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_SugierePosicionContenedorOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_OCContenedorSKUOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaPosicionPisoPalletOCOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_OCContenedorOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ReubicarContenedorOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ReubicarEmpaqueOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ImprimeSKUOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ImpContenedorOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ReimprimeContenedorOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_GuardaFotoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_EliminaImagenOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaImagenNumParteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ListaArticulosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_FotoNumParteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaEmpaquesPorPalletInventario_NEOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaEmpaqueInventarioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_RegistraPalletInvSinCambioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_BajaPalletInventarioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_BajaEmpaqueInventarioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_EditaRegistroContenedorInventarioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_BajaEmpaquesInventario_NEOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_EditaRegistroPalletInventarioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_RegistraEmpaqueNuevoPalletInventario_OLDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_RegistraEmpaqueNuevoPalletInventarioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_RegistraEmpaqueNuevoPalletInventario_NEOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_CierraPalletInventarioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultarPalletAbiertoInvOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultarPalletAbiertoInv_NEOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_RegistraEmpaqueInventarioPKOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_RegistraEmpaqueInventarioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_RegistraEmpaqueInventario_NEOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_RegistraNuevoEmpaquePalletInventarioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_RegistraNuevoEmpaquePalletInventarioPickingOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_RegistraNuevoEmpaquePalletInventarioConLoteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_EditaRegistroEmpaqueInventarioPKOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_EditaRegistroEmpaqueInventarioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_EditaRegistroEmpaqueInventarioConLoteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_InventarioSugiereArticuloOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_InventarioSugierePosicionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_EscanearEmpaqueInvOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_BajaEmpaqueInvOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_EditarEmpaqueInvOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaInventariosNumParteAbiertosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_AjusteBajaEmpaqueOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_AjusteContenedorPositivoNumParteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_AjusteContenedorPositivoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_AjusteContenedorPositivoSKUOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_AjusteContenedorNegativoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_AjusteBajaEmpaque_SelProd_NEOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaPalletBajaEmpaquesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_AjusteBajaPalletOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_AjusteNuevoEmpaquePalletExistenteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_AjusteNuevoEmpaquePalletExistentePedimentoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_AjusteNuevoEmpaquePalletExistente_NEOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_AjusteCierraNuevoPalletOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ListarAjustesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ListarConceptosAjusteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_AjusteConsultarPalletAbiertoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_AjusteNuevoEmpaqueNuevoPalletOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_RegistraEmpaqueNvoPalletOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_RegistraEmpaqueNvoPalletv2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_RegistraEmpaqueNvoPallet_NEOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_CierraPalletAjusteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_RegistraAjusteNvoPalletOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_AjusteNuevoEmpaque_NEOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_CuarentenaPalletOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_CuarentenaEmpaqueOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ImprimeEtiquetaEmpaqueOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ImpEtiquetaEmpaqueOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaPalletAColocarOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_CuarentenaRecuperaPalletCompletoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaPalletAConsolidarOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaPalletConsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_CreaPalletConsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaEmpaquesCarritoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaPedidoSurtidoReempaqueOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_CreaPalletReempaqueOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_CerrarReempaqueOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_CancelaReempaqueOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_OSConsultaPalletConsAbiertoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_RegistraEmpaqueConsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_RegistraConsolidacion_NEOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_RegistraEmpaqueCons_NE_oldOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_CancelaConsolidacionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_CerrarConsolidacionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaPalletReempaqueOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_RegistraReempaque_NEOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_RegistraReempaqueOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_RegistraReempaquePiezasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_RegistraReempaqueSKUOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaOrdenSurtidoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaOrdenSurtido_ReempaqueOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaListaConsolidadosReempaqueOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ListaEmbarqueValidadasDetOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_CancelaEmbarqueValidadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ListarPartidasRecepcionTraspasoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_DetallePartidaTraspasoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_PrimeraUltimaTraspasoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_CierreParcialEnvioTraspasoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_CierreParcialTraspasoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_RegistraEmpaqueTraspasoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_CreaEmpaqueTraspasoNEOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_OCCierraPalletTraspasoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaPalletAbiertoTraspasoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultarPalletTraspaso_NEOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaPalletTraspasoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_RegistroTraspasoPalletEnvioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_RegistroTraspasoEmpaqueEnvioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_RegistroTraspasoEmpaqueEnvio_NEOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_RegistroPalletTraspasoMultPartOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_CierrePalletTraspasoEnvioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_RegistroTraspasoPalletConEtiquetasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_RegistroTraspasoNuevoPalletOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ListarTarimasRecibidasTraspasoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_CancelarPalletTraspasoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_PrimeraUltimaTraspasoSelAlmOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_RegistraEmpaqueTraspasoSelAlmOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_CreaEmpaqueTraspasoNESelAlmOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_PrimeraUltimaTraspasoSelAlm_SAOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_RegistraEmpaqueTraspasoSelAlm_SAOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_CreaEmpaqueTraspasoNESelAlm_SAOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaTextosTraspasoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_RegistroTextosTraspasoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ListarPartidasEnvioMaquilaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultarPartidaEnvioMaquilaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_EnviaEmpaqueMaquilaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_EnviaPalletMaquilaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_SugierePalletEnvioMaquilaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaOrdenProduccionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaOrdenProduccion_v2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_CerrarOrdenProduccionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_CerrarOrdenProduccion_v2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_RegistraCantidadOrdenProduccionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_RegistraSobranteOrdenProduccionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_RegistraFechaCadOrdenProdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaOrdenProduccionDetOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaEmpaquesArmadoProdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaEmpaquesArmadoProd_NEOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_RegistraEmpaqueEnPalletOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_RegistraEmpaqueEnPalletPrimeraYUltimaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_CreaEmpaqueNEOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaCarritoSurtidoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaPisoSugeridoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaPisoSurtidoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_RegistroPisoSurtidoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaEmbarqueValidarTotalesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaEmbarqueValidarEmpaquesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaEmbarqueValidarPalletsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ValidaEmbEmpaqueOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ValidaEmbPalletOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_RegistrarEmbMaterialOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaPalletSugeridoTraspasoEnvioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaPalletSugeridoTraspasoEnvio_NEOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaTarimaArmadoTraspasoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaTarimaArmadoTraspaso_NEOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaEmpaqueSugeridoTraspasoEnvioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultarPisoTraspasoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_RegistroTraspasoPisoEnvioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaPisoSugeridoTraspasoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaRechazoPalletTraspOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_RechazoPalletTraspOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_OSListarPartidasAValidarOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_OSConsultarPalletAValidarOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_OSRegistrarEmpaqueRechazadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_OSRegistrarPalletLineaRechazadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_OSRegistrarPalletAndenValidadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_OSRegistrarEmpaqueAndenRechazadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_OSRegistrarPalletAndenRechazadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_OSListarPalletsAEntregarOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_OSRegistrarPalletEntregadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_OSRegistraEntregaAndenOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_OSRegistraEmbarqueAndenOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_OSRegistraRecibePalletP2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_KanbanListarPartidasOrdenesSurtidoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_KanbanConsultaPartidaOrdenesSurtidoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_KanbanConsultaPalletASurtirOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_KanbanConsultaEmpaqueASurtirOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_KanbanSugerirPalletOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_KanbanSugerirEmpaqueOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_KanbanSurtirPalletOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_KanbanSurtirEmpaqueOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_KanbanSurtirPiezasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_KanbanConsultaPalletPKAbiertoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_KanbanCerrarPalletPKOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_KBListarPartidasAValidarOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_KBConsultarPalletAValidarOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_KBRegistrarPalletLineaValidadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_KBRegistrarEmpaqueLineaRechazadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_KBRegistrarPalletLineaRechazadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_KBRegistrarPalletAndenValidadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_KBRegistrarEmpaqueAndenRechazadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_KBRegistrarPalletAndenRechazadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_KBListarPalletsAEntregarOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_KBRegistrarPalletEntregadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_KBRegistraRecibePalletP2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_KBRegistraEntregaAndenOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_KBRegistraEmbarqueAndenOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ListarOrdenesRecepcionLiberadasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ListarPartidasORLiberadasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ListarOrdenesRecepcionRecibidasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultarEmpaqueOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaEmpaqueOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaEmpaqueMPOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaEmpaqueReabasteceOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_BajaPiezasSAOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_BajaEmpaqueSAOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_BajaPalletSAOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_RegistraEmpaqueSAOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_RegistraEmpaqueKanbanSAOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_CierraPalletSAOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_CancelaPalletSAOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultarPalletAbiertoSinAfectaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaExisteNumParteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaAlmacenOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ReimprimeEmpaquePTOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ImprimeEtiquetaEmpaquesPalletOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_OCImprimeEtiquetasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ImprimeEtiquetasPalletOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ImprimeCredencialUsuarioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ImprimeEtiquetaPosicionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ImprimeEtiquetaLineaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ReimprimeEtiquetaEmpaqueOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ImprimeEtiquetaKanbanOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ReimprimeRempaqueOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ReimprimePalletMPOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ImprimeEtiquetaInvOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaEmpaquesPallet_ImpresionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_BuscarUbicacionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaReferenciaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_BuscaArticuloCIOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaCoincidenciaArticuloOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaPalletArticuloOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ListaBloqueadosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultarPalletPKOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_DevolucionDetOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ListarPartidasDevolucionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_OCRegistrarEmpaqueDevolucionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_PrimeraUltimaEmpaqueDevOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_OCRegistrarEmpaqueSEDevolucionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_OCCierraPalletDevolucionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultarPalletAbiertoDevOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ListarLotesDevOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_CreaLoteRecepcionDevOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_RegistroINIEmbalajeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_RegistraINIEmpaqueOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_RegistroINIEtiquetaIndividualOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_BajaInventarioPalletOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_BajaInventarioEmpaqueOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_CierraEntregaParcialOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ListarTransfersLiberadosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ListarPartidasInterorgSalidaLiberadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_RegistraPalletInterorgSalidaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_RegistraEmpaqueInterorgSalidaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ListarTransfersARecibirOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ListarPartidasLiberadasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_RecibePalletTransferOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaPalletsTransferOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaInvFisicoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaInvCiclicoNumParteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaInvCiclicoPosicionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaInvCiclicoPorLoteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaInventarioNumParteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaInventarioPosicionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_INVConsultaUbicacionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_EmpaquesPorPisoInventarioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaPalletInventarioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaEmpaquesPorPalletInventarioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaEmpaquesPosicionPickingInvOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_DetallePedimentosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private HelloWorldOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ComprobacionBDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ListaImpresorasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ImprimePKOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ReImprimePKOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_CapturaEmpaqueOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ReImprimeSubensambleOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaLineaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ListaMercadosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_CambiaMercadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ReimprimirEtiquetasMercadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_LoginOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaAreasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ActualizaAreaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaVersionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultarNotificacionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ImprimeCredencialesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_OCRegistrarEmpaqueDaPOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_OrdenCompraLiberadaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ListarPartidasOCLiberadasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ListarPartidasOCEnProcesoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_DetalleReciboPartidaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ListarOrdenesCompraLiberadasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ListarLotesOCOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_OCRegistrarEmpaqueCompraOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_OCRegistrarPalletCompra_NEOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_RegistrarRefaccionesSKUOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_RegistrarRefaccionesSKUPiezasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_RegistrarPalletGranelOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_OCRegistrarEmpaqueCompra_MercadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_RegistrarPalletGranel_MercadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_OCRegistrarPalletCompra_NE_MercadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_OCCreaPalletMPPrimeraUltima_MercadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_OCRegistrarPalletCompra_NE_Mercado_SAOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_OCRegistrarEmpaqueCompra_Mercado_SAOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_RegistrarPalletGranel_Mercado_SAOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_OCCreaPalletMPPrimeraUltima_Mercado_SAOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_OCRegistrarEmpaqueCompraKanbanOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_OCCierraPalletMPCompraOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_OCCierraPalletCompraRefaccionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_CosultaEmpaquesOCOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_DelEmpaqueOrdenRecepcionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_CreaLoteRecepcionOCOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_OCCreaPalletMPCompraUnicoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultarPalletAbiertoOCOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaPalletArmadoOCOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaPosicionPisoOCOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_OCCreaPalletMPPrimeraUltimaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ListarOCLiberadasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_CerrarRecepcionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ListarOrdenesCompraQAOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ListarPartidasORQAOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaEmpaqueMuestreoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_QAAceptaEmpaqueOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_QARechazaEmpaqueOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_QARechazoTotalOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_QATerminarProcesoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_CierraPalletRechazadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_MoverEmpaqueACuarentenaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_MoverContenedorACuarentenaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_MoverEmpaqueADisponibleOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_MoverContenedorADisponibleOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_CuarentenaRecuperaEmpaqueOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_CuarentenaBajaPalletOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_CuarentenaBajaEmpaqueOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultarPalletAbiertoCuarentenaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_CierraPalletMPCuarentenaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_CuarentenaMarcaPalletOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultarPalletPTOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultarPalletReabasteceOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaEmpaquesPallet_NEOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_SugierePosicionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ColocaPalletOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ColocaPalletKanbanOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ReubicarEmbalajeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ContenedorSugeridoReubicacionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaEmpaqueMultipleSKUOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaPosicionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ReubicarProductoPorCantidadesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ReubicarProductoPorSKUOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ReubicarProductoPorSKUPiezasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ReabastecePickingOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ReabastecePickingKanbanOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaMaquinasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaPartidasMaquilaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaPartidasSpinnerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_OSListarPartidasOrdenesSurtidoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_OSConsultaPartidaOrdenesSurtidoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaPalletASurtirOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaEmpaqueASurtirOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_OSSugerirPalletOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_OSSugerirEmpaqueOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_OSSugerirEmpaqueUnidadOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_OSSurtirPalletOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_OSSurtirEmpaqueOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_OSSurtirEmpaques_NEOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_OSSurtirPiezasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_OSSurtirPiezasSKUOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_OSCancelarSurtPiezasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_OSConsultaPalletPKAbiertoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_OSCerrarPalletPKOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_OSListarPartidasOSPrecargaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_OSSurtirPalletPrecargaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_OSSugerirPalletPrecargaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaPedidoSurtidoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaSurtidoDetPartidaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaEmpaqueSurtidoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaPalletSurtidoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaPalletSurtido_NEOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaContenedorSurtidoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaValidacionPalletOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_PalletsArmadoPedidoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaTarimaConsolidadaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaTarimaConsolidada_NEOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_RegistroEmpaqueSurtidoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_RegistroEmpaqueSurtido_NEOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_RegistroPalletSurtidoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_RegistroPalletSurtidoMultPartOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_CierraPalletSurtidoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaPalletSugeridoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaEmpaqueSugeridoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaEmpaqueSugerido_NEOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaContenedorSugeridoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_ConsultaEmpaqueEntregaSurtidoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_EntregaSurtidoLineaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_AlmacenaEmbarqueOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WM_RegistroEmpaqueSurtidoOSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.AXCVDE.Settings.Default.AXCVDE_wsAXC_wsAXCMP
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event WM_BajaEmpaqueArmadoTarimasCompleted As WM_BajaEmpaqueArmadoTarimasCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_CerrarRegistroPalletCompleted As WM_CerrarRegistroPalletCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_CancelarRegistroPalletCompleted As WM_CancelarRegistroPalletCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaOrdenesReabastecimientoCompleted As WM_ConsultaOrdenesReabastecimientoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaOrdenesReabastecimientoDetCompleted As WM_ConsultaOrdenesReabastecimientoDetCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaUbicacionPKCompleted As WM_ConsultaUbicacionPKCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ReabastecePalletCompleted As WM_ReabastecePalletCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ReabasteceEmpaqueCompleted As WM_ReabasteceEmpaqueCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ReabastecePiezasCompleted As WM_ReabastecePiezasCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ReabastecePalletSOCompleted As WM_ReabastecePalletSOCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ReabasteceEmpaqueSOCompleted As WM_ReabasteceEmpaqueSOCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ReabastecePiezasSOCompleted As WM_ReabastecePiezasSOCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaContenedorCompleted As WM_ConsultaContenedorCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaEmpaqueOSKUCompleted As WM_ConsultaEmpaqueOSKUCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaContenedorAjustesCompleted As WM_ConsultaContenedorAjustesCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_SugierePosicionContenedorCompleted As WM_SugierePosicionContenedorCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_OCContenedorSKUCompleted As WM_OCContenedorSKUCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaPosicionPisoPalletOCCompleted As WM_ConsultaPosicionPisoPalletOCCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_OCContenedorCompleted As WM_OCContenedorCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ReubicarContenedorCompleted As WM_ReubicarContenedorCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ReubicarEmpaqueCompleted As WM_ReubicarEmpaqueCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ImprimeSKUCompleted As WM_ImprimeSKUCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ImpContenedorCompleted As WM_ImpContenedorCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ReimprimeContenedorCompleted As WM_ReimprimeContenedorCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_GuardaFotoCompleted As WM_GuardaFotoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_EliminaImagenCompleted As WM_EliminaImagenCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaImagenNumParteCompleted As WM_ConsultaImagenNumParteCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ListaArticulosCompleted As WM_ListaArticulosCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_FotoNumParteCompleted As WM_FotoNumParteCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaEmpaquesPorPalletInventario_NECompleted As WM_ConsultaEmpaquesPorPalletInventario_NECompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaEmpaqueInventarioCompleted As WM_ConsultaEmpaqueInventarioCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_RegistraPalletInvSinCambioCompleted As WM_RegistraPalletInvSinCambioCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_BajaPalletInventarioCompleted As WM_BajaPalletInventarioCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_BajaEmpaqueInventarioCompleted As WM_BajaEmpaqueInventarioCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_EditaRegistroContenedorInventarioCompleted As WM_EditaRegistroContenedorInventarioCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_BajaEmpaquesInventario_NECompleted As WM_BajaEmpaquesInventario_NECompletedEventHandler
        
        '''<remarks/>
        Public Event WM_EditaRegistroPalletInventarioCompleted As WM_EditaRegistroPalletInventarioCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_RegistraEmpaqueNuevoPalletInventario_OLDCompleted As WM_RegistraEmpaqueNuevoPalletInventario_OLDCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_RegistraEmpaqueNuevoPalletInventarioCompleted As WM_RegistraEmpaqueNuevoPalletInventarioCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_RegistraEmpaqueNuevoPalletInventario_NECompleted As WM_RegistraEmpaqueNuevoPalletInventario_NECompletedEventHandler
        
        '''<remarks/>
        Public Event WM_CierraPalletInventarioCompleted As WM_CierraPalletInventarioCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultarPalletAbiertoInvCompleted As WM_ConsultarPalletAbiertoInvCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultarPalletAbiertoInv_NECompleted As WM_ConsultarPalletAbiertoInv_NECompletedEventHandler
        
        '''<remarks/>
        Public Event WM_RegistraEmpaqueInventarioPKCompleted As WM_RegistraEmpaqueInventarioPKCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_RegistraEmpaqueInventarioCompleted As WM_RegistraEmpaqueInventarioCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_RegistraEmpaqueInventario_NECompleted As WM_RegistraEmpaqueInventario_NECompletedEventHandler
        
        '''<remarks/>
        Public Event WM_RegistraNuevoEmpaquePalletInventarioCompleted As WM_RegistraNuevoEmpaquePalletInventarioCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_RegistraNuevoEmpaquePalletInventarioPickingCompleted As WM_RegistraNuevoEmpaquePalletInventarioPickingCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_RegistraNuevoEmpaquePalletInventarioConLoteCompleted As WM_RegistraNuevoEmpaquePalletInventarioConLoteCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_EditaRegistroEmpaqueInventarioPKCompleted As WM_EditaRegistroEmpaqueInventarioPKCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_EditaRegistroEmpaqueInventarioCompleted As WM_EditaRegistroEmpaqueInventarioCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_EditaRegistroEmpaqueInventarioConLoteCompleted As WM_EditaRegistroEmpaqueInventarioConLoteCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_InventarioSugiereArticuloCompleted As WM_InventarioSugiereArticuloCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_InventarioSugierePosicionCompleted As WM_InventarioSugierePosicionCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_EscanearEmpaqueInvCompleted As WM_EscanearEmpaqueInvCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_BajaEmpaqueInvCompleted As WM_BajaEmpaqueInvCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_EditarEmpaqueInvCompleted As WM_EditarEmpaqueInvCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaInventariosNumParteAbiertosCompleted As WM_ConsultaInventariosNumParteAbiertosCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_AjusteBajaEmpaqueCompleted As WM_AjusteBajaEmpaqueCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_AjusteContenedorPositivoNumParteCompleted As WM_AjusteContenedorPositivoNumParteCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_AjusteContenedorPositivoCompleted As WM_AjusteContenedorPositivoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_AjusteContenedorPositivoSKUCompleted As WM_AjusteContenedorPositivoSKUCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_AjusteContenedorNegativoCompleted As WM_AjusteContenedorNegativoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_AjusteBajaEmpaque_SelProd_NECompleted As WM_AjusteBajaEmpaque_SelProd_NECompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaPalletBajaEmpaquesCompleted As WM_ConsultaPalletBajaEmpaquesCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_AjusteBajaPalletCompleted As WM_AjusteBajaPalletCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_AjusteNuevoEmpaquePalletExistenteCompleted As WM_AjusteNuevoEmpaquePalletExistenteCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_AjusteNuevoEmpaquePalletExistentePedimentoCompleted As WM_AjusteNuevoEmpaquePalletExistentePedimentoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_AjusteNuevoEmpaquePalletExistente_NECompleted As WM_AjusteNuevoEmpaquePalletExistente_NECompletedEventHandler
        
        '''<remarks/>
        Public Event WM_AjusteCierraNuevoPalletCompleted As WM_AjusteCierraNuevoPalletCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ListarAjustesCompleted As WM_ListarAjustesCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ListarConceptosAjusteCompleted As WM_ListarConceptosAjusteCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_AjusteConsultarPalletAbiertoCompleted As WM_AjusteConsultarPalletAbiertoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_AjusteNuevoEmpaqueNuevoPalletCompleted As WM_AjusteNuevoEmpaqueNuevoPalletCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_RegistraEmpaqueNvoPalletCompleted As WM_RegistraEmpaqueNvoPalletCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_RegistraEmpaqueNvoPalletv2Completed As WM_RegistraEmpaqueNvoPalletv2CompletedEventHandler
        
        '''<remarks/>
        Public Event WM_RegistraEmpaqueNvoPallet_NECompleted As WM_RegistraEmpaqueNvoPallet_NECompletedEventHandler
        
        '''<remarks/>
        Public Event WM_CierraPalletAjusteCompleted As WM_CierraPalletAjusteCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_RegistraAjusteNvoPalletCompleted As WM_RegistraAjusteNvoPalletCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_AjusteNuevoEmpaque_NECompleted As WM_AjusteNuevoEmpaque_NECompletedEventHandler
        
        '''<remarks/>
        Public Event WM_CuarentenaPalletCompleted As WM_CuarentenaPalletCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_CuarentenaEmpaqueCompleted As WM_CuarentenaEmpaqueCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ImprimeEtiquetaEmpaqueCompleted As WM_ImprimeEtiquetaEmpaqueCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ImpEtiquetaEmpaqueCompleted As WM_ImpEtiquetaEmpaqueCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaPalletAColocarCompleted As WM_ConsultaPalletAColocarCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_CuarentenaRecuperaPalletCompletoCompleted As WM_CuarentenaRecuperaPalletCompletoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaPalletAConsolidarCompleted As WM_ConsultaPalletAConsolidarCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaPalletConsCompleted As WM_ConsultaPalletConsCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_CreaPalletConsCompleted As WM_CreaPalletConsCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaEmpaquesCarritoCompleted As WM_ConsultaEmpaquesCarritoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaPedidoSurtidoReempaqueCompleted As WM_ConsultaPedidoSurtidoReempaqueCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_CreaPalletReempaqueCompleted As WM_CreaPalletReempaqueCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_CerrarReempaqueCompleted As WM_CerrarReempaqueCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_CancelaReempaqueCompleted As WM_CancelaReempaqueCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_OSConsultaPalletConsAbiertoCompleted As WM_OSConsultaPalletConsAbiertoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_RegistraEmpaqueConsCompleted As WM_RegistraEmpaqueConsCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_RegistraConsolidacion_NECompleted As WM_RegistraConsolidacion_NECompletedEventHandler
        
        '''<remarks/>
        Public Event WM_RegistraEmpaqueCons_NE_oldCompleted As WM_RegistraEmpaqueCons_NE_oldCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_CancelaConsolidacionCompleted As WM_CancelaConsolidacionCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_CerrarConsolidacionCompleted As WM_CerrarConsolidacionCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaPalletReempaqueCompleted As WM_ConsultaPalletReempaqueCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_RegistraReempaque_NECompleted As WM_RegistraReempaque_NECompletedEventHandler
        
        '''<remarks/>
        Public Event WM_RegistraReempaqueCompleted As WM_RegistraReempaqueCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_RegistraReempaquePiezasCompleted As WM_RegistraReempaquePiezasCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_RegistraReempaqueSKUCompleted As WM_RegistraReempaqueSKUCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaOrdenSurtidoCompleted As WM_ConsultaOrdenSurtidoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaOrdenSurtido_ReempaqueCompleted As WM_ConsultaOrdenSurtido_ReempaqueCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaListaConsolidadosReempaqueCompleted As WM_ConsultaListaConsolidadosReempaqueCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ListaEmbarqueValidadasDetCompleted As WM_ListaEmbarqueValidadasDetCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_CancelaEmbarqueValidadoCompleted As WM_CancelaEmbarqueValidadoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ListarPartidasRecepcionTraspasoCompleted As WM_ListarPartidasRecepcionTraspasoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_DetallePartidaTraspasoCompleted As WM_DetallePartidaTraspasoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_PrimeraUltimaTraspasoCompleted As WM_PrimeraUltimaTraspasoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_CierreParcialEnvioTraspasoCompleted As WM_CierreParcialEnvioTraspasoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_CierreParcialTraspasoCompleted As WM_CierreParcialTraspasoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_RegistraEmpaqueTraspasoCompleted As WM_RegistraEmpaqueTraspasoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_CreaEmpaqueTraspasoNECompleted As WM_CreaEmpaqueTraspasoNECompletedEventHandler
        
        '''<remarks/>
        Public Event WM_OCCierraPalletTraspasoCompleted As WM_OCCierraPalletTraspasoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaPalletAbiertoTraspasoCompleted As WM_ConsultaPalletAbiertoTraspasoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultarPalletTraspaso_NECompleted As WM_ConsultarPalletTraspaso_NECompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaPalletTraspasoCompleted As WM_ConsultaPalletTraspasoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_RegistroTraspasoPalletEnvioCompleted As WM_RegistroTraspasoPalletEnvioCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_RegistroTraspasoEmpaqueEnvioCompleted As WM_RegistroTraspasoEmpaqueEnvioCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_RegistroTraspasoEmpaqueEnvio_NECompleted As WM_RegistroTraspasoEmpaqueEnvio_NECompletedEventHandler
        
        '''<remarks/>
        Public Event WM_RegistroPalletTraspasoMultPartCompleted As WM_RegistroPalletTraspasoMultPartCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_CierrePalletTraspasoEnvioCompleted As WM_CierrePalletTraspasoEnvioCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_RegistroTraspasoPalletConEtiquetasCompleted As WM_RegistroTraspasoPalletConEtiquetasCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_RegistroTraspasoNuevoPalletCompleted As WM_RegistroTraspasoNuevoPalletCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ListarTarimasRecibidasTraspasoCompleted As WM_ListarTarimasRecibidasTraspasoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_CancelarPalletTraspasoCompleted As WM_CancelarPalletTraspasoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_PrimeraUltimaTraspasoSelAlmCompleted As WM_PrimeraUltimaTraspasoSelAlmCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_RegistraEmpaqueTraspasoSelAlmCompleted As WM_RegistraEmpaqueTraspasoSelAlmCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_CreaEmpaqueTraspasoNESelAlmCompleted As WM_CreaEmpaqueTraspasoNESelAlmCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_PrimeraUltimaTraspasoSelAlm_SACompleted As WM_PrimeraUltimaTraspasoSelAlm_SACompletedEventHandler
        
        '''<remarks/>
        Public Event WM_RegistraEmpaqueTraspasoSelAlm_SACompleted As WM_RegistraEmpaqueTraspasoSelAlm_SACompletedEventHandler
        
        '''<remarks/>
        Public Event WM_CreaEmpaqueTraspasoNESelAlm_SACompleted As WM_CreaEmpaqueTraspasoNESelAlm_SACompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaTextosTraspasoCompleted As WM_ConsultaTextosTraspasoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_RegistroTextosTraspasoCompleted As WM_RegistroTextosTraspasoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ListarPartidasEnvioMaquilaCompleted As WM_ListarPartidasEnvioMaquilaCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultarPartidaEnvioMaquilaCompleted As WM_ConsultarPartidaEnvioMaquilaCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_EnviaEmpaqueMaquilaCompleted As WM_EnviaEmpaqueMaquilaCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_EnviaPalletMaquilaCompleted As WM_EnviaPalletMaquilaCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_SugierePalletEnvioMaquilaCompleted As WM_SugierePalletEnvioMaquilaCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaOrdenProduccionCompleted As WM_ConsultaOrdenProduccionCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaOrdenProduccion_v2Completed As WM_ConsultaOrdenProduccion_v2CompletedEventHandler
        
        '''<remarks/>
        Public Event WM_CerrarOrdenProduccionCompleted As WM_CerrarOrdenProduccionCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_CerrarOrdenProduccion_v2Completed As WM_CerrarOrdenProduccion_v2CompletedEventHandler
        
        '''<remarks/>
        Public Event WM_RegistraCantidadOrdenProduccionCompleted As WM_RegistraCantidadOrdenProduccionCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_RegistraSobranteOrdenProduccionCompleted As WM_RegistraSobranteOrdenProduccionCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_RegistraFechaCadOrdenProdCompleted As WM_RegistraFechaCadOrdenProdCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaOrdenProduccionDetCompleted As WM_ConsultaOrdenProduccionDetCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaEmpaquesArmadoProdCompleted As WM_ConsultaEmpaquesArmadoProdCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaEmpaquesArmadoProd_NECompleted As WM_ConsultaEmpaquesArmadoProd_NECompletedEventHandler
        
        '''<remarks/>
        Public Event WM_RegistraEmpaqueEnPalletCompleted As WM_RegistraEmpaqueEnPalletCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_RegistraEmpaqueEnPalletPrimeraYUltimaCompleted As WM_RegistraEmpaqueEnPalletPrimeraYUltimaCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_CreaEmpaqueNECompleted As WM_CreaEmpaqueNECompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaCarritoSurtidoCompleted As WM_ConsultaCarritoSurtidoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaPisoSugeridoCompleted As WM_ConsultaPisoSugeridoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaPisoSurtidoCompleted As WM_ConsultaPisoSurtidoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_RegistroPisoSurtidoCompleted As WM_RegistroPisoSurtidoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaEmbarqueValidarTotalesCompleted As WM_ConsultaEmbarqueValidarTotalesCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaEmbarqueValidarEmpaquesCompleted As WM_ConsultaEmbarqueValidarEmpaquesCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaEmbarqueValidarPalletsCompleted As WM_ConsultaEmbarqueValidarPalletsCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ValidaEmbEmpaqueCompleted As WM_ValidaEmbEmpaqueCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ValidaEmbPalletCompleted As WM_ValidaEmbPalletCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_RegistrarEmbMaterialCompleted As WM_RegistrarEmbMaterialCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaPalletSugeridoTraspasoEnvioCompleted As WM_ConsultaPalletSugeridoTraspasoEnvioCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaPalletSugeridoTraspasoEnvio_NECompleted As WM_ConsultaPalletSugeridoTraspasoEnvio_NECompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaTarimaArmadoTraspasoCompleted As WM_ConsultaTarimaArmadoTraspasoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaTarimaArmadoTraspaso_NECompleted As WM_ConsultaTarimaArmadoTraspaso_NECompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaEmpaqueSugeridoTraspasoEnvioCompleted As WM_ConsultaEmpaqueSugeridoTraspasoEnvioCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultarPisoTraspasoCompleted As WM_ConsultarPisoTraspasoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_RegistroTraspasoPisoEnvioCompleted As WM_RegistroTraspasoPisoEnvioCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaPisoSugeridoTraspasoCompleted As WM_ConsultaPisoSugeridoTraspasoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaRechazoPalletTraspCompleted As WM_ConsultaRechazoPalletTraspCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_RechazoPalletTraspCompleted As WM_RechazoPalletTraspCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_OSListarPartidasAValidarCompleted As WM_OSListarPartidasAValidarCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_OSConsultarPalletAValidarCompleted As WM_OSConsultarPalletAValidarCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_OSRegistrarEmpaqueRechazadoCompleted As WM_OSRegistrarEmpaqueRechazadoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_OSRegistrarPalletLineaRechazadoCompleted As WM_OSRegistrarPalletLineaRechazadoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_OSRegistrarPalletAndenValidadoCompleted As WM_OSRegistrarPalletAndenValidadoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_OSRegistrarEmpaqueAndenRechazadoCompleted As WM_OSRegistrarEmpaqueAndenRechazadoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_OSRegistrarPalletAndenRechazadoCompleted As WM_OSRegistrarPalletAndenRechazadoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_OSListarPalletsAEntregarCompleted As WM_OSListarPalletsAEntregarCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_OSRegistrarPalletEntregadoCompleted As WM_OSRegistrarPalletEntregadoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_OSRegistraEntregaAndenCompleted As WM_OSRegistraEntregaAndenCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_OSRegistraEmbarqueAndenCompleted As WM_OSRegistraEmbarqueAndenCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_OSRegistraRecibePalletP2Completed As WM_OSRegistraRecibePalletP2CompletedEventHandler
        
        '''<remarks/>
        Public Event WM_KanbanListarPartidasOrdenesSurtidoCompleted As WM_KanbanListarPartidasOrdenesSurtidoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_KanbanConsultaPartidaOrdenesSurtidoCompleted As WM_KanbanConsultaPartidaOrdenesSurtidoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_KanbanConsultaPalletASurtirCompleted As WM_KanbanConsultaPalletASurtirCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_KanbanConsultaEmpaqueASurtirCompleted As WM_KanbanConsultaEmpaqueASurtirCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_KanbanSugerirPalletCompleted As WM_KanbanSugerirPalletCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_KanbanSugerirEmpaqueCompleted As WM_KanbanSugerirEmpaqueCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_KanbanSurtirPalletCompleted As WM_KanbanSurtirPalletCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_KanbanSurtirEmpaqueCompleted As WM_KanbanSurtirEmpaqueCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_KanbanSurtirPiezasCompleted As WM_KanbanSurtirPiezasCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_KanbanConsultaPalletPKAbiertoCompleted As WM_KanbanConsultaPalletPKAbiertoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_KanbanCerrarPalletPKCompleted As WM_KanbanCerrarPalletPKCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_KBListarPartidasAValidarCompleted As WM_KBListarPartidasAValidarCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_KBConsultarPalletAValidarCompleted As WM_KBConsultarPalletAValidarCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_KBRegistrarPalletLineaValidadoCompleted As WM_KBRegistrarPalletLineaValidadoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_KBRegistrarEmpaqueLineaRechazadoCompleted As WM_KBRegistrarEmpaqueLineaRechazadoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_KBRegistrarPalletLineaRechazadoCompleted As WM_KBRegistrarPalletLineaRechazadoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_KBRegistrarPalletAndenValidadoCompleted As WM_KBRegistrarPalletAndenValidadoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_KBRegistrarEmpaqueAndenRechazadoCompleted As WM_KBRegistrarEmpaqueAndenRechazadoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_KBRegistrarPalletAndenRechazadoCompleted As WM_KBRegistrarPalletAndenRechazadoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_KBListarPalletsAEntregarCompleted As WM_KBListarPalletsAEntregarCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_KBRegistrarPalletEntregadoCompleted As WM_KBRegistrarPalletEntregadoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_KBRegistraRecibePalletP2Completed As WM_KBRegistraRecibePalletP2CompletedEventHandler
        
        '''<remarks/>
        Public Event WM_KBRegistraEntregaAndenCompleted As WM_KBRegistraEntregaAndenCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_KBRegistraEmbarqueAndenCompleted As WM_KBRegistraEmbarqueAndenCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ListarOrdenesRecepcionLiberadasCompleted As WM_ListarOrdenesRecepcionLiberadasCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ListarPartidasORLiberadasCompleted As WM_ListarPartidasORLiberadasCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ListarOrdenesRecepcionRecibidasCompleted As WM_ListarOrdenesRecepcionRecibidasCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultarEmpaqueCompleted As WM_ConsultarEmpaqueCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaEmpaqueCompleted As WM_ConsultaEmpaqueCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaEmpaqueMPCompleted As WM_ConsultaEmpaqueMPCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaEmpaqueReabasteceCompleted As WM_ConsultaEmpaqueReabasteceCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_BajaPiezasSACompleted As WM_BajaPiezasSACompletedEventHandler
        
        '''<remarks/>
        Public Event WM_BajaEmpaqueSACompleted As WM_BajaEmpaqueSACompletedEventHandler
        
        '''<remarks/>
        Public Event WM_BajaPalletSACompleted As WM_BajaPalletSACompletedEventHandler
        
        '''<remarks/>
        Public Event WM_RegistraEmpaqueSACompleted As WM_RegistraEmpaqueSACompletedEventHandler
        
        '''<remarks/>
        Public Event WM_RegistraEmpaqueKanbanSACompleted As WM_RegistraEmpaqueKanbanSACompletedEventHandler
        
        '''<remarks/>
        Public Event WM_CierraPalletSACompleted As WM_CierraPalletSACompletedEventHandler
        
        '''<remarks/>
        Public Event WM_CancelaPalletSACompleted As WM_CancelaPalletSACompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultarPalletAbiertoSinAfectaCompleted As WM_ConsultarPalletAbiertoSinAfectaCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaExisteNumParteCompleted As WM_ConsultaExisteNumParteCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaAlmacenCompleted As WM_ConsultaAlmacenCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ReimprimeEmpaquePTCompleted As WM_ReimprimeEmpaquePTCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ImprimeEtiquetaEmpaquesPalletCompleted As WM_ImprimeEtiquetaEmpaquesPalletCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_OCImprimeEtiquetasCompleted As WM_OCImprimeEtiquetasCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ImprimeEtiquetasPalletCompleted As WM_ImprimeEtiquetasPalletCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ImprimeCredencialUsuarioCompleted As WM_ImprimeCredencialUsuarioCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ImprimeEtiquetaPosicionCompleted As WM_ImprimeEtiquetaPosicionCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ImprimeEtiquetaLineaCompleted As WM_ImprimeEtiquetaLineaCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ReimprimeEtiquetaEmpaqueCompleted As WM_ReimprimeEtiquetaEmpaqueCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ImprimeEtiquetaKanbanCompleted As WM_ImprimeEtiquetaKanbanCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ReimprimeRempaqueCompleted As WM_ReimprimeRempaqueCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ReimprimePalletMPCompleted As WM_ReimprimePalletMPCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ImprimeEtiquetaInvCompleted As WM_ImprimeEtiquetaInvCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaEmpaquesPallet_ImpresionCompleted As WM_ConsultaEmpaquesPallet_ImpresionCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_BuscarUbicacionCompleted As WM_BuscarUbicacionCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaReferenciaCompleted As WM_ConsultaReferenciaCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_BuscaArticuloCICompleted As WM_BuscaArticuloCICompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaCoincidenciaArticuloCompleted As WM_ConsultaCoincidenciaArticuloCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaPalletArticuloCompleted As WM_ConsultaPalletArticuloCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ListaBloqueadosCompleted As WM_ListaBloqueadosCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultarPalletPKCompleted As WM_ConsultarPalletPKCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_DevolucionDetCompleted As WM_DevolucionDetCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ListarPartidasDevolucionCompleted As WM_ListarPartidasDevolucionCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_OCRegistrarEmpaqueDevolucionCompleted As WM_OCRegistrarEmpaqueDevolucionCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_PrimeraUltimaEmpaqueDevCompleted As WM_PrimeraUltimaEmpaqueDevCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_OCRegistrarEmpaqueSEDevolucionCompleted As WM_OCRegistrarEmpaqueSEDevolucionCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_OCCierraPalletDevolucionCompleted As WM_OCCierraPalletDevolucionCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultarPalletAbiertoDevCompleted As WM_ConsultarPalletAbiertoDevCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ListarLotesDevCompleted As WM_ListarLotesDevCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_CreaLoteRecepcionDevCompleted As WM_CreaLoteRecepcionDevCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_RegistroINIEmbalajeCompleted As WM_RegistroINIEmbalajeCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_RegistraINIEmpaqueCompleted As WM_RegistraINIEmpaqueCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_RegistroINIEtiquetaIndividualCompleted As WM_RegistroINIEtiquetaIndividualCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_BajaInventarioPalletCompleted As WM_BajaInventarioPalletCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_BajaInventarioEmpaqueCompleted As WM_BajaInventarioEmpaqueCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_CierraEntregaParcialCompleted As WM_CierraEntregaParcialCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ListarTransfersLiberadosCompleted As WM_ListarTransfersLiberadosCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ListarPartidasInterorgSalidaLiberadoCompleted As WM_ListarPartidasInterorgSalidaLiberadoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_RegistraPalletInterorgSalidaCompleted As WM_RegistraPalletInterorgSalidaCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_RegistraEmpaqueInterorgSalidaCompleted As WM_RegistraEmpaqueInterorgSalidaCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ListarTransfersARecibirCompleted As WM_ListarTransfersARecibirCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ListarPartidasLiberadasCompleted As WM_ListarPartidasLiberadasCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_RecibePalletTransferCompleted As WM_RecibePalletTransferCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaPalletsTransferCompleted As WM_ConsultaPalletsTransferCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaInvFisicoCompleted As WM_ConsultaInvFisicoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaInvCiclicoNumParteCompleted As WM_ConsultaInvCiclicoNumParteCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaInvCiclicoPosicionCompleted As WM_ConsultaInvCiclicoPosicionCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaInvCiclicoPorLoteCompleted As WM_ConsultaInvCiclicoPorLoteCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaInventarioNumParteCompleted As WM_ConsultaInventarioNumParteCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaInventarioPosicionCompleted As WM_ConsultaInventarioPosicionCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_INVConsultaUbicacionCompleted As WM_INVConsultaUbicacionCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_EmpaquesPorPisoInventarioCompleted As WM_EmpaquesPorPisoInventarioCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaPalletInventarioCompleted As WM_ConsultaPalletInventarioCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaEmpaquesPorPalletInventarioCompleted As WM_ConsultaEmpaquesPorPalletInventarioCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaEmpaquesPosicionPickingInvCompleted As WM_ConsultaEmpaquesPosicionPickingInvCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_DetallePedimentosCompleted As WM_DetallePedimentosCompletedEventHandler
        
        '''<remarks/>
        Public Event HelloWorldCompleted As HelloWorldCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ComprobacionBDCompleted As WM_ComprobacionBDCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ListaImpresorasCompleted As WM_ListaImpresorasCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ImprimePKCompleted As WM_ImprimePKCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ReImprimePKCompleted As WM_ReImprimePKCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_CapturaEmpaqueCompleted As WM_CapturaEmpaqueCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ReImprimeSubensambleCompleted As WM_ReImprimeSubensambleCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaLineaCompleted As WM_ConsultaLineaCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ListaMercadosCompleted As WM_ListaMercadosCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_CambiaMercadoCompleted As WM_CambiaMercadoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ReimprimirEtiquetasMercadoCompleted As WM_ReimprimirEtiquetasMercadoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_LoginCompleted As WM_LoginCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaAreasCompleted As WM_ConsultaAreasCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ActualizaAreaCompleted As WM_ActualizaAreaCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaVersionCompleted As WM_ConsultaVersionCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultarNotificacionesCompleted As WM_ConsultarNotificacionesCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ImprimeCredencialesCompleted As WM_ImprimeCredencialesCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_OCRegistrarEmpaqueDaPCompleted As WM_OCRegistrarEmpaqueDaPCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_OrdenCompraLiberadaCompleted As WM_OrdenCompraLiberadaCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ListarPartidasOCLiberadasCompleted As WM_ListarPartidasOCLiberadasCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ListarPartidasOCEnProcesoCompleted As WM_ListarPartidasOCEnProcesoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_DetalleReciboPartidaCompleted As WM_DetalleReciboPartidaCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ListarOrdenesCompraLiberadasCompleted As WM_ListarOrdenesCompraLiberadasCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ListarLotesOCCompleted As WM_ListarLotesOCCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_OCRegistrarEmpaqueCompraCompleted As WM_OCRegistrarEmpaqueCompraCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_OCRegistrarPalletCompra_NECompleted As WM_OCRegistrarPalletCompra_NECompletedEventHandler
        
        '''<remarks/>
        Public Event WM_RegistrarRefaccionesSKUCompleted As WM_RegistrarRefaccionesSKUCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_RegistrarRefaccionesSKUPiezasCompleted As WM_RegistrarRefaccionesSKUPiezasCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_RegistrarPalletGranelCompleted As WM_RegistrarPalletGranelCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_OCRegistrarEmpaqueCompra_MercadoCompleted As WM_OCRegistrarEmpaqueCompra_MercadoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_RegistrarPalletGranel_MercadoCompleted As WM_RegistrarPalletGranel_MercadoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_OCRegistrarPalletCompra_NE_MercadoCompleted As WM_OCRegistrarPalletCompra_NE_MercadoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_OCCreaPalletMPPrimeraUltima_MercadoCompleted As WM_OCCreaPalletMPPrimeraUltima_MercadoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_OCRegistrarPalletCompra_NE_Mercado_SACompleted As WM_OCRegistrarPalletCompra_NE_Mercado_SACompletedEventHandler
        
        '''<remarks/>
        Public Event WM_OCRegistrarEmpaqueCompra_Mercado_SACompleted As WM_OCRegistrarEmpaqueCompra_Mercado_SACompletedEventHandler
        
        '''<remarks/>
        Public Event WM_RegistrarPalletGranel_Mercado_SACompleted As WM_RegistrarPalletGranel_Mercado_SACompletedEventHandler
        
        '''<remarks/>
        Public Event WM_OCCreaPalletMPPrimeraUltima_Mercado_SACompleted As WM_OCCreaPalletMPPrimeraUltima_Mercado_SACompletedEventHandler
        
        '''<remarks/>
        Public Event WM_OCRegistrarEmpaqueCompraKanbanCompleted As WM_OCRegistrarEmpaqueCompraKanbanCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_OCCierraPalletMPCompraCompleted As WM_OCCierraPalletMPCompraCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_OCCierraPalletCompraRefaccionesCompleted As WM_OCCierraPalletCompraRefaccionesCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_CosultaEmpaquesOCCompleted As WM_CosultaEmpaquesOCCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_DelEmpaqueOrdenRecepcionCompleted As WM_DelEmpaqueOrdenRecepcionCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_CreaLoteRecepcionOCCompleted As WM_CreaLoteRecepcionOCCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_OCCreaPalletMPCompraUnicoCompleted As WM_OCCreaPalletMPCompraUnicoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultarPalletAbiertoOCCompleted As WM_ConsultarPalletAbiertoOCCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaPalletArmadoOCCompleted As WM_ConsultaPalletArmadoOCCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaPosicionPisoOCCompleted As WM_ConsultaPosicionPisoOCCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_OCCreaPalletMPPrimeraUltimaCompleted As WM_OCCreaPalletMPPrimeraUltimaCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ListarOCLiberadasCompleted As WM_ListarOCLiberadasCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_CerrarRecepcionCompleted As WM_CerrarRecepcionCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ListarOrdenesCompraQACompleted As WM_ListarOrdenesCompraQACompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ListarPartidasORQACompleted As WM_ListarPartidasORQACompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaEmpaqueMuestreoCompleted As WM_ConsultaEmpaqueMuestreoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_QAAceptaEmpaqueCompleted As WM_QAAceptaEmpaqueCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_QARechazaEmpaqueCompleted As WM_QARechazaEmpaqueCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_QARechazoTotalCompleted As WM_QARechazoTotalCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_QATerminarProcesoCompleted As WM_QATerminarProcesoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_CierraPalletRechazadoCompleted As WM_CierraPalletRechazadoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_MoverEmpaqueACuarentenaCompleted As WM_MoverEmpaqueACuarentenaCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_MoverContenedorACuarentenaCompleted As WM_MoverContenedorACuarentenaCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_MoverEmpaqueADisponibleCompleted As WM_MoverEmpaqueADisponibleCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_MoverContenedorADisponibleCompleted As WM_MoverContenedorADisponibleCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_CuarentenaRecuperaEmpaqueCompleted As WM_CuarentenaRecuperaEmpaqueCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_CuarentenaBajaPalletCompleted As WM_CuarentenaBajaPalletCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_CuarentenaBajaEmpaqueCompleted As WM_CuarentenaBajaEmpaqueCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultarPalletAbiertoCuarentenaCompleted As WM_ConsultarPalletAbiertoCuarentenaCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_CierraPalletMPCuarentenaCompleted As WM_CierraPalletMPCuarentenaCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_CuarentenaMarcaPalletCompleted As WM_CuarentenaMarcaPalletCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultarPalletPTCompleted As WM_ConsultarPalletPTCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultarPalletReabasteceCompleted As WM_ConsultarPalletReabasteceCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaEmpaquesPallet_NECompleted As WM_ConsultaEmpaquesPallet_NECompletedEventHandler
        
        '''<remarks/>
        Public Event WM_SugierePosicionCompleted As WM_SugierePosicionCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ColocaPalletCompleted As WM_ColocaPalletCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ColocaPalletKanbanCompleted As WM_ColocaPalletKanbanCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ReubicarEmbalajeCompleted As WM_ReubicarEmbalajeCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ContenedorSugeridoReubicacionCompleted As WM_ContenedorSugeridoReubicacionCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaEmpaqueMultipleSKUCompleted As WM_ConsultaEmpaqueMultipleSKUCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaPosicionCompleted As WM_ConsultaPosicionCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ReubicarProductoPorCantidadesCompleted As WM_ReubicarProductoPorCantidadesCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ReubicarProductoPorSKUCompleted As WM_ReubicarProductoPorSKUCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ReubicarProductoPorSKUPiezasCompleted As WM_ReubicarProductoPorSKUPiezasCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ReabastecePickingCompleted As WM_ReabastecePickingCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ReabastecePickingKanbanCompleted As WM_ReabastecePickingKanbanCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaMaquinasCompleted As WM_ConsultaMaquinasCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaPartidasMaquilaCompleted As WM_ConsultaPartidasMaquilaCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaPartidasSpinnerCompleted As WM_ConsultaPartidasSpinnerCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_OSListarPartidasOrdenesSurtidoCompleted As WM_OSListarPartidasOrdenesSurtidoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_OSConsultaPartidaOrdenesSurtidoCompleted As WM_OSConsultaPartidaOrdenesSurtidoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaPalletASurtirCompleted As WM_ConsultaPalletASurtirCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaEmpaqueASurtirCompleted As WM_ConsultaEmpaqueASurtirCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_OSSugerirPalletCompleted As WM_OSSugerirPalletCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_OSSugerirEmpaqueCompleted As WM_OSSugerirEmpaqueCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_OSSugerirEmpaqueUnidadCompleted As WM_OSSugerirEmpaqueUnidadCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_OSSurtirPalletCompleted As WM_OSSurtirPalletCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_OSSurtirEmpaqueCompleted As WM_OSSurtirEmpaqueCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_OSSurtirEmpaques_NECompleted As WM_OSSurtirEmpaques_NECompletedEventHandler
        
        '''<remarks/>
        Public Event WM_OSSurtirPiezasCompleted As WM_OSSurtirPiezasCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_OSSurtirPiezasSKUCompleted As WM_OSSurtirPiezasSKUCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_OSCancelarSurtPiezasCompleted As WM_OSCancelarSurtPiezasCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_OSConsultaPalletPKAbiertoCompleted As WM_OSConsultaPalletPKAbiertoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_OSCerrarPalletPKCompleted As WM_OSCerrarPalletPKCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_OSListarPartidasOSPrecargaCompleted As WM_OSListarPartidasOSPrecargaCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_OSSurtirPalletPrecargaCompleted As WM_OSSurtirPalletPrecargaCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_OSSugerirPalletPrecargaCompleted As WM_OSSugerirPalletPrecargaCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaPedidoSurtidoCompleted As WM_ConsultaPedidoSurtidoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaSurtidoDetPartidaCompleted As WM_ConsultaSurtidoDetPartidaCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaEmpaqueSurtidoCompleted As WM_ConsultaEmpaqueSurtidoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaPalletSurtidoCompleted As WM_ConsultaPalletSurtidoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaPalletSurtido_NECompleted As WM_ConsultaPalletSurtido_NECompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaContenedorSurtidoCompleted As WM_ConsultaContenedorSurtidoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaValidacionPalletCompleted As WM_ConsultaValidacionPalletCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_PalletsArmadoPedidoCompleted As WM_PalletsArmadoPedidoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaTarimaConsolidadaCompleted As WM_ConsultaTarimaConsolidadaCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaTarimaConsolidada_NECompleted As WM_ConsultaTarimaConsolidada_NECompletedEventHandler
        
        '''<remarks/>
        Public Event WM_RegistroEmpaqueSurtidoCompleted As WM_RegistroEmpaqueSurtidoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_RegistroEmpaqueSurtido_NECompleted As WM_RegistroEmpaqueSurtido_NECompletedEventHandler
        
        '''<remarks/>
        Public Event WM_RegistroPalletSurtidoCompleted As WM_RegistroPalletSurtidoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_RegistroPalletSurtidoMultPartCompleted As WM_RegistroPalletSurtidoMultPartCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_CierraPalletSurtidoCompleted As WM_CierraPalletSurtidoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaPalletSugeridoCompleted As WM_ConsultaPalletSugeridoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaEmpaqueSugeridoCompleted As WM_ConsultaEmpaqueSugeridoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaEmpaqueSugerido_NECompleted As WM_ConsultaEmpaqueSugerido_NECompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaContenedorSugeridoCompleted As WM_ConsultaContenedorSugeridoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_ConsultaEmpaqueEntregaSurtidoCompleted As WM_ConsultaEmpaqueEntregaSurtidoCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_EntregaSurtidoLineaCompleted As WM_EntregaSurtidoLineaCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_AlmacenaEmbarqueCompleted As WM_AlmacenaEmbarqueCompletedEventHandler
        
        '''<remarks/>
        Public Event WM_RegistroEmpaqueSurtidoOSCompleted As WM_RegistroEmpaqueSurtidoOSCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_BajaEmpaqueArmadoTarimas", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_BajaEmpaqueArmadoTarimas(ByVal prmOrden As String, ByVal prmEmpaque As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_BajaEmpaqueArmadoTarimas", New Object() {prmOrden, prmEmpaque, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_BajaEmpaqueArmadoTarimasAsync(ByVal prmOrden As String, ByVal prmEmpaque As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_BajaEmpaqueArmadoTarimasAsync(prmOrden, prmEmpaque, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_BajaEmpaqueArmadoTarimasAsync(ByVal prmOrden As String, ByVal prmEmpaque As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_BajaEmpaqueArmadoTarimasOperationCompleted Is Nothing) Then
                Me.WM_BajaEmpaqueArmadoTarimasOperationCompleted = AddressOf Me.OnWM_BajaEmpaqueArmadoTarimasOperationCompleted
            End If
            Me.InvokeAsync("WM_BajaEmpaqueArmadoTarimas", New Object() {prmOrden, prmEmpaque, prmEstacion, prmUsuario}, Me.WM_BajaEmpaqueArmadoTarimasOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_BajaEmpaqueArmadoTarimasOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_BajaEmpaqueArmadoTarimasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_BajaEmpaqueArmadoTarimasCompleted(Me, New WM_BajaEmpaqueArmadoTarimasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_CerrarRegistroPallet", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_CerrarRegistroPallet(ByVal prmOrdenProduccion As String, ByVal prmFechaCaducidad As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_CerrarRegistroPallet", New Object() {prmOrdenProduccion, prmFechaCaducidad, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_CerrarRegistroPalletAsync(ByVal prmOrdenProduccion As String, ByVal prmFechaCaducidad As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_CerrarRegistroPalletAsync(prmOrdenProduccion, prmFechaCaducidad, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_CerrarRegistroPalletAsync(ByVal prmOrdenProduccion As String, ByVal prmFechaCaducidad As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_CerrarRegistroPalletOperationCompleted Is Nothing) Then
                Me.WM_CerrarRegistroPalletOperationCompleted = AddressOf Me.OnWM_CerrarRegistroPalletOperationCompleted
            End If
            Me.InvokeAsync("WM_CerrarRegistroPallet", New Object() {prmOrdenProduccion, prmFechaCaducidad, prmEstacion, prmUsuario}, Me.WM_CerrarRegistroPalletOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_CerrarRegistroPalletOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_CerrarRegistroPalletCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_CerrarRegistroPalletCompleted(Me, New WM_CerrarRegistroPalletCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_CancelarRegistroPallet", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_CancelarRegistroPallet(ByVal prmOrdenProduccion As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_CancelarRegistroPallet", New Object() {prmOrdenProduccion, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_CancelarRegistroPalletAsync(ByVal prmOrdenProduccion As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_CancelarRegistroPalletAsync(prmOrdenProduccion, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_CancelarRegistroPalletAsync(ByVal prmOrdenProduccion As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_CancelarRegistroPalletOperationCompleted Is Nothing) Then
                Me.WM_CancelarRegistroPalletOperationCompleted = AddressOf Me.OnWM_CancelarRegistroPalletOperationCompleted
            End If
            Me.InvokeAsync("WM_CancelarRegistroPallet", New Object() {prmOrdenProduccion, prmEstacion, prmUsuario}, Me.WM_CancelarRegistroPalletOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_CancelarRegistroPalletOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_CancelarRegistroPalletCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_CancelarRegistroPalletCompleted(Me, New WM_CancelarRegistroPalletCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaOrdenesReabastecimiento", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaOrdenesReabastecimiento(ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaOrdenesReabastecimiento", New Object() {prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaOrdenesReabastecimientoAsync(ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaOrdenesReabastecimientoAsync(prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaOrdenesReabastecimientoAsync(ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaOrdenesReabastecimientoOperationCompleted Is Nothing) Then
                Me.WM_ConsultaOrdenesReabastecimientoOperationCompleted = AddressOf Me.OnWM_ConsultaOrdenesReabastecimientoOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaOrdenesReabastecimiento", New Object() {prmEstacion, prmUsuario}, Me.WM_ConsultaOrdenesReabastecimientoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaOrdenesReabastecimientoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaOrdenesReabastecimientoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaOrdenesReabastecimientoCompleted(Me, New WM_ConsultaOrdenesReabastecimientoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaOrdenesReabastecimientoDet", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaOrdenesReabastecimientoDet(ByVal prmDocumento As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaOrdenesReabastecimientoDet", New Object() {prmDocumento, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaOrdenesReabastecimientoDetAsync(ByVal prmDocumento As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaOrdenesReabastecimientoDetAsync(prmDocumento, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaOrdenesReabastecimientoDetAsync(ByVal prmDocumento As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaOrdenesReabastecimientoDetOperationCompleted Is Nothing) Then
                Me.WM_ConsultaOrdenesReabastecimientoDetOperationCompleted = AddressOf Me.OnWM_ConsultaOrdenesReabastecimientoDetOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaOrdenesReabastecimientoDet", New Object() {prmDocumento, prmEstacion, prmUsuario}, Me.WM_ConsultaOrdenesReabastecimientoDetOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaOrdenesReabastecimientoDetOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaOrdenesReabastecimientoDetCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaOrdenesReabastecimientoDetCompleted(Me, New WM_ConsultaOrdenesReabastecimientoDetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaUbicacionPK", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaUbicacionPK(ByVal prmUbicacion As String, ByVal prmNumParte As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaUbicacionPK", New Object() {prmUbicacion, prmNumParte})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaUbicacionPKAsync(ByVal prmUbicacion As String, ByVal prmNumParte As String)
            Me.WM_ConsultaUbicacionPKAsync(prmUbicacion, prmNumParte, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaUbicacionPKAsync(ByVal prmUbicacion As String, ByVal prmNumParte As String, ByVal userState As Object)
            If (Me.WM_ConsultaUbicacionPKOperationCompleted Is Nothing) Then
                Me.WM_ConsultaUbicacionPKOperationCompleted = AddressOf Me.OnWM_ConsultaUbicacionPKOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaUbicacionPK", New Object() {prmUbicacion, prmNumParte}, Me.WM_ConsultaUbicacionPKOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaUbicacionPKOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaUbicacionPKCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaUbicacionPKCompleted(Me, New WM_ConsultaUbicacionPKCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ReabastecePallet", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ReabastecePallet(ByVal prmOrden As String, ByVal prmPallet As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ReabastecePallet", New Object() {prmOrden, prmPallet, prmUbicacion, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ReabastecePalletAsync(ByVal prmOrden As String, ByVal prmPallet As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ReabastecePalletAsync(prmOrden, prmPallet, prmUbicacion, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ReabastecePalletAsync(ByVal prmOrden As String, ByVal prmPallet As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ReabastecePalletOperationCompleted Is Nothing) Then
                Me.WM_ReabastecePalletOperationCompleted = AddressOf Me.OnWM_ReabastecePalletOperationCompleted
            End If
            Me.InvokeAsync("WM_ReabastecePallet", New Object() {prmOrden, prmPallet, prmUbicacion, prmEstacion, prmUsuario}, Me.WM_ReabastecePalletOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ReabastecePalletOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ReabastecePalletCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ReabastecePalletCompleted(Me, New WM_ReabastecePalletCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ReabasteceEmpaque", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ReabasteceEmpaque(ByVal prmOrden As String, ByVal prmEmpaque As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ReabasteceEmpaque", New Object() {prmOrden, prmEmpaque, prmUbicacion, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ReabasteceEmpaqueAsync(ByVal prmOrden As String, ByVal prmEmpaque As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ReabasteceEmpaqueAsync(prmOrden, prmEmpaque, prmUbicacion, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ReabasteceEmpaqueAsync(ByVal prmOrden As String, ByVal prmEmpaque As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ReabasteceEmpaqueOperationCompleted Is Nothing) Then
                Me.WM_ReabasteceEmpaqueOperationCompleted = AddressOf Me.OnWM_ReabasteceEmpaqueOperationCompleted
            End If
            Me.InvokeAsync("WM_ReabasteceEmpaque", New Object() {prmOrden, prmEmpaque, prmUbicacion, prmEstacion, prmUsuario}, Me.WM_ReabasteceEmpaqueOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ReabasteceEmpaqueOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ReabasteceEmpaqueCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ReabasteceEmpaqueCompleted(Me, New WM_ReabasteceEmpaqueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ReabastecePiezas", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ReabastecePiezas(ByVal prmOrden As String, ByVal prmEmpaque As String, ByVal prmCantidad As Double, ByVal prmUbicacion As String, ByVal prmContenedor As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ReabastecePiezas", New Object() {prmOrden, prmEmpaque, prmCantidad, prmUbicacion, prmContenedor, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ReabastecePiezasAsync(ByVal prmOrden As String, ByVal prmEmpaque As String, ByVal prmCantidad As Double, ByVal prmUbicacion As String, ByVal prmContenedor As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ReabastecePiezasAsync(prmOrden, prmEmpaque, prmCantidad, prmUbicacion, prmContenedor, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ReabastecePiezasAsync(ByVal prmOrden As String, ByVal prmEmpaque As String, ByVal prmCantidad As Double, ByVal prmUbicacion As String, ByVal prmContenedor As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ReabastecePiezasOperationCompleted Is Nothing) Then
                Me.WM_ReabastecePiezasOperationCompleted = AddressOf Me.OnWM_ReabastecePiezasOperationCompleted
            End If
            Me.InvokeAsync("WM_ReabastecePiezas", New Object() {prmOrden, prmEmpaque, prmCantidad, prmUbicacion, prmContenedor, prmEstacion, prmUsuario}, Me.WM_ReabastecePiezasOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ReabastecePiezasOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ReabastecePiezasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ReabastecePiezasCompleted(Me, New WM_ReabastecePiezasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ReabastecePalletSO", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ReabastecePalletSO(ByVal prmPallet As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ReabastecePalletSO", New Object() {prmPallet, prmUbicacion, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ReabastecePalletSOAsync(ByVal prmPallet As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ReabastecePalletSOAsync(prmPallet, prmUbicacion, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ReabastecePalletSOAsync(ByVal prmPallet As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ReabastecePalletSOOperationCompleted Is Nothing) Then
                Me.WM_ReabastecePalletSOOperationCompleted = AddressOf Me.OnWM_ReabastecePalletSOOperationCompleted
            End If
            Me.InvokeAsync("WM_ReabastecePalletSO", New Object() {prmPallet, prmUbicacion, prmEstacion, prmUsuario}, Me.WM_ReabastecePalletSOOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ReabastecePalletSOOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ReabastecePalletSOCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ReabastecePalletSOCompleted(Me, New WM_ReabastecePalletSOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ReabasteceEmpaqueSO", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ReabasteceEmpaqueSO(ByVal prmEmpaque As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ReabasteceEmpaqueSO", New Object() {prmEmpaque, prmUbicacion, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ReabasteceEmpaqueSOAsync(ByVal prmEmpaque As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ReabasteceEmpaqueSOAsync(prmEmpaque, prmUbicacion, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ReabasteceEmpaqueSOAsync(ByVal prmEmpaque As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ReabasteceEmpaqueSOOperationCompleted Is Nothing) Then
                Me.WM_ReabasteceEmpaqueSOOperationCompleted = AddressOf Me.OnWM_ReabasteceEmpaqueSOOperationCompleted
            End If
            Me.InvokeAsync("WM_ReabasteceEmpaqueSO", New Object() {prmEmpaque, prmUbicacion, prmEstacion, prmUsuario}, Me.WM_ReabasteceEmpaqueSOOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ReabasteceEmpaqueSOOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ReabasteceEmpaqueSOCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ReabasteceEmpaqueSOCompleted(Me, New WM_ReabasteceEmpaqueSOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ReabastecePiezasSO", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ReabastecePiezasSO(ByVal prmOrden As String, ByVal prmEmpaque As String, ByVal prmCantidad As Double, ByVal prmUbicacion As String, ByVal prmContenedor As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ReabastecePiezasSO", New Object() {prmOrden, prmEmpaque, prmCantidad, prmUbicacion, prmContenedor, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ReabastecePiezasSOAsync(ByVal prmOrden As String, ByVal prmEmpaque As String, ByVal prmCantidad As Double, ByVal prmUbicacion As String, ByVal prmContenedor As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ReabastecePiezasSOAsync(prmOrden, prmEmpaque, prmCantidad, prmUbicacion, prmContenedor, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ReabastecePiezasSOAsync(ByVal prmOrden As String, ByVal prmEmpaque As String, ByVal prmCantidad As Double, ByVal prmUbicacion As String, ByVal prmContenedor As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ReabastecePiezasSOOperationCompleted Is Nothing) Then
                Me.WM_ReabastecePiezasSOOperationCompleted = AddressOf Me.OnWM_ReabastecePiezasSOOperationCompleted
            End If
            Me.InvokeAsync("WM_ReabastecePiezasSO", New Object() {prmOrden, prmEmpaque, prmCantidad, prmUbicacion, prmContenedor, prmEstacion, prmUsuario}, Me.WM_ReabastecePiezasSOOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ReabastecePiezasSOOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ReabastecePiezasSOCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ReabastecePiezasSOCompleted(Me, New WM_ReabastecePiezasSOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaContenedor", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaContenedor(ByVal prmCodigoEmpaque As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaContenedor", New Object() {prmCodigoEmpaque, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaContenedorAsync(ByVal prmCodigoEmpaque As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaContenedorAsync(prmCodigoEmpaque, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaContenedorAsync(ByVal prmCodigoEmpaque As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaContenedorOperationCompleted Is Nothing) Then
                Me.WM_ConsultaContenedorOperationCompleted = AddressOf Me.OnWM_ConsultaContenedorOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaContenedor", New Object() {prmCodigoEmpaque, prmEstacion, prmUsuario}, Me.WM_ConsultaContenedorOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaContenedorOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaContenedorCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaContenedorCompleted(Me, New WM_ConsultaContenedorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaEmpaqueOSKU", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaEmpaqueOSKU(ByVal prmEmpaqueOSKU As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaEmpaqueOSKU", New Object() {prmEmpaqueOSKU, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaEmpaqueOSKUAsync(ByVal prmEmpaqueOSKU As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaEmpaqueOSKUAsync(prmEmpaqueOSKU, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaEmpaqueOSKUAsync(ByVal prmEmpaqueOSKU As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaEmpaqueOSKUOperationCompleted Is Nothing) Then
                Me.WM_ConsultaEmpaqueOSKUOperationCompleted = AddressOf Me.OnWM_ConsultaEmpaqueOSKUOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaEmpaqueOSKU", New Object() {prmEmpaqueOSKU, prmEstacion, prmUsuario}, Me.WM_ConsultaEmpaqueOSKUOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaEmpaqueOSKUOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaEmpaqueOSKUCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaEmpaqueOSKUCompleted(Me, New WM_ConsultaEmpaqueOSKUCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaContenedorAjustes", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaContenedorAjustes(ByVal prmCodigoEmpaque As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaContenedorAjustes", New Object() {prmCodigoEmpaque, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaContenedorAjustesAsync(ByVal prmCodigoEmpaque As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaContenedorAjustesAsync(prmCodigoEmpaque, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaContenedorAjustesAsync(ByVal prmCodigoEmpaque As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaContenedorAjustesOperationCompleted Is Nothing) Then
                Me.WM_ConsultaContenedorAjustesOperationCompleted = AddressOf Me.OnWM_ConsultaContenedorAjustesOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaContenedorAjustes", New Object() {prmCodigoEmpaque, prmEstacion, prmUsuario}, Me.WM_ConsultaContenedorAjustesOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaContenedorAjustesOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaContenedorAjustesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaContenedorAjustesCompleted(Me, New WM_ConsultaContenedorAjustesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_SugierePosicionContenedor", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_SugierePosicionContenedor(ByVal prmCodigoPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_SugierePosicionContenedor", New Object() {prmCodigoPallet, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_SugierePosicionContenedorAsync(ByVal prmCodigoPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_SugierePosicionContenedorAsync(prmCodigoPallet, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_SugierePosicionContenedorAsync(ByVal prmCodigoPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_SugierePosicionContenedorOperationCompleted Is Nothing) Then
                Me.WM_SugierePosicionContenedorOperationCompleted = AddressOf Me.OnWM_SugierePosicionContenedorOperationCompleted
            End If
            Me.InvokeAsync("WM_SugierePosicionContenedor", New Object() {prmCodigoPallet, prmEstacion, prmUsuario}, Me.WM_SugierePosicionContenedorOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_SugierePosicionContenedorOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_SugierePosicionContenedorCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_SugierePosicionContenedorCompleted(Me, New WM_SugierePosicionContenedorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_OCContenedorSKU", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_OCContenedorSKU(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmCodigoEmpaque As String, ByVal prmLoteProveedor As String, ByVal prmSKU As String, ByVal prmPosicionPiso As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_OCContenedorSKU", New Object() {prmOrdenCompra, prmPartida, prmCodigoEmpaque, prmLoteProveedor, prmSKU, prmPosicionPiso, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_OCContenedorSKUAsync(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmCodigoEmpaque As String, ByVal prmLoteProveedor As String, ByVal prmSKU As String, ByVal prmPosicionPiso As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_OCContenedorSKUAsync(prmOrdenCompra, prmPartida, prmCodigoEmpaque, prmLoteProveedor, prmSKU, prmPosicionPiso, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_OCContenedorSKUAsync(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmCodigoEmpaque As String, ByVal prmLoteProveedor As String, ByVal prmSKU As String, ByVal prmPosicionPiso As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_OCContenedorSKUOperationCompleted Is Nothing) Then
                Me.WM_OCContenedorSKUOperationCompleted = AddressOf Me.OnWM_OCContenedorSKUOperationCompleted
            End If
            Me.InvokeAsync("WM_OCContenedorSKU", New Object() {prmOrdenCompra, prmPartida, prmCodigoEmpaque, prmLoteProveedor, prmSKU, prmPosicionPiso, prmEstacion, prmUsuario}, Me.WM_OCContenedorSKUOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_OCContenedorSKUOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_OCContenedorSKUCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_OCContenedorSKUCompleted(Me, New WM_OCContenedorSKUCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaPosicionPisoPalletOC", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaPosicionPisoPalletOC(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmPosicionPiso As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaPosicionPisoPalletOC", New Object() {prmOrdenCompra, prmPartida, prmPosicionPiso, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaPosicionPisoPalletOCAsync(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmPosicionPiso As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaPosicionPisoPalletOCAsync(prmOrdenCompra, prmPartida, prmPosicionPiso, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaPosicionPisoPalletOCAsync(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmPosicionPiso As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaPosicionPisoPalletOCOperationCompleted Is Nothing) Then
                Me.WM_ConsultaPosicionPisoPalletOCOperationCompleted = AddressOf Me.OnWM_ConsultaPosicionPisoPalletOCOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaPosicionPisoPalletOC", New Object() {prmOrdenCompra, prmPartida, prmPosicionPiso, prmEstacion, prmUsuario}, Me.WM_ConsultaPosicionPisoPalletOCOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaPosicionPisoPalletOCOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaPosicionPisoPalletOCCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaPosicionPisoPalletOCCompleted(Me, New WM_ConsultaPosicionPisoPalletOCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_OCContenedor", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_OCContenedor(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmCodigoEmpaque As String, ByVal prmLoteProveedor As String, ByVal prmCantidad As Double, ByVal prmPosicionPiso As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_OCContenedor", New Object() {prmOrdenCompra, prmPartida, prmCodigoEmpaque, prmLoteProveedor, prmCantidad, prmPosicionPiso, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_OCContenedorAsync(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmCodigoEmpaque As String, ByVal prmLoteProveedor As String, ByVal prmCantidad As Double, ByVal prmPosicionPiso As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_OCContenedorAsync(prmOrdenCompra, prmPartida, prmCodigoEmpaque, prmLoteProveedor, prmCantidad, prmPosicionPiso, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_OCContenedorAsync(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmCodigoEmpaque As String, ByVal prmLoteProveedor As String, ByVal prmCantidad As Double, ByVal prmPosicionPiso As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_OCContenedorOperationCompleted Is Nothing) Then
                Me.WM_OCContenedorOperationCompleted = AddressOf Me.OnWM_OCContenedorOperationCompleted
            End If
            Me.InvokeAsync("WM_OCContenedor", New Object() {prmOrdenCompra, prmPartida, prmCodigoEmpaque, prmLoteProveedor, prmCantidad, prmPosicionPiso, prmEstacion, prmUsuario}, Me.WM_OCContenedorOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_OCContenedorOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_OCContenedorCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_OCContenedorCompleted(Me, New WM_OCContenedorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ReubicarContenedor", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ReubicarContenedor(ByVal prmCodigoPallet As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ReubicarContenedor", New Object() {prmCodigoPallet, prmUbicacion, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ReubicarContenedorAsync(ByVal prmCodigoPallet As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ReubicarContenedorAsync(prmCodigoPallet, prmUbicacion, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ReubicarContenedorAsync(ByVal prmCodigoPallet As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ReubicarContenedorOperationCompleted Is Nothing) Then
                Me.WM_ReubicarContenedorOperationCompleted = AddressOf Me.OnWM_ReubicarContenedorOperationCompleted
            End If
            Me.InvokeAsync("WM_ReubicarContenedor", New Object() {prmCodigoPallet, prmUbicacion, prmEstacion, prmUsuario}, Me.WM_ReubicarContenedorOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ReubicarContenedorOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ReubicarContenedorCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ReubicarContenedorCompleted(Me, New WM_ReubicarContenedorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ReubicarEmpaque", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ReubicarEmpaque(ByVal prmCodigoPallet As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ReubicarEmpaque", New Object() {prmCodigoPallet, prmUbicacion, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ReubicarEmpaqueAsync(ByVal prmCodigoPallet As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ReubicarEmpaqueAsync(prmCodigoPallet, prmUbicacion, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ReubicarEmpaqueAsync(ByVal prmCodigoPallet As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ReubicarEmpaqueOperationCompleted Is Nothing) Then
                Me.WM_ReubicarEmpaqueOperationCompleted = AddressOf Me.OnWM_ReubicarEmpaqueOperationCompleted
            End If
            Me.InvokeAsync("WM_ReubicarEmpaque", New Object() {prmCodigoPallet, prmUbicacion, prmEstacion, prmUsuario}, Me.WM_ReubicarEmpaqueOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ReubicarEmpaqueOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ReubicarEmpaqueCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ReubicarEmpaqueCompleted(Me, New WM_ReubicarEmpaqueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ImprimeSKU", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ImprimeSKU(ByVal prmNumParte As String, ByVal prmUPC As String, ByVal prmDescripcion As String, ByVal prmNumEtiquetas As String, ByVal prmImpresora As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ImprimeSKU", New Object() {prmNumParte, prmUPC, prmDescripcion, prmNumEtiquetas, prmImpresora, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ImprimeSKUAsync(ByVal prmNumParte As String, ByVal prmUPC As String, ByVal prmDescripcion As String, ByVal prmNumEtiquetas As String, ByVal prmImpresora As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ImprimeSKUAsync(prmNumParte, prmUPC, prmDescripcion, prmNumEtiquetas, prmImpresora, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ImprimeSKUAsync(ByVal prmNumParte As String, ByVal prmUPC As String, ByVal prmDescripcion As String, ByVal prmNumEtiquetas As String, ByVal prmImpresora As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ImprimeSKUOperationCompleted Is Nothing) Then
                Me.WM_ImprimeSKUOperationCompleted = AddressOf Me.OnWM_ImprimeSKUOperationCompleted
            End If
            Me.InvokeAsync("WM_ImprimeSKU", New Object() {prmNumParte, prmUPC, prmDescripcion, prmNumEtiquetas, prmImpresora, prmEstacion, prmUsuario}, Me.WM_ImprimeSKUOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ImprimeSKUOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ImprimeSKUCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ImprimeSKUCompleted(Me, New WM_ImprimeSKUCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ImpContenedor", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ImpContenedor(ByVal prmNumEtiquetas As String, ByVal prmImpresora As String, ByVal prmOpcion As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ImpContenedor", New Object() {prmNumEtiquetas, prmImpresora, prmOpcion, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ImpContenedorAsync(ByVal prmNumEtiquetas As String, ByVal prmImpresora As String, ByVal prmOpcion As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ImpContenedorAsync(prmNumEtiquetas, prmImpresora, prmOpcion, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ImpContenedorAsync(ByVal prmNumEtiquetas As String, ByVal prmImpresora As String, ByVal prmOpcion As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ImpContenedorOperationCompleted Is Nothing) Then
                Me.WM_ImpContenedorOperationCompleted = AddressOf Me.OnWM_ImpContenedorOperationCompleted
            End If
            Me.InvokeAsync("WM_ImpContenedor", New Object() {prmNumEtiquetas, prmImpresora, prmOpcion, prmEstacion, prmUsuario}, Me.WM_ImpContenedorOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ImpContenedorOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ImpContenedorCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ImpContenedorCompleted(Me, New WM_ImpContenedorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ReimprimeContenedor", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ReimprimeContenedor(ByVal prmContenedor As String, ByVal prmImpresora As String, ByVal prmOpcion As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ReimprimeContenedor", New Object() {prmContenedor, prmImpresora, prmOpcion})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ReimprimeContenedorAsync(ByVal prmContenedor As String, ByVal prmImpresora As String, ByVal prmOpcion As String)
            Me.WM_ReimprimeContenedorAsync(prmContenedor, prmImpresora, prmOpcion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ReimprimeContenedorAsync(ByVal prmContenedor As String, ByVal prmImpresora As String, ByVal prmOpcion As String, ByVal userState As Object)
            If (Me.WM_ReimprimeContenedorOperationCompleted Is Nothing) Then
                Me.WM_ReimprimeContenedorOperationCompleted = AddressOf Me.OnWM_ReimprimeContenedorOperationCompleted
            End If
            Me.InvokeAsync("WM_ReimprimeContenedor", New Object() {prmContenedor, prmImpresora, prmOpcion}, Me.WM_ReimprimeContenedorOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ReimprimeContenedorOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ReimprimeContenedorCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ReimprimeContenedorCompleted(Me, New WM_ReimprimeContenedorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_GuardaFoto", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_GuardaFoto(ByVal prmNumParte As String, ByVal prmDesc As String, ByVal prmFoto As Object, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_GuardaFoto", New Object() {prmNumParte, prmDesc, prmFoto, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_GuardaFotoAsync(ByVal prmNumParte As String, ByVal prmDesc As String, ByVal prmFoto As Object, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_GuardaFotoAsync(prmNumParte, prmDesc, prmFoto, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_GuardaFotoAsync(ByVal prmNumParte As String, ByVal prmDesc As String, ByVal prmFoto As Object, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_GuardaFotoOperationCompleted Is Nothing) Then
                Me.WM_GuardaFotoOperationCompleted = AddressOf Me.OnWM_GuardaFotoOperationCompleted
            End If
            Me.InvokeAsync("WM_GuardaFoto", New Object() {prmNumParte, prmDesc, prmFoto, prmEstacion, prmUsuario}, Me.WM_GuardaFotoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_GuardaFotoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_GuardaFotoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_GuardaFotoCompleted(Me, New WM_GuardaFotoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_EliminaImagen", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_EliminaImagen(ByVal prmNumParte As String, ByVal prmDesc As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_EliminaImagen", New Object() {prmNumParte, prmDesc, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_EliminaImagenAsync(ByVal prmNumParte As String, ByVal prmDesc As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_EliminaImagenAsync(prmNumParte, prmDesc, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_EliminaImagenAsync(ByVal prmNumParte As String, ByVal prmDesc As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_EliminaImagenOperationCompleted Is Nothing) Then
                Me.WM_EliminaImagenOperationCompleted = AddressOf Me.OnWM_EliminaImagenOperationCompleted
            End If
            Me.InvokeAsync("WM_EliminaImagen", New Object() {prmNumParte, prmDesc, prmEstacion, prmUsuario}, Me.WM_EliminaImagenOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_EliminaImagenOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_EliminaImagenCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_EliminaImagenCompleted(Me, New WM_EliminaImagenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaImagenNumParte", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaImagenNumParte(ByVal prmNumParte As String, ByVal prmIdImagen As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaImagenNumParte", New Object() {prmNumParte, prmIdImagen, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaImagenNumParteAsync(ByVal prmNumParte As String, ByVal prmIdImagen As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaImagenNumParteAsync(prmNumParte, prmIdImagen, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaImagenNumParteAsync(ByVal prmNumParte As String, ByVal prmIdImagen As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaImagenNumParteOperationCompleted Is Nothing) Then
                Me.WM_ConsultaImagenNumParteOperationCompleted = AddressOf Me.OnWM_ConsultaImagenNumParteOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaImagenNumParte", New Object() {prmNumParte, prmIdImagen, prmEstacion, prmUsuario}, Me.WM_ConsultaImagenNumParteOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaImagenNumParteOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaImagenNumParteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaImagenNumParteCompleted(Me, New WM_ConsultaImagenNumParteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ListaArticulos", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ListaArticulos(ByVal prmNumParte As String, ByVal prmTipo As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ListaArticulos", New Object() {prmNumParte, prmTipo, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ListaArticulosAsync(ByVal prmNumParte As String, ByVal prmTipo As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ListaArticulosAsync(prmNumParte, prmTipo, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ListaArticulosAsync(ByVal prmNumParte As String, ByVal prmTipo As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ListaArticulosOperationCompleted Is Nothing) Then
                Me.WM_ListaArticulosOperationCompleted = AddressOf Me.OnWM_ListaArticulosOperationCompleted
            End If
            Me.InvokeAsync("WM_ListaArticulos", New Object() {prmNumParte, prmTipo, prmEstacion, prmUsuario}, Me.WM_ListaArticulosOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ListaArticulosOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ListaArticulosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ListaArticulosCompleted(Me, New WM_ListaArticulosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_FotoNumParte", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_FotoNumParte(ByVal prmNumParte As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_FotoNumParte", New Object() {prmNumParte, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_FotoNumParteAsync(ByVal prmNumParte As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_FotoNumParteAsync(prmNumParte, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_FotoNumParteAsync(ByVal prmNumParte As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_FotoNumParteOperationCompleted Is Nothing) Then
                Me.WM_FotoNumParteOperationCompleted = AddressOf Me.OnWM_FotoNumParteOperationCompleted
            End If
            Me.InvokeAsync("WM_FotoNumParte", New Object() {prmNumParte, prmEstacion, prmUsuario}, Me.WM_FotoNumParteOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_FotoNumParteOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_FotoNumParteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_FotoNumParteCompleted(Me, New WM_FotoNumParteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaEmpaquesPorPalletInventario_NE", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaEmpaquesPorPalletInventario_NE(ByVal prmIdInventario As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaEmpaquesPorPalletInventario_NE", New Object() {prmIdInventario, prmPallet, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaEmpaquesPorPalletInventario_NEAsync(ByVal prmIdInventario As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaEmpaquesPorPalletInventario_NEAsync(prmIdInventario, prmPallet, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaEmpaquesPorPalletInventario_NEAsync(ByVal prmIdInventario As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaEmpaquesPorPalletInventario_NEOperationCompleted Is Nothing) Then
                Me.WM_ConsultaEmpaquesPorPalletInventario_NEOperationCompleted = AddressOf Me.OnWM_ConsultaEmpaquesPorPalletInventario_NEOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaEmpaquesPorPalletInventario_NE", New Object() {prmIdInventario, prmPallet, prmEstacion, prmUsuario}, Me.WM_ConsultaEmpaquesPorPalletInventario_NEOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaEmpaquesPorPalletInventario_NEOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaEmpaquesPorPalletInventario_NECompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaEmpaquesPorPalletInventario_NECompleted(Me, New WM_ConsultaEmpaquesPorPalletInventario_NECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaEmpaqueInventario", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaEmpaqueInventario(ByVal prmIdInventario As String, ByVal prmEmpaque As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaEmpaqueInventario", New Object() {prmIdInventario, prmEmpaque, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaEmpaqueInventarioAsync(ByVal prmIdInventario As String, ByVal prmEmpaque As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaEmpaqueInventarioAsync(prmIdInventario, prmEmpaque, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaEmpaqueInventarioAsync(ByVal prmIdInventario As String, ByVal prmEmpaque As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaEmpaqueInventarioOperationCompleted Is Nothing) Then
                Me.WM_ConsultaEmpaqueInventarioOperationCompleted = AddressOf Me.OnWM_ConsultaEmpaqueInventarioOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaEmpaqueInventario", New Object() {prmIdInventario, prmEmpaque, prmEstacion, prmUsuario}, Me.WM_ConsultaEmpaqueInventarioOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaEmpaqueInventarioOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaEmpaqueInventarioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaEmpaqueInventarioCompleted(Me, New WM_ConsultaEmpaqueInventarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_RegistraPalletInvSinCambio", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_RegistraPalletInvSinCambio(ByVal prmIdInventario As String, ByVal prmPallet As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_RegistraPalletInvSinCambio", New Object() {prmIdInventario, prmPallet, prmUbicacion, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_RegistraPalletInvSinCambioAsync(ByVal prmIdInventario As String, ByVal prmPallet As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_RegistraPalletInvSinCambioAsync(prmIdInventario, prmPallet, prmUbicacion, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_RegistraPalletInvSinCambioAsync(ByVal prmIdInventario As String, ByVal prmPallet As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_RegistraPalletInvSinCambioOperationCompleted Is Nothing) Then
                Me.WM_RegistraPalletInvSinCambioOperationCompleted = AddressOf Me.OnWM_RegistraPalletInvSinCambioOperationCompleted
            End If
            Me.InvokeAsync("WM_RegistraPalletInvSinCambio", New Object() {prmIdInventario, prmPallet, prmUbicacion, prmEstacion, prmUsuario}, Me.WM_RegistraPalletInvSinCambioOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_RegistraPalletInvSinCambioOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_RegistraPalletInvSinCambioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_RegistraPalletInvSinCambioCompleted(Me, New WM_RegistraPalletInvSinCambioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_BajaPalletInventario", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_BajaPalletInventario(ByVal prmIdInventario As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_BajaPalletInventario", New Object() {prmIdInventario, prmPallet, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_BajaPalletInventarioAsync(ByVal prmIdInventario As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_BajaPalletInventarioAsync(prmIdInventario, prmPallet, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_BajaPalletInventarioAsync(ByVal prmIdInventario As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_BajaPalletInventarioOperationCompleted Is Nothing) Then
                Me.WM_BajaPalletInventarioOperationCompleted = AddressOf Me.OnWM_BajaPalletInventarioOperationCompleted
            End If
            Me.InvokeAsync("WM_BajaPalletInventario", New Object() {prmIdInventario, prmPallet, prmEstacion, prmUsuario}, Me.WM_BajaPalletInventarioOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_BajaPalletInventarioOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_BajaPalletInventarioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_BajaPalletInventarioCompleted(Me, New WM_BajaPalletInventarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_BajaEmpaqueInventario", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_BajaEmpaqueInventario(ByVal prmIdInventario As String, ByVal prmEmpaque As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_BajaEmpaqueInventario", New Object() {prmIdInventario, prmEmpaque, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_BajaEmpaqueInventarioAsync(ByVal prmIdInventario As String, ByVal prmEmpaque As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_BajaEmpaqueInventarioAsync(prmIdInventario, prmEmpaque, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_BajaEmpaqueInventarioAsync(ByVal prmIdInventario As String, ByVal prmEmpaque As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_BajaEmpaqueInventarioOperationCompleted Is Nothing) Then
                Me.WM_BajaEmpaqueInventarioOperationCompleted = AddressOf Me.OnWM_BajaEmpaqueInventarioOperationCompleted
            End If
            Me.InvokeAsync("WM_BajaEmpaqueInventario", New Object() {prmIdInventario, prmEmpaque, prmEstacion, prmUsuario}, Me.WM_BajaEmpaqueInventarioOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_BajaEmpaqueInventarioOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_BajaEmpaqueInventarioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_BajaEmpaqueInventarioCompleted(Me, New WM_BajaEmpaqueInventarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_EditaRegistroContenedorInventario", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_EditaRegistroContenedorInventario(ByVal prmIdInventario As String, ByVal prmPallet As String, ByVal prmEmpaque As String, ByVal prmUbicacion As String, ByVal prmCantidad As String, ByVal prmNumParte As String, ByVal prmPedimento As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_EditaRegistroContenedorInventario", New Object() {prmIdInventario, prmPallet, prmEmpaque, prmUbicacion, prmCantidad, prmNumParte, prmPedimento, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_EditaRegistroContenedorInventarioAsync(ByVal prmIdInventario As String, ByVal prmPallet As String, ByVal prmEmpaque As String, ByVal prmUbicacion As String, ByVal prmCantidad As String, ByVal prmNumParte As String, ByVal prmPedimento As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_EditaRegistroContenedorInventarioAsync(prmIdInventario, prmPallet, prmEmpaque, prmUbicacion, prmCantidad, prmNumParte, prmPedimento, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_EditaRegistroContenedorInventarioAsync(ByVal prmIdInventario As String, ByVal prmPallet As String, ByVal prmEmpaque As String, ByVal prmUbicacion As String, ByVal prmCantidad As String, ByVal prmNumParte As String, ByVal prmPedimento As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_EditaRegistroContenedorInventarioOperationCompleted Is Nothing) Then
                Me.WM_EditaRegistroContenedorInventarioOperationCompleted = AddressOf Me.OnWM_EditaRegistroContenedorInventarioOperationCompleted
            End If
            Me.InvokeAsync("WM_EditaRegistroContenedorInventario", New Object() {prmIdInventario, prmPallet, prmEmpaque, prmUbicacion, prmCantidad, prmNumParte, prmPedimento, prmEstacion, prmUsuario}, Me.WM_EditaRegistroContenedorInventarioOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_EditaRegistroContenedorInventarioOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_EditaRegistroContenedorInventarioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_EditaRegistroContenedorInventarioCompleted(Me, New WM_EditaRegistroContenedorInventarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_BajaEmpaquesInventario_NE", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_BajaEmpaquesInventario_NE(ByVal prmIdInventario As String, ByVal prmCodigoPallet As String, ByVal prmProducto As String, ByVal prmLote As String, ByVal prmCantidadEmpaques As Integer, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_BajaEmpaquesInventario_NE", New Object() {prmIdInventario, prmCodigoPallet, prmProducto, prmLote, prmCantidadEmpaques, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_BajaEmpaquesInventario_NEAsync(ByVal prmIdInventario As String, ByVal prmCodigoPallet As String, ByVal prmProducto As String, ByVal prmLote As String, ByVal prmCantidadEmpaques As Integer, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_BajaEmpaquesInventario_NEAsync(prmIdInventario, prmCodigoPallet, prmProducto, prmLote, prmCantidadEmpaques, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_BajaEmpaquesInventario_NEAsync(ByVal prmIdInventario As String, ByVal prmCodigoPallet As String, ByVal prmProducto As String, ByVal prmLote As String, ByVal prmCantidadEmpaques As Integer, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_BajaEmpaquesInventario_NEOperationCompleted Is Nothing) Then
                Me.WM_BajaEmpaquesInventario_NEOperationCompleted = AddressOf Me.OnWM_BajaEmpaquesInventario_NEOperationCompleted
            End If
            Me.InvokeAsync("WM_BajaEmpaquesInventario_NE", New Object() {prmIdInventario, prmCodigoPallet, prmProducto, prmLote, prmCantidadEmpaques, prmEstacion, prmUsuario}, Me.WM_BajaEmpaquesInventario_NEOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_BajaEmpaquesInventario_NEOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_BajaEmpaquesInventario_NECompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_BajaEmpaquesInventario_NECompleted(Me, New WM_BajaEmpaquesInventario_NECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_EditaRegistroPalletInventario", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_EditaRegistroPalletInventario(ByVal prmIdInventario As String, ByVal prmPallet As String, ByVal prmUbicacion As String, ByVal prmLote As String, ByVal prmCantidadActual As Integer, ByVal prmEmpaques As Integer, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_EditaRegistroPalletInventario", New Object() {prmIdInventario, prmPallet, prmUbicacion, prmLote, prmCantidadActual, prmEmpaques, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_EditaRegistroPalletInventarioAsync(ByVal prmIdInventario As String, ByVal prmPallet As String, ByVal prmUbicacion As String, ByVal prmLote As String, ByVal prmCantidadActual As Integer, ByVal prmEmpaques As Integer, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_EditaRegistroPalletInventarioAsync(prmIdInventario, prmPallet, prmUbicacion, prmLote, prmCantidadActual, prmEmpaques, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_EditaRegistroPalletInventarioAsync(ByVal prmIdInventario As String, ByVal prmPallet As String, ByVal prmUbicacion As String, ByVal prmLote As String, ByVal prmCantidadActual As Integer, ByVal prmEmpaques As Integer, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_EditaRegistroPalletInventarioOperationCompleted Is Nothing) Then
                Me.WM_EditaRegistroPalletInventarioOperationCompleted = AddressOf Me.OnWM_EditaRegistroPalletInventarioOperationCompleted
            End If
            Me.InvokeAsync("WM_EditaRegistroPalletInventario", New Object() {prmIdInventario, prmPallet, prmUbicacion, prmLote, prmCantidadActual, prmEmpaques, prmEstacion, prmUsuario}, Me.WM_EditaRegistroPalletInventarioOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_EditaRegistroPalletInventarioOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_EditaRegistroPalletInventarioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_EditaRegistroPalletInventarioCompleted(Me, New WM_EditaRegistroPalletInventarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_RegistraEmpaqueNuevoPalletInventario_OLD", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_RegistraEmpaqueNuevoPalletInventario_OLD(ByVal prmIdInventario As String, ByVal prmPallet As String, ByVal prmEmpaque As String, ByVal prmNumParte As String, ByVal prmRevision As String, ByVal prmCantidad As String, ByVal prmPosicion As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_RegistraEmpaqueNuevoPalletInventario_OLD", New Object() {prmIdInventario, prmPallet, prmEmpaque, prmNumParte, prmRevision, prmCantidad, prmPosicion, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_RegistraEmpaqueNuevoPalletInventario_OLDAsync(ByVal prmIdInventario As String, ByVal prmPallet As String, ByVal prmEmpaque As String, ByVal prmNumParte As String, ByVal prmRevision As String, ByVal prmCantidad As String, ByVal prmPosicion As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_RegistraEmpaqueNuevoPalletInventario_OLDAsync(prmIdInventario, prmPallet, prmEmpaque, prmNumParte, prmRevision, prmCantidad, prmPosicion, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_RegistraEmpaqueNuevoPalletInventario_OLDAsync(ByVal prmIdInventario As String, ByVal prmPallet As String, ByVal prmEmpaque As String, ByVal prmNumParte As String, ByVal prmRevision As String, ByVal prmCantidad As String, ByVal prmPosicion As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_RegistraEmpaqueNuevoPalletInventario_OLDOperationCompleted Is Nothing) Then
                Me.WM_RegistraEmpaqueNuevoPalletInventario_OLDOperationCompleted = AddressOf Me.OnWM_RegistraEmpaqueNuevoPalletInventario_OLDOperationCompleted
            End If
            Me.InvokeAsync("WM_RegistraEmpaqueNuevoPalletInventario_OLD", New Object() {prmIdInventario, prmPallet, prmEmpaque, prmNumParte, prmRevision, prmCantidad, prmPosicion, prmEstacion, prmUsuario}, Me.WM_RegistraEmpaqueNuevoPalletInventario_OLDOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_RegistraEmpaqueNuevoPalletInventario_OLDOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_RegistraEmpaqueNuevoPalletInventario_OLDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_RegistraEmpaqueNuevoPalletInventario_OLDCompleted(Me, New WM_RegistraEmpaqueNuevoPalletInventario_OLDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_RegistraEmpaqueNuevoPalletInventario", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_RegistraEmpaqueNuevoPalletInventario(ByVal prmInventario As String, ByVal prmEmpaque As String, ByVal prmNumParte As String, ByVal prmCantidad As String, ByVal prmPosicion As String, ByVal prmPedimento As String, ByVal prmClavePedimento As String, ByVal prmFactura As String, ByVal prmFechaPedimento As String, ByVal prmFechaRecepcion As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_RegistraEmpaqueNuevoPalletInventario", New Object() {prmInventario, prmEmpaque, prmNumParte, prmCantidad, prmPosicion, prmPedimento, prmClavePedimento, prmFactura, prmFechaPedimento, prmFechaRecepcion, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_RegistraEmpaqueNuevoPalletInventarioAsync(ByVal prmInventario As String, ByVal prmEmpaque As String, ByVal prmNumParte As String, ByVal prmCantidad As String, ByVal prmPosicion As String, ByVal prmPedimento As String, ByVal prmClavePedimento As String, ByVal prmFactura As String, ByVal prmFechaPedimento As String, ByVal prmFechaRecepcion As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_RegistraEmpaqueNuevoPalletInventarioAsync(prmInventario, prmEmpaque, prmNumParte, prmCantidad, prmPosicion, prmPedimento, prmClavePedimento, prmFactura, prmFechaPedimento, prmFechaRecepcion, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_RegistraEmpaqueNuevoPalletInventarioAsync(ByVal prmInventario As String, ByVal prmEmpaque As String, ByVal prmNumParte As String, ByVal prmCantidad As String, ByVal prmPosicion As String, ByVal prmPedimento As String, ByVal prmClavePedimento As String, ByVal prmFactura As String, ByVal prmFechaPedimento As String, ByVal prmFechaRecepcion As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_RegistraEmpaqueNuevoPalletInventarioOperationCompleted Is Nothing) Then
                Me.WM_RegistraEmpaqueNuevoPalletInventarioOperationCompleted = AddressOf Me.OnWM_RegistraEmpaqueNuevoPalletInventarioOperationCompleted
            End If
            Me.InvokeAsync("WM_RegistraEmpaqueNuevoPalletInventario", New Object() {prmInventario, prmEmpaque, prmNumParte, prmCantidad, prmPosicion, prmPedimento, prmClavePedimento, prmFactura, prmFechaPedimento, prmFechaRecepcion, prmEstacion, prmUsuario}, Me.WM_RegistraEmpaqueNuevoPalletInventarioOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_RegistraEmpaqueNuevoPalletInventarioOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_RegistraEmpaqueNuevoPalletInventarioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_RegistraEmpaqueNuevoPalletInventarioCompleted(Me, New WM_RegistraEmpaqueNuevoPalletInventarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_RegistraEmpaqueNuevoPalletInventario_NE", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_RegistraEmpaqueNuevoPalletInventario_NE(ByVal prmInventario As String, ByVal prmEmpaques As Integer, ByVal prmNumParte As String, ByVal prmCantidad As String, ByVal prmPosicion As String, ByVal prmPedimento As String, ByVal prmClavePedimento As String, ByVal prmFactura As String, ByVal prmFechaPedimento As String, ByVal prmFechaRecepcion As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_RegistraEmpaqueNuevoPalletInventario_NE", New Object() {prmInventario, prmEmpaques, prmNumParte, prmCantidad, prmPosicion, prmPedimento, prmClavePedimento, prmFactura, prmFechaPedimento, prmFechaRecepcion, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_RegistraEmpaqueNuevoPalletInventario_NEAsync(ByVal prmInventario As String, ByVal prmEmpaques As Integer, ByVal prmNumParte As String, ByVal prmCantidad As String, ByVal prmPosicion As String, ByVal prmPedimento As String, ByVal prmClavePedimento As String, ByVal prmFactura As String, ByVal prmFechaPedimento As String, ByVal prmFechaRecepcion As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_RegistraEmpaqueNuevoPalletInventario_NEAsync(prmInventario, prmEmpaques, prmNumParte, prmCantidad, prmPosicion, prmPedimento, prmClavePedimento, prmFactura, prmFechaPedimento, prmFechaRecepcion, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_RegistraEmpaqueNuevoPalletInventario_NEAsync(ByVal prmInventario As String, ByVal prmEmpaques As Integer, ByVal prmNumParte As String, ByVal prmCantidad As String, ByVal prmPosicion As String, ByVal prmPedimento As String, ByVal prmClavePedimento As String, ByVal prmFactura As String, ByVal prmFechaPedimento As String, ByVal prmFechaRecepcion As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_RegistraEmpaqueNuevoPalletInventario_NEOperationCompleted Is Nothing) Then
                Me.WM_RegistraEmpaqueNuevoPalletInventario_NEOperationCompleted = AddressOf Me.OnWM_RegistraEmpaqueNuevoPalletInventario_NEOperationCompleted
            End If
            Me.InvokeAsync("WM_RegistraEmpaqueNuevoPalletInventario_NE", New Object() {prmInventario, prmEmpaques, prmNumParte, prmCantidad, prmPosicion, prmPedimento, prmClavePedimento, prmFactura, prmFechaPedimento, prmFechaRecepcion, prmEstacion, prmUsuario}, Me.WM_RegistraEmpaqueNuevoPalletInventario_NEOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_RegistraEmpaqueNuevoPalletInventario_NEOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_RegistraEmpaqueNuevoPalletInventario_NECompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_RegistraEmpaqueNuevoPalletInventario_NECompleted(Me, New WM_RegistraEmpaqueNuevoPalletInventario_NECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_CierraPalletInventario", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_CierraPalletInventario(ByVal prmIdInventario As String, ByVal prmPallet As String, ByVal prmImpresora As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_CierraPalletInventario", New Object() {prmIdInventario, prmPallet, prmImpresora, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_CierraPalletInventarioAsync(ByVal prmIdInventario As String, ByVal prmPallet As String, ByVal prmImpresora As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_CierraPalletInventarioAsync(prmIdInventario, prmPallet, prmImpresora, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_CierraPalletInventarioAsync(ByVal prmIdInventario As String, ByVal prmPallet As String, ByVal prmImpresora As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_CierraPalletInventarioOperationCompleted Is Nothing) Then
                Me.WM_CierraPalletInventarioOperationCompleted = AddressOf Me.OnWM_CierraPalletInventarioOperationCompleted
            End If
            Me.InvokeAsync("WM_CierraPalletInventario", New Object() {prmIdInventario, prmPallet, prmImpresora, prmEstacion, prmUsuario}, Me.WM_CierraPalletInventarioOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_CierraPalletInventarioOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_CierraPalletInventarioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_CierraPalletInventarioCompleted(Me, New WM_CierraPalletInventarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultarPalletAbiertoInv", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultarPalletAbiertoInv(ByVal prmInventario As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultarPalletAbiertoInv", New Object() {prmInventario, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultarPalletAbiertoInvAsync(ByVal prmInventario As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultarPalletAbiertoInvAsync(prmInventario, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultarPalletAbiertoInvAsync(ByVal prmInventario As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultarPalletAbiertoInvOperationCompleted Is Nothing) Then
                Me.WM_ConsultarPalletAbiertoInvOperationCompleted = AddressOf Me.OnWM_ConsultarPalletAbiertoInvOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultarPalletAbiertoInv", New Object() {prmInventario, prmEstacion, prmUsuario}, Me.WM_ConsultarPalletAbiertoInvOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultarPalletAbiertoInvOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultarPalletAbiertoInvCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultarPalletAbiertoInvCompleted(Me, New WM_ConsultarPalletAbiertoInvCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultarPalletAbiertoInv_NE", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultarPalletAbiertoInv_NE(ByVal prmInventario As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultarPalletAbiertoInv_NE", New Object() {prmInventario, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultarPalletAbiertoInv_NEAsync(ByVal prmInventario As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultarPalletAbiertoInv_NEAsync(prmInventario, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultarPalletAbiertoInv_NEAsync(ByVal prmInventario As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultarPalletAbiertoInv_NEOperationCompleted Is Nothing) Then
                Me.WM_ConsultarPalletAbiertoInv_NEOperationCompleted = AddressOf Me.OnWM_ConsultarPalletAbiertoInv_NEOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultarPalletAbiertoInv_NE", New Object() {prmInventario, prmEstacion, prmUsuario}, Me.WM_ConsultarPalletAbiertoInv_NEOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultarPalletAbiertoInv_NEOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultarPalletAbiertoInv_NECompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultarPalletAbiertoInv_NECompleted(Me, New WM_ConsultarPalletAbiertoInv_NECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_RegistraEmpaqueInventarioPK", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_RegistraEmpaqueInventarioPK(ByVal prmIdInventario As String, ByVal prmPallet As String, ByVal prmEmpaque As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_RegistraEmpaqueInventarioPK", New Object() {prmIdInventario, prmPallet, prmEmpaque, prmUbicacion, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_RegistraEmpaqueInventarioPKAsync(ByVal prmIdInventario As String, ByVal prmPallet As String, ByVal prmEmpaque As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_RegistraEmpaqueInventarioPKAsync(prmIdInventario, prmPallet, prmEmpaque, prmUbicacion, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_RegistraEmpaqueInventarioPKAsync(ByVal prmIdInventario As String, ByVal prmPallet As String, ByVal prmEmpaque As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_RegistraEmpaqueInventarioPKOperationCompleted Is Nothing) Then
                Me.WM_RegistraEmpaqueInventarioPKOperationCompleted = AddressOf Me.OnWM_RegistraEmpaqueInventarioPKOperationCompleted
            End If
            Me.InvokeAsync("WM_RegistraEmpaqueInventarioPK", New Object() {prmIdInventario, prmPallet, prmEmpaque, prmUbicacion, prmEstacion, prmUsuario}, Me.WM_RegistraEmpaqueInventarioPKOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_RegistraEmpaqueInventarioPKOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_RegistraEmpaqueInventarioPKCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_RegistraEmpaqueInventarioPKCompleted(Me, New WM_RegistraEmpaqueInventarioPKCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_RegistraEmpaqueInventario", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_RegistraEmpaqueInventario(ByVal prmIdInventario As String, ByVal prmPallet As String, ByVal prmEmpaque As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_RegistraEmpaqueInventario", New Object() {prmIdInventario, prmPallet, prmEmpaque, prmUbicacion, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_RegistraEmpaqueInventarioAsync(ByVal prmIdInventario As String, ByVal prmPallet As String, ByVal prmEmpaque As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_RegistraEmpaqueInventarioAsync(prmIdInventario, prmPallet, prmEmpaque, prmUbicacion, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_RegistraEmpaqueInventarioAsync(ByVal prmIdInventario As String, ByVal prmPallet As String, ByVal prmEmpaque As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_RegistraEmpaqueInventarioOperationCompleted Is Nothing) Then
                Me.WM_RegistraEmpaqueInventarioOperationCompleted = AddressOf Me.OnWM_RegistraEmpaqueInventarioOperationCompleted
            End If
            Me.InvokeAsync("WM_RegistraEmpaqueInventario", New Object() {prmIdInventario, prmPallet, prmEmpaque, prmUbicacion, prmEstacion, prmUsuario}, Me.WM_RegistraEmpaqueInventarioOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_RegistraEmpaqueInventarioOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_RegistraEmpaqueInventarioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_RegistraEmpaqueInventarioCompleted(Me, New WM_RegistraEmpaqueInventarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_RegistraEmpaqueInventario_NE", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_RegistraEmpaqueInventario_NE(ByVal prmIdInventario As String, ByVal prmPallet As String, ByVal prmCantidadEmpaque As Integer, ByVal prmCantidadEmpaques As Integer, ByVal prmProducto As String, ByVal prmLote As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_RegistraEmpaqueInventario_NE", New Object() {prmIdInventario, prmPallet, prmCantidadEmpaque, prmCantidadEmpaques, prmProducto, prmLote, prmUbicacion, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_RegistraEmpaqueInventario_NEAsync(ByVal prmIdInventario As String, ByVal prmPallet As String, ByVal prmCantidadEmpaque As Integer, ByVal prmCantidadEmpaques As Integer, ByVal prmProducto As String, ByVal prmLote As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_RegistraEmpaqueInventario_NEAsync(prmIdInventario, prmPallet, prmCantidadEmpaque, prmCantidadEmpaques, prmProducto, prmLote, prmUbicacion, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_RegistraEmpaqueInventario_NEAsync(ByVal prmIdInventario As String, ByVal prmPallet As String, ByVal prmCantidadEmpaque As Integer, ByVal prmCantidadEmpaques As Integer, ByVal prmProducto As String, ByVal prmLote As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_RegistraEmpaqueInventario_NEOperationCompleted Is Nothing) Then
                Me.WM_RegistraEmpaqueInventario_NEOperationCompleted = AddressOf Me.OnWM_RegistraEmpaqueInventario_NEOperationCompleted
            End If
            Me.InvokeAsync("WM_RegistraEmpaqueInventario_NE", New Object() {prmIdInventario, prmPallet, prmCantidadEmpaque, prmCantidadEmpaques, prmProducto, prmLote, prmUbicacion, prmEstacion, prmUsuario}, Me.WM_RegistraEmpaqueInventario_NEOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_RegistraEmpaqueInventario_NEOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_RegistraEmpaqueInventario_NECompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_RegistraEmpaqueInventario_NECompleted(Me, New WM_RegistraEmpaqueInventario_NECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_RegistraNuevoEmpaquePalletInventario", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_RegistraNuevoEmpaquePalletInventario(ByVal prmIdInventario As String, ByVal prmPallet As String, ByVal prmEmpaque As String, ByVal prmCantidad As String, ByVal prmUbicacion As String, ByVal prmPedimento As String, ByVal prmClavePedimento As String, ByVal prmFactura As String, ByVal prmFechaPedimento As String, ByVal prmFechaRecepcion As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_RegistraNuevoEmpaquePalletInventario", New Object() {prmIdInventario, prmPallet, prmEmpaque, prmCantidad, prmUbicacion, prmPedimento, prmClavePedimento, prmFactura, prmFechaPedimento, prmFechaRecepcion, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_RegistraNuevoEmpaquePalletInventarioAsync(ByVal prmIdInventario As String, ByVal prmPallet As String, ByVal prmEmpaque As String, ByVal prmCantidad As String, ByVal prmUbicacion As String, ByVal prmPedimento As String, ByVal prmClavePedimento As String, ByVal prmFactura As String, ByVal prmFechaPedimento As String, ByVal prmFechaRecepcion As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_RegistraNuevoEmpaquePalletInventarioAsync(prmIdInventario, prmPallet, prmEmpaque, prmCantidad, prmUbicacion, prmPedimento, prmClavePedimento, prmFactura, prmFechaPedimento, prmFechaRecepcion, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_RegistraNuevoEmpaquePalletInventarioAsync(ByVal prmIdInventario As String, ByVal prmPallet As String, ByVal prmEmpaque As String, ByVal prmCantidad As String, ByVal prmUbicacion As String, ByVal prmPedimento As String, ByVal prmClavePedimento As String, ByVal prmFactura As String, ByVal prmFechaPedimento As String, ByVal prmFechaRecepcion As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_RegistraNuevoEmpaquePalletInventarioOperationCompleted Is Nothing) Then
                Me.WM_RegistraNuevoEmpaquePalletInventarioOperationCompleted = AddressOf Me.OnWM_RegistraNuevoEmpaquePalletInventarioOperationCompleted
            End If
            Me.InvokeAsync("WM_RegistraNuevoEmpaquePalletInventario", New Object() {prmIdInventario, prmPallet, prmEmpaque, prmCantidad, prmUbicacion, prmPedimento, prmClavePedimento, prmFactura, prmFechaPedimento, prmFechaRecepcion, prmEstacion, prmUsuario}, Me.WM_RegistraNuevoEmpaquePalletInventarioOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_RegistraNuevoEmpaquePalletInventarioOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_RegistraNuevoEmpaquePalletInventarioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_RegistraNuevoEmpaquePalletInventarioCompleted(Me, New WM_RegistraNuevoEmpaquePalletInventarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_RegistraNuevoEmpaquePalletInventarioPicking", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_RegistraNuevoEmpaquePalletInventarioPicking(ByVal prmIdInventario As String, ByVal prmPallet As String, ByVal prmEmpaque As String, ByVal prmCantidad As String, ByVal prmUbicacion As String, ByVal prmPedimento As String, ByVal prmClavePedimento As String, ByVal prmFactura As String, ByVal prmFechaPedimento As String, ByVal prmFechaRecepcion As String, ByVal prmNumParte As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_RegistraNuevoEmpaquePalletInventarioPicking", New Object() {prmIdInventario, prmPallet, prmEmpaque, prmCantidad, prmUbicacion, prmPedimento, prmClavePedimento, prmFactura, prmFechaPedimento, prmFechaRecepcion, prmNumParte, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_RegistraNuevoEmpaquePalletInventarioPickingAsync(ByVal prmIdInventario As String, ByVal prmPallet As String, ByVal prmEmpaque As String, ByVal prmCantidad As String, ByVal prmUbicacion As String, ByVal prmPedimento As String, ByVal prmClavePedimento As String, ByVal prmFactura As String, ByVal prmFechaPedimento As String, ByVal prmFechaRecepcion As String, ByVal prmNumParte As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_RegistraNuevoEmpaquePalletInventarioPickingAsync(prmIdInventario, prmPallet, prmEmpaque, prmCantidad, prmUbicacion, prmPedimento, prmClavePedimento, prmFactura, prmFechaPedimento, prmFechaRecepcion, prmNumParte, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_RegistraNuevoEmpaquePalletInventarioPickingAsync(ByVal prmIdInventario As String, ByVal prmPallet As String, ByVal prmEmpaque As String, ByVal prmCantidad As String, ByVal prmUbicacion As String, ByVal prmPedimento As String, ByVal prmClavePedimento As String, ByVal prmFactura As String, ByVal prmFechaPedimento As String, ByVal prmFechaRecepcion As String, ByVal prmNumParte As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_RegistraNuevoEmpaquePalletInventarioPickingOperationCompleted Is Nothing) Then
                Me.WM_RegistraNuevoEmpaquePalletInventarioPickingOperationCompleted = AddressOf Me.OnWM_RegistraNuevoEmpaquePalletInventarioPickingOperationCompleted
            End If
            Me.InvokeAsync("WM_RegistraNuevoEmpaquePalletInventarioPicking", New Object() {prmIdInventario, prmPallet, prmEmpaque, prmCantidad, prmUbicacion, prmPedimento, prmClavePedimento, prmFactura, prmFechaPedimento, prmFechaRecepcion, prmNumParte, prmEstacion, prmUsuario}, Me.WM_RegistraNuevoEmpaquePalletInventarioPickingOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_RegistraNuevoEmpaquePalletInventarioPickingOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_RegistraNuevoEmpaquePalletInventarioPickingCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_RegistraNuevoEmpaquePalletInventarioPickingCompleted(Me, New WM_RegistraNuevoEmpaquePalletInventarioPickingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_RegistraNuevoEmpaquePalletInventarioConLote", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_RegistraNuevoEmpaquePalletInventarioConLote(ByVal prmIdInventario As String, ByVal prmPallet As String, ByVal prmProducto As String, ByVal prmEmpaque As String, ByVal prmCantidad As String, ByVal prmLote As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_RegistraNuevoEmpaquePalletInventarioConLote", New Object() {prmIdInventario, prmPallet, prmProducto, prmEmpaque, prmCantidad, prmLote, prmUbicacion, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_RegistraNuevoEmpaquePalletInventarioConLoteAsync(ByVal prmIdInventario As String, ByVal prmPallet As String, ByVal prmProducto As String, ByVal prmEmpaque As String, ByVal prmCantidad As String, ByVal prmLote As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_RegistraNuevoEmpaquePalletInventarioConLoteAsync(prmIdInventario, prmPallet, prmProducto, prmEmpaque, prmCantidad, prmLote, prmUbicacion, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_RegistraNuevoEmpaquePalletInventarioConLoteAsync(ByVal prmIdInventario As String, ByVal prmPallet As String, ByVal prmProducto As String, ByVal prmEmpaque As String, ByVal prmCantidad As String, ByVal prmLote As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_RegistraNuevoEmpaquePalletInventarioConLoteOperationCompleted Is Nothing) Then
                Me.WM_RegistraNuevoEmpaquePalletInventarioConLoteOperationCompleted = AddressOf Me.OnWM_RegistraNuevoEmpaquePalletInventarioConLoteOperationCompleted
            End If
            Me.InvokeAsync("WM_RegistraNuevoEmpaquePalletInventarioConLote", New Object() {prmIdInventario, prmPallet, prmProducto, prmEmpaque, prmCantidad, prmLote, prmUbicacion, prmEstacion, prmUsuario}, Me.WM_RegistraNuevoEmpaquePalletInventarioConLoteOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_RegistraNuevoEmpaquePalletInventarioConLoteOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_RegistraNuevoEmpaquePalletInventarioConLoteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_RegistraNuevoEmpaquePalletInventarioConLoteCompleted(Me, New WM_RegistraNuevoEmpaquePalletInventarioConLoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_EditaRegistroEmpaqueInventarioPK", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_EditaRegistroEmpaqueInventarioPK(ByVal prmIdInventario As String, ByVal prmPallet As String, ByVal prmEmpaque As String, ByVal prmUbicacion As String, ByVal prmCantidad As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_EditaRegistroEmpaqueInventarioPK", New Object() {prmIdInventario, prmPallet, prmEmpaque, prmUbicacion, prmCantidad, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_EditaRegistroEmpaqueInventarioPKAsync(ByVal prmIdInventario As String, ByVal prmPallet As String, ByVal prmEmpaque As String, ByVal prmUbicacion As String, ByVal prmCantidad As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_EditaRegistroEmpaqueInventarioPKAsync(prmIdInventario, prmPallet, prmEmpaque, prmUbicacion, prmCantidad, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_EditaRegistroEmpaqueInventarioPKAsync(ByVal prmIdInventario As String, ByVal prmPallet As String, ByVal prmEmpaque As String, ByVal prmUbicacion As String, ByVal prmCantidad As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_EditaRegistroEmpaqueInventarioPKOperationCompleted Is Nothing) Then
                Me.WM_EditaRegistroEmpaqueInventarioPKOperationCompleted = AddressOf Me.OnWM_EditaRegistroEmpaqueInventarioPKOperationCompleted
            End If
            Me.InvokeAsync("WM_EditaRegistroEmpaqueInventarioPK", New Object() {prmIdInventario, prmPallet, prmEmpaque, prmUbicacion, prmCantidad, prmEstacion, prmUsuario}, Me.WM_EditaRegistroEmpaqueInventarioPKOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_EditaRegistroEmpaqueInventarioPKOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_EditaRegistroEmpaqueInventarioPKCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_EditaRegistroEmpaqueInventarioPKCompleted(Me, New WM_EditaRegistroEmpaqueInventarioPKCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_EditaRegistroEmpaqueInventario", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_EditaRegistroEmpaqueInventario(ByVal prmIdInventario As String, ByVal prmPallet As String, ByVal prmEmpaque As String, ByVal prmUbicacion As String, ByVal prmCantidad As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_EditaRegistroEmpaqueInventario", New Object() {prmIdInventario, prmPallet, prmEmpaque, prmUbicacion, prmCantidad, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_EditaRegistroEmpaqueInventarioAsync(ByVal prmIdInventario As String, ByVal prmPallet As String, ByVal prmEmpaque As String, ByVal prmUbicacion As String, ByVal prmCantidad As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_EditaRegistroEmpaqueInventarioAsync(prmIdInventario, prmPallet, prmEmpaque, prmUbicacion, prmCantidad, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_EditaRegistroEmpaqueInventarioAsync(ByVal prmIdInventario As String, ByVal prmPallet As String, ByVal prmEmpaque As String, ByVal prmUbicacion As String, ByVal prmCantidad As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_EditaRegistroEmpaqueInventarioOperationCompleted Is Nothing) Then
                Me.WM_EditaRegistroEmpaqueInventarioOperationCompleted = AddressOf Me.OnWM_EditaRegistroEmpaqueInventarioOperationCompleted
            End If
            Me.InvokeAsync("WM_EditaRegistroEmpaqueInventario", New Object() {prmIdInventario, prmPallet, prmEmpaque, prmUbicacion, prmCantidad, prmEstacion, prmUsuario}, Me.WM_EditaRegistroEmpaqueInventarioOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_EditaRegistroEmpaqueInventarioOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_EditaRegistroEmpaqueInventarioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_EditaRegistroEmpaqueInventarioCompleted(Me, New WM_EditaRegistroEmpaqueInventarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_EditaRegistroEmpaqueInventarioConLote", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_EditaRegistroEmpaqueInventarioConLote(ByVal prmIdInventario As String, ByVal prmPallet As String, ByVal prmEmpaque As String, ByVal prmUbicacion As String, ByVal prmCantidad As String, ByVal prmLote As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_EditaRegistroEmpaqueInventarioConLote", New Object() {prmIdInventario, prmPallet, prmEmpaque, prmUbicacion, prmCantidad, prmLote, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_EditaRegistroEmpaqueInventarioConLoteAsync(ByVal prmIdInventario As String, ByVal prmPallet As String, ByVal prmEmpaque As String, ByVal prmUbicacion As String, ByVal prmCantidad As String, ByVal prmLote As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_EditaRegistroEmpaqueInventarioConLoteAsync(prmIdInventario, prmPallet, prmEmpaque, prmUbicacion, prmCantidad, prmLote, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_EditaRegistroEmpaqueInventarioConLoteAsync(ByVal prmIdInventario As String, ByVal prmPallet As String, ByVal prmEmpaque As String, ByVal prmUbicacion As String, ByVal prmCantidad As String, ByVal prmLote As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_EditaRegistroEmpaqueInventarioConLoteOperationCompleted Is Nothing) Then
                Me.WM_EditaRegistroEmpaqueInventarioConLoteOperationCompleted = AddressOf Me.OnWM_EditaRegistroEmpaqueInventarioConLoteOperationCompleted
            End If
            Me.InvokeAsync("WM_EditaRegistroEmpaqueInventarioConLote", New Object() {prmIdInventario, prmPallet, prmEmpaque, prmUbicacion, prmCantidad, prmLote, prmEstacion, prmUsuario}, Me.WM_EditaRegistroEmpaqueInventarioConLoteOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_EditaRegistroEmpaqueInventarioConLoteOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_EditaRegistroEmpaqueInventarioConLoteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_EditaRegistroEmpaqueInventarioConLoteCompleted(Me, New WM_EditaRegistroEmpaqueInventarioConLoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_InventarioSugiereArticulo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_InventarioSugiereArticulo(ByVal pIdInventario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_InventarioSugiereArticulo", New Object() {pIdInventario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_InventarioSugiereArticuloAsync(ByVal pIdInventario As String)
            Me.WM_InventarioSugiereArticuloAsync(pIdInventario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_InventarioSugiereArticuloAsync(ByVal pIdInventario As String, ByVal userState As Object)
            If (Me.WM_InventarioSugiereArticuloOperationCompleted Is Nothing) Then
                Me.WM_InventarioSugiereArticuloOperationCompleted = AddressOf Me.OnWM_InventarioSugiereArticuloOperationCompleted
            End If
            Me.InvokeAsync("WM_InventarioSugiereArticulo", New Object() {pIdInventario}, Me.WM_InventarioSugiereArticuloOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_InventarioSugiereArticuloOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_InventarioSugiereArticuloCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_InventarioSugiereArticuloCompleted(Me, New WM_InventarioSugiereArticuloCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_InventarioSugierePosicion", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_InventarioSugierePosicion(ByVal pIdInventario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_InventarioSugierePosicion", New Object() {pIdInventario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_InventarioSugierePosicionAsync(ByVal pIdInventario As String)
            Me.WM_InventarioSugierePosicionAsync(pIdInventario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_InventarioSugierePosicionAsync(ByVal pIdInventario As String, ByVal userState As Object)
            If (Me.WM_InventarioSugierePosicionOperationCompleted Is Nothing) Then
                Me.WM_InventarioSugierePosicionOperationCompleted = AddressOf Me.OnWM_InventarioSugierePosicionOperationCompleted
            End If
            Me.InvokeAsync("WM_InventarioSugierePosicion", New Object() {pIdInventario}, Me.WM_InventarioSugierePosicionOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_InventarioSugierePosicionOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_InventarioSugierePosicionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_InventarioSugierePosicionCompleted(Me, New WM_InventarioSugierePosicionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_EscanearEmpaqueInv", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_EscanearEmpaqueInv(ByVal prmInventario As String, ByVal prmProducto As String, ByVal prmPiso As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_EscanearEmpaqueInv", New Object() {prmInventario, prmProducto, prmPiso, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_EscanearEmpaqueInvAsync(ByVal prmInventario As String, ByVal prmProducto As String, ByVal prmPiso As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_EscanearEmpaqueInvAsync(prmInventario, prmProducto, prmPiso, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_EscanearEmpaqueInvAsync(ByVal prmInventario As String, ByVal prmProducto As String, ByVal prmPiso As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_EscanearEmpaqueInvOperationCompleted Is Nothing) Then
                Me.WM_EscanearEmpaqueInvOperationCompleted = AddressOf Me.OnWM_EscanearEmpaqueInvOperationCompleted
            End If
            Me.InvokeAsync("WM_EscanearEmpaqueInv", New Object() {prmInventario, prmProducto, prmPiso, prmEstacion, prmUsuario}, Me.WM_EscanearEmpaqueInvOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_EscanearEmpaqueInvOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_EscanearEmpaqueInvCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_EscanearEmpaqueInvCompleted(Me, New WM_EscanearEmpaqueInvCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_BajaEmpaqueInv", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_BajaEmpaqueInv(ByVal prmInventario As String, ByVal prmPiso As String, ByVal prmProducto As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_BajaEmpaqueInv", New Object() {prmInventario, prmPiso, prmProducto, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_BajaEmpaqueInvAsync(ByVal prmInventario As String, ByVal prmPiso As String, ByVal prmProducto As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_BajaEmpaqueInvAsync(prmInventario, prmPiso, prmProducto, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_BajaEmpaqueInvAsync(ByVal prmInventario As String, ByVal prmPiso As String, ByVal prmProducto As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_BajaEmpaqueInvOperationCompleted Is Nothing) Then
                Me.WM_BajaEmpaqueInvOperationCompleted = AddressOf Me.OnWM_BajaEmpaqueInvOperationCompleted
            End If
            Me.InvokeAsync("WM_BajaEmpaqueInv", New Object() {prmInventario, prmPiso, prmProducto, prmEstacion, prmUsuario}, Me.WM_BajaEmpaqueInvOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_BajaEmpaqueInvOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_BajaEmpaqueInvCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_BajaEmpaqueInvCompleted(Me, New WM_BajaEmpaqueInvCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_EditarEmpaqueInv", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_EditarEmpaqueInv(ByVal prmInventario As String, ByVal prmContenedor As String, ByVal prmPiezas As Integer, ByVal prmProducto As String, ByVal prmPiso As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_EditarEmpaqueInv", New Object() {prmInventario, prmContenedor, prmPiezas, prmProducto, prmPiso, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_EditarEmpaqueInvAsync(ByVal prmInventario As String, ByVal prmContenedor As String, ByVal prmPiezas As Integer, ByVal prmProducto As String, ByVal prmPiso As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_EditarEmpaqueInvAsync(prmInventario, prmContenedor, prmPiezas, prmProducto, prmPiso, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_EditarEmpaqueInvAsync(ByVal prmInventario As String, ByVal prmContenedor As String, ByVal prmPiezas As Integer, ByVal prmProducto As String, ByVal prmPiso As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_EditarEmpaqueInvOperationCompleted Is Nothing) Then
                Me.WM_EditarEmpaqueInvOperationCompleted = AddressOf Me.OnWM_EditarEmpaqueInvOperationCompleted
            End If
            Me.InvokeAsync("WM_EditarEmpaqueInv", New Object() {prmInventario, prmContenedor, prmPiezas, prmProducto, prmPiso, prmEstacion, prmUsuario}, Me.WM_EditarEmpaqueInvOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_EditarEmpaqueInvOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_EditarEmpaqueInvCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_EditarEmpaqueInvCompleted(Me, New WM_EditarEmpaqueInvCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaInventariosNumParteAbiertos", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaInventariosNumParteAbiertos(ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaInventariosNumParteAbiertos", New Object() {prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaInventariosNumParteAbiertosAsync(ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaInventariosNumParteAbiertosAsync(prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaInventariosNumParteAbiertosAsync(ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaInventariosNumParteAbiertosOperationCompleted Is Nothing) Then
                Me.WM_ConsultaInventariosNumParteAbiertosOperationCompleted = AddressOf Me.OnWM_ConsultaInventariosNumParteAbiertosOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaInventariosNumParteAbiertos", New Object() {prmEstacion, prmUsuario}, Me.WM_ConsultaInventariosNumParteAbiertosOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaInventariosNumParteAbiertosOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaInventariosNumParteAbiertosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaInventariosNumParteAbiertosCompleted(Me, New WM_ConsultaInventariosNumParteAbiertosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_AjusteBajaEmpaque", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_AjusteBajaEmpaque(ByVal prmEmpaque As String, ByVal prmAjuste As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_AjusteBajaEmpaque", New Object() {prmEmpaque, prmAjuste, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_AjusteBajaEmpaqueAsync(ByVal prmEmpaque As String, ByVal prmAjuste As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_AjusteBajaEmpaqueAsync(prmEmpaque, prmAjuste, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_AjusteBajaEmpaqueAsync(ByVal prmEmpaque As String, ByVal prmAjuste As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_AjusteBajaEmpaqueOperationCompleted Is Nothing) Then
                Me.WM_AjusteBajaEmpaqueOperationCompleted = AddressOf Me.OnWM_AjusteBajaEmpaqueOperationCompleted
            End If
            Me.InvokeAsync("WM_AjusteBajaEmpaque", New Object() {prmEmpaque, prmAjuste, prmEstacion, prmUsuario}, Me.WM_AjusteBajaEmpaqueOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_AjusteBajaEmpaqueOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_AjusteBajaEmpaqueCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_AjusteBajaEmpaqueCompleted(Me, New WM_AjusteBajaEmpaqueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_AjusteContenedorPositivoNumParte", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_AjusteContenedorPositivoNumParte(ByVal prmContenedor As String, ByVal prmCantidad As String, ByVal prmUbicacion As String, ByVal prmTipoAjuste As String, ByVal prmNumParte As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_AjusteContenedorPositivoNumParte", New Object() {prmContenedor, prmCantidad, prmUbicacion, prmTipoAjuste, prmNumParte, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_AjusteContenedorPositivoNumParteAsync(ByVal prmContenedor As String, ByVal prmCantidad As String, ByVal prmUbicacion As String, ByVal prmTipoAjuste As String, ByVal prmNumParte As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_AjusteContenedorPositivoNumParteAsync(prmContenedor, prmCantidad, prmUbicacion, prmTipoAjuste, prmNumParte, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_AjusteContenedorPositivoNumParteAsync(ByVal prmContenedor As String, ByVal prmCantidad As String, ByVal prmUbicacion As String, ByVal prmTipoAjuste As String, ByVal prmNumParte As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_AjusteContenedorPositivoNumParteOperationCompleted Is Nothing) Then
                Me.WM_AjusteContenedorPositivoNumParteOperationCompleted = AddressOf Me.OnWM_AjusteContenedorPositivoNumParteOperationCompleted
            End If
            Me.InvokeAsync("WM_AjusteContenedorPositivoNumParte", New Object() {prmContenedor, prmCantidad, prmUbicacion, prmTipoAjuste, prmNumParte, prmEstacion, prmUsuario}, Me.WM_AjusteContenedorPositivoNumParteOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_AjusteContenedorPositivoNumParteOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_AjusteContenedorPositivoNumParteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_AjusteContenedorPositivoNumParteCompleted(Me, New WM_AjusteContenedorPositivoNumParteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_AjusteContenedorPositivo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_AjusteContenedorPositivo(ByVal prmContenedor As String, ByVal prmCantidad As String, ByVal prmUbicacion As String, ByVal prmTipoAjuste As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_AjusteContenedorPositivo", New Object() {prmContenedor, prmCantidad, prmUbicacion, prmTipoAjuste, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_AjusteContenedorPositivoAsync(ByVal prmContenedor As String, ByVal prmCantidad As String, ByVal prmUbicacion As String, ByVal prmTipoAjuste As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_AjusteContenedorPositivoAsync(prmContenedor, prmCantidad, prmUbicacion, prmTipoAjuste, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_AjusteContenedorPositivoAsync(ByVal prmContenedor As String, ByVal prmCantidad As String, ByVal prmUbicacion As String, ByVal prmTipoAjuste As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_AjusteContenedorPositivoOperationCompleted Is Nothing) Then
                Me.WM_AjusteContenedorPositivoOperationCompleted = AddressOf Me.OnWM_AjusteContenedorPositivoOperationCompleted
            End If
            Me.InvokeAsync("WM_AjusteContenedorPositivo", New Object() {prmContenedor, prmCantidad, prmUbicacion, prmTipoAjuste, prmEstacion, prmUsuario}, Me.WM_AjusteContenedorPositivoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_AjusteContenedorPositivoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_AjusteContenedorPositivoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_AjusteContenedorPositivoCompleted(Me, New WM_AjusteContenedorPositivoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_AjusteContenedorPositivoSKU", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_AjusteContenedorPositivoSKU(ByVal prmContenedor As String, ByVal prmSKU As String, ByVal prmUbicacion As String, ByVal prmTipoAjuste As String, ByVal prmNumParte As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_AjusteContenedorPositivoSKU", New Object() {prmContenedor, prmSKU, prmUbicacion, prmTipoAjuste, prmNumParte, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_AjusteContenedorPositivoSKUAsync(ByVal prmContenedor As String, ByVal prmSKU As String, ByVal prmUbicacion As String, ByVal prmTipoAjuste As String, ByVal prmNumParte As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_AjusteContenedorPositivoSKUAsync(prmContenedor, prmSKU, prmUbicacion, prmTipoAjuste, prmNumParte, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_AjusteContenedorPositivoSKUAsync(ByVal prmContenedor As String, ByVal prmSKU As String, ByVal prmUbicacion As String, ByVal prmTipoAjuste As String, ByVal prmNumParte As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_AjusteContenedorPositivoSKUOperationCompleted Is Nothing) Then
                Me.WM_AjusteContenedorPositivoSKUOperationCompleted = AddressOf Me.OnWM_AjusteContenedorPositivoSKUOperationCompleted
            End If
            Me.InvokeAsync("WM_AjusteContenedorPositivoSKU", New Object() {prmContenedor, prmSKU, prmUbicacion, prmTipoAjuste, prmNumParte, prmEstacion, prmUsuario}, Me.WM_AjusteContenedorPositivoSKUOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_AjusteContenedorPositivoSKUOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_AjusteContenedorPositivoSKUCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_AjusteContenedorPositivoSKUCompleted(Me, New WM_AjusteContenedorPositivoSKUCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_AjusteContenedorNegativo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_AjusteContenedorNegativo(ByVal prmContenedor As String, ByVal prmCantidad As String, ByVal prmUbicacion As String, ByVal prmTipoAjuste As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_AjusteContenedorNegativo", New Object() {prmContenedor, prmCantidad, prmUbicacion, prmTipoAjuste, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_AjusteContenedorNegativoAsync(ByVal prmContenedor As String, ByVal prmCantidad As String, ByVal prmUbicacion As String, ByVal prmTipoAjuste As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_AjusteContenedorNegativoAsync(prmContenedor, prmCantidad, prmUbicacion, prmTipoAjuste, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_AjusteContenedorNegativoAsync(ByVal prmContenedor As String, ByVal prmCantidad As String, ByVal prmUbicacion As String, ByVal prmTipoAjuste As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_AjusteContenedorNegativoOperationCompleted Is Nothing) Then
                Me.WM_AjusteContenedorNegativoOperationCompleted = AddressOf Me.OnWM_AjusteContenedorNegativoOperationCompleted
            End If
            Me.InvokeAsync("WM_AjusteContenedorNegativo", New Object() {prmContenedor, prmCantidad, prmUbicacion, prmTipoAjuste, prmEstacion, prmUsuario}, Me.WM_AjusteContenedorNegativoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_AjusteContenedorNegativoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_AjusteContenedorNegativoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_AjusteContenedorNegativoCompleted(Me, New WM_AjusteContenedorNegativoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_AjusteBajaEmpaque_SelProd_NE", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_AjusteBajaEmpaque_SelProd_NE(ByVal prmPallet As String, ByVal prmProducto As String, ByVal prmCantidadEmpaques As Integer, ByVal prmAjuste As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_AjusteBajaEmpaque_SelProd_NE", New Object() {prmPallet, prmProducto, prmCantidadEmpaques, prmAjuste, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_AjusteBajaEmpaque_SelProd_NEAsync(ByVal prmPallet As String, ByVal prmProducto As String, ByVal prmCantidadEmpaques As Integer, ByVal prmAjuste As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_AjusteBajaEmpaque_SelProd_NEAsync(prmPallet, prmProducto, prmCantidadEmpaques, prmAjuste, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_AjusteBajaEmpaque_SelProd_NEAsync(ByVal prmPallet As String, ByVal prmProducto As String, ByVal prmCantidadEmpaques As Integer, ByVal prmAjuste As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_AjusteBajaEmpaque_SelProd_NEOperationCompleted Is Nothing) Then
                Me.WM_AjusteBajaEmpaque_SelProd_NEOperationCompleted = AddressOf Me.OnWM_AjusteBajaEmpaque_SelProd_NEOperationCompleted
            End If
            Me.InvokeAsync("WM_AjusteBajaEmpaque_SelProd_NE", New Object() {prmPallet, prmProducto, prmCantidadEmpaques, prmAjuste, prmEstacion, prmUsuario}, Me.WM_AjusteBajaEmpaque_SelProd_NEOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_AjusteBajaEmpaque_SelProd_NEOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_AjusteBajaEmpaque_SelProd_NECompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_AjusteBajaEmpaque_SelProd_NECompleted(Me, New WM_AjusteBajaEmpaque_SelProd_NECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaPalletBajaEmpaques", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaPalletBajaEmpaques(ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaPalletBajaEmpaques", New Object() {prmPallet, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaPalletBajaEmpaquesAsync(ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaPalletBajaEmpaquesAsync(prmPallet, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaPalletBajaEmpaquesAsync(ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaPalletBajaEmpaquesOperationCompleted Is Nothing) Then
                Me.WM_ConsultaPalletBajaEmpaquesOperationCompleted = AddressOf Me.OnWM_ConsultaPalletBajaEmpaquesOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaPalletBajaEmpaques", New Object() {prmPallet, prmEstacion, prmUsuario}, Me.WM_ConsultaPalletBajaEmpaquesOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaPalletBajaEmpaquesOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaPalletBajaEmpaquesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaPalletBajaEmpaquesCompleted(Me, New WM_ConsultaPalletBajaEmpaquesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_AjusteBajaPallet", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_AjusteBajaPallet(ByVal prmPallet As String, ByVal prmAjuste As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_AjusteBajaPallet", New Object() {prmPallet, prmAjuste, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_AjusteBajaPalletAsync(ByVal prmPallet As String, ByVal prmAjuste As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_AjusteBajaPalletAsync(prmPallet, prmAjuste, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_AjusteBajaPalletAsync(ByVal prmPallet As String, ByVal prmAjuste As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_AjusteBajaPalletOperationCompleted Is Nothing) Then
                Me.WM_AjusteBajaPalletOperationCompleted = AddressOf Me.OnWM_AjusteBajaPalletOperationCompleted
            End If
            Me.InvokeAsync("WM_AjusteBajaPallet", New Object() {prmPallet, prmAjuste, prmEstacion, prmUsuario}, Me.WM_AjusteBajaPalletOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_AjusteBajaPalletOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_AjusteBajaPalletCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_AjusteBajaPalletCompleted(Me, New WM_AjusteBajaPalletCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_AjusteNuevoEmpaquePalletExistente", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_AjusteNuevoEmpaquePalletExistente(ByVal prmEmpaque As String, ByVal prmPallet As String, ByVal prmNumParte As String, ByVal prmCantidad As Double, ByVal prmRevision As String, ByVal prmAjuste As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_AjusteNuevoEmpaquePalletExistente", New Object() {prmEmpaque, prmPallet, prmNumParte, prmCantidad, prmRevision, prmAjuste, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_AjusteNuevoEmpaquePalletExistenteAsync(ByVal prmEmpaque As String, ByVal prmPallet As String, ByVal prmNumParte As String, ByVal prmCantidad As Double, ByVal prmRevision As String, ByVal prmAjuste As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_AjusteNuevoEmpaquePalletExistenteAsync(prmEmpaque, prmPallet, prmNumParte, prmCantidad, prmRevision, prmAjuste, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_AjusteNuevoEmpaquePalletExistenteAsync(ByVal prmEmpaque As String, ByVal prmPallet As String, ByVal prmNumParte As String, ByVal prmCantidad As Double, ByVal prmRevision As String, ByVal prmAjuste As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_AjusteNuevoEmpaquePalletExistenteOperationCompleted Is Nothing) Then
                Me.WM_AjusteNuevoEmpaquePalletExistenteOperationCompleted = AddressOf Me.OnWM_AjusteNuevoEmpaquePalletExistenteOperationCompleted
            End If
            Me.InvokeAsync("WM_AjusteNuevoEmpaquePalletExistente", New Object() {prmEmpaque, prmPallet, prmNumParte, prmCantidad, prmRevision, prmAjuste, prmEstacion, prmUsuario}, Me.WM_AjusteNuevoEmpaquePalletExistenteOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_AjusteNuevoEmpaquePalletExistenteOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_AjusteNuevoEmpaquePalletExistenteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_AjusteNuevoEmpaquePalletExistenteCompleted(Me, New WM_AjusteNuevoEmpaquePalletExistenteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_AjusteNuevoEmpaquePalletExistentePedimento", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_AjusteNuevoEmpaquePalletExistentePedimento(ByVal prmEmpaque As String, ByVal prmPallet As String, ByVal prmNumParte As String, ByVal prmCantidad As Double, ByVal prmPedimento As String, ByVal prmClave As String, ByVal prmFactura As String, ByVal prmFechaPedimento As String, ByVal prmFechaRecibo As String, ByVal prmAjuste As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_AjusteNuevoEmpaquePalletExistentePedimento", New Object() {prmEmpaque, prmPallet, prmNumParte, prmCantidad, prmPedimento, prmClave, prmFactura, prmFechaPedimento, prmFechaRecibo, prmAjuste, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_AjusteNuevoEmpaquePalletExistentePedimentoAsync(ByVal prmEmpaque As String, ByVal prmPallet As String, ByVal prmNumParte As String, ByVal prmCantidad As Double, ByVal prmPedimento As String, ByVal prmClave As String, ByVal prmFactura As String, ByVal prmFechaPedimento As String, ByVal prmFechaRecibo As String, ByVal prmAjuste As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_AjusteNuevoEmpaquePalletExistentePedimentoAsync(prmEmpaque, prmPallet, prmNumParte, prmCantidad, prmPedimento, prmClave, prmFactura, prmFechaPedimento, prmFechaRecibo, prmAjuste, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_AjusteNuevoEmpaquePalletExistentePedimentoAsync(ByVal prmEmpaque As String, ByVal prmPallet As String, ByVal prmNumParte As String, ByVal prmCantidad As Double, ByVal prmPedimento As String, ByVal prmClave As String, ByVal prmFactura As String, ByVal prmFechaPedimento As String, ByVal prmFechaRecibo As String, ByVal prmAjuste As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_AjusteNuevoEmpaquePalletExistentePedimentoOperationCompleted Is Nothing) Then
                Me.WM_AjusteNuevoEmpaquePalletExistentePedimentoOperationCompleted = AddressOf Me.OnWM_AjusteNuevoEmpaquePalletExistentePedimentoOperationCompleted
            End If
            Me.InvokeAsync("WM_AjusteNuevoEmpaquePalletExistentePedimento", New Object() {prmEmpaque, prmPallet, prmNumParte, prmCantidad, prmPedimento, prmClave, prmFactura, prmFechaPedimento, prmFechaRecibo, prmAjuste, prmEstacion, prmUsuario}, Me.WM_AjusteNuevoEmpaquePalletExistentePedimentoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_AjusteNuevoEmpaquePalletExistentePedimentoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_AjusteNuevoEmpaquePalletExistentePedimentoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_AjusteNuevoEmpaquePalletExistentePedimentoCompleted(Me, New WM_AjusteNuevoEmpaquePalletExistentePedimentoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_AjusteNuevoEmpaquePalletExistente_NE", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_AjusteNuevoEmpaquePalletExistente_NE(ByVal prmPallet As String, ByVal prmCantidadEmpaques As Double, ByVal prmCantidadXEmpaque As Double, ByVal prmAjuste As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_AjusteNuevoEmpaquePalletExistente_NE", New Object() {prmPallet, prmCantidadEmpaques, prmCantidadXEmpaque, prmAjuste, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_AjusteNuevoEmpaquePalletExistente_NEAsync(ByVal prmPallet As String, ByVal prmCantidadEmpaques As Double, ByVal prmCantidadXEmpaque As Double, ByVal prmAjuste As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_AjusteNuevoEmpaquePalletExistente_NEAsync(prmPallet, prmCantidadEmpaques, prmCantidadXEmpaque, prmAjuste, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_AjusteNuevoEmpaquePalletExistente_NEAsync(ByVal prmPallet As String, ByVal prmCantidadEmpaques As Double, ByVal prmCantidadXEmpaque As Double, ByVal prmAjuste As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_AjusteNuevoEmpaquePalletExistente_NEOperationCompleted Is Nothing) Then
                Me.WM_AjusteNuevoEmpaquePalletExistente_NEOperationCompleted = AddressOf Me.OnWM_AjusteNuevoEmpaquePalletExistente_NEOperationCompleted
            End If
            Me.InvokeAsync("WM_AjusteNuevoEmpaquePalletExistente_NE", New Object() {prmPallet, prmCantidadEmpaques, prmCantidadXEmpaque, prmAjuste, prmEstacion, prmUsuario}, Me.WM_AjusteNuevoEmpaquePalletExistente_NEOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_AjusteNuevoEmpaquePalletExistente_NEOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_AjusteNuevoEmpaquePalletExistente_NECompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_AjusteNuevoEmpaquePalletExistente_NECompleted(Me, New WM_AjusteNuevoEmpaquePalletExistente_NECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_AjusteCierraNuevoPallet", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_AjusteCierraNuevoPallet(ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_AjusteCierraNuevoPallet", New Object() {prmPallet, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_AjusteCierraNuevoPalletAsync(ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_AjusteCierraNuevoPalletAsync(prmPallet, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_AjusteCierraNuevoPalletAsync(ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_AjusteCierraNuevoPalletOperationCompleted Is Nothing) Then
                Me.WM_AjusteCierraNuevoPalletOperationCompleted = AddressOf Me.OnWM_AjusteCierraNuevoPalletOperationCompleted
            End If
            Me.InvokeAsync("WM_AjusteCierraNuevoPallet", New Object() {prmPallet, prmEstacion, prmUsuario}, Me.WM_AjusteCierraNuevoPalletOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_AjusteCierraNuevoPalletOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_AjusteCierraNuevoPalletCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_AjusteCierraNuevoPalletCompleted(Me, New WM_AjusteCierraNuevoPalletCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ListarAjustes", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ListarAjustes(ByVal prmEstacion As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ListarAjustes", New Object() {prmEstacion})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ListarAjustesAsync(ByVal prmEstacion As String)
            Me.WM_ListarAjustesAsync(prmEstacion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ListarAjustesAsync(ByVal prmEstacion As String, ByVal userState As Object)
            If (Me.WM_ListarAjustesOperationCompleted Is Nothing) Then
                Me.WM_ListarAjustesOperationCompleted = AddressOf Me.OnWM_ListarAjustesOperationCompleted
            End If
            Me.InvokeAsync("WM_ListarAjustes", New Object() {prmEstacion}, Me.WM_ListarAjustesOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ListarAjustesOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ListarAjustesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ListarAjustesCompleted(Me, New WM_ListarAjustesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ListarConceptosAjuste", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ListarConceptosAjuste(ByVal prmTipoAjuste As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ListarConceptosAjuste", New Object() {prmTipoAjuste, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ListarConceptosAjusteAsync(ByVal prmTipoAjuste As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ListarConceptosAjusteAsync(prmTipoAjuste, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ListarConceptosAjusteAsync(ByVal prmTipoAjuste As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ListarConceptosAjusteOperationCompleted Is Nothing) Then
                Me.WM_ListarConceptosAjusteOperationCompleted = AddressOf Me.OnWM_ListarConceptosAjusteOperationCompleted
            End If
            Me.InvokeAsync("WM_ListarConceptosAjuste", New Object() {prmTipoAjuste, prmEstacion, prmUsuario}, Me.WM_ListarConceptosAjusteOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ListarConceptosAjusteOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ListarConceptosAjusteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ListarConceptosAjusteCompleted(Me, New WM_ListarConceptosAjusteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_AjusteConsultarPalletAbierto", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_AjusteConsultarPalletAbierto(ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_AjusteConsultarPalletAbierto", New Object() {prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_AjusteConsultarPalletAbiertoAsync(ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_AjusteConsultarPalletAbiertoAsync(prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_AjusteConsultarPalletAbiertoAsync(ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_AjusteConsultarPalletAbiertoOperationCompleted Is Nothing) Then
                Me.WM_AjusteConsultarPalletAbiertoOperationCompleted = AddressOf Me.OnWM_AjusteConsultarPalletAbiertoOperationCompleted
            End If
            Me.InvokeAsync("WM_AjusteConsultarPalletAbierto", New Object() {prmEstacion, prmUsuario}, Me.WM_AjusteConsultarPalletAbiertoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_AjusteConsultarPalletAbiertoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_AjusteConsultarPalletAbiertoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_AjusteConsultarPalletAbiertoCompleted(Me, New WM_AjusteConsultarPalletAbiertoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_AjusteNuevoEmpaqueNuevoPallet", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_AjusteNuevoEmpaqueNuevoPallet(ByVal prmEmpaque As String, ByVal prmNumParte As String, ByVal prmCantidad As Double, ByVal prmRevision As String, ByVal prmAjuste As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_AjusteNuevoEmpaqueNuevoPallet", New Object() {prmEmpaque, prmNumParte, prmCantidad, prmRevision, prmAjuste, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_AjusteNuevoEmpaqueNuevoPalletAsync(ByVal prmEmpaque As String, ByVal prmNumParte As String, ByVal prmCantidad As Double, ByVal prmRevision As String, ByVal prmAjuste As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_AjusteNuevoEmpaqueNuevoPalletAsync(prmEmpaque, prmNumParte, prmCantidad, prmRevision, prmAjuste, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_AjusteNuevoEmpaqueNuevoPalletAsync(ByVal prmEmpaque As String, ByVal prmNumParte As String, ByVal prmCantidad As Double, ByVal prmRevision As String, ByVal prmAjuste As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_AjusteNuevoEmpaqueNuevoPalletOperationCompleted Is Nothing) Then
                Me.WM_AjusteNuevoEmpaqueNuevoPalletOperationCompleted = AddressOf Me.OnWM_AjusteNuevoEmpaqueNuevoPalletOperationCompleted
            End If
            Me.InvokeAsync("WM_AjusteNuevoEmpaqueNuevoPallet", New Object() {prmEmpaque, prmNumParte, prmCantidad, prmRevision, prmAjuste, prmEstacion, prmUsuario}, Me.WM_AjusteNuevoEmpaqueNuevoPalletOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_AjusteNuevoEmpaqueNuevoPalletOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_AjusteNuevoEmpaqueNuevoPalletCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_AjusteNuevoEmpaqueNuevoPalletCompleted(Me, New WM_AjusteNuevoEmpaqueNuevoPalletCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_RegistraEmpaqueNvoPallet", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_RegistraEmpaqueNvoPallet(ByVal prmCodigoEmpaque As String, ByVal prmNumParte As String, ByVal prmCantidad As Double, ByVal prmAjuste As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_RegistraEmpaqueNvoPallet", New Object() {prmCodigoEmpaque, prmNumParte, prmCantidad, prmAjuste, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_RegistraEmpaqueNvoPalletAsync(ByVal prmCodigoEmpaque As String, ByVal prmNumParte As String, ByVal prmCantidad As Double, ByVal prmAjuste As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_RegistraEmpaqueNvoPalletAsync(prmCodigoEmpaque, prmNumParte, prmCantidad, prmAjuste, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_RegistraEmpaqueNvoPalletAsync(ByVal prmCodigoEmpaque As String, ByVal prmNumParte As String, ByVal prmCantidad As Double, ByVal prmAjuste As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_RegistraEmpaqueNvoPalletOperationCompleted Is Nothing) Then
                Me.WM_RegistraEmpaqueNvoPalletOperationCompleted = AddressOf Me.OnWM_RegistraEmpaqueNvoPalletOperationCompleted
            End If
            Me.InvokeAsync("WM_RegistraEmpaqueNvoPallet", New Object() {prmCodigoEmpaque, prmNumParte, prmCantidad, prmAjuste, prmEstacion, prmUsuario}, Me.WM_RegistraEmpaqueNvoPalletOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_RegistraEmpaqueNvoPalletOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_RegistraEmpaqueNvoPalletCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_RegistraEmpaqueNvoPalletCompleted(Me, New WM_RegistraEmpaqueNvoPalletCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_RegistraEmpaqueNvoPalletv2", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_RegistraEmpaqueNvoPalletv2(ByVal prmCodigoEmpaque As String, ByVal prmNumParte As String, ByVal prmCantidad As Double, ByVal prmAjuste As String, ByVal prmFechaCad As String, ByVal prmLote As String, ByVal prmMercado As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_RegistraEmpaqueNvoPalletv2", New Object() {prmCodigoEmpaque, prmNumParte, prmCantidad, prmAjuste, prmFechaCad, prmLote, prmMercado, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_RegistraEmpaqueNvoPalletv2Async(ByVal prmCodigoEmpaque As String, ByVal prmNumParte As String, ByVal prmCantidad As Double, ByVal prmAjuste As String, ByVal prmFechaCad As String, ByVal prmLote As String, ByVal prmMercado As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_RegistraEmpaqueNvoPalletv2Async(prmCodigoEmpaque, prmNumParte, prmCantidad, prmAjuste, prmFechaCad, prmLote, prmMercado, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_RegistraEmpaqueNvoPalletv2Async(ByVal prmCodigoEmpaque As String, ByVal prmNumParte As String, ByVal prmCantidad As Double, ByVal prmAjuste As String, ByVal prmFechaCad As String, ByVal prmLote As String, ByVal prmMercado As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_RegistraEmpaqueNvoPalletv2OperationCompleted Is Nothing) Then
                Me.WM_RegistraEmpaqueNvoPalletv2OperationCompleted = AddressOf Me.OnWM_RegistraEmpaqueNvoPalletv2OperationCompleted
            End If
            Me.InvokeAsync("WM_RegistraEmpaqueNvoPalletv2", New Object() {prmCodigoEmpaque, prmNumParte, prmCantidad, prmAjuste, prmFechaCad, prmLote, prmMercado, prmEstacion, prmUsuario}, Me.WM_RegistraEmpaqueNvoPalletv2OperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_RegistraEmpaqueNvoPalletv2OperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_RegistraEmpaqueNvoPalletv2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_RegistraEmpaqueNvoPalletv2Completed(Me, New WM_RegistraEmpaqueNvoPalletv2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_RegistraEmpaqueNvoPallet_NE", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_RegistraEmpaqueNvoPallet_NE(ByVal prmCantidadEmpaques As Integer, ByVal prmNumParte As String, ByVal prmCantidad As Double, ByVal prmAjuste As String, ByVal prmFechaCad As String, ByVal prmLote As String, ByVal prmMercado As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_RegistraEmpaqueNvoPallet_NE", New Object() {prmCantidadEmpaques, prmNumParte, prmCantidad, prmAjuste, prmFechaCad, prmLote, prmMercado, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_RegistraEmpaqueNvoPallet_NEAsync(ByVal prmCantidadEmpaques As Integer, ByVal prmNumParte As String, ByVal prmCantidad As Double, ByVal prmAjuste As String, ByVal prmFechaCad As String, ByVal prmLote As String, ByVal prmMercado As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_RegistraEmpaqueNvoPallet_NEAsync(prmCantidadEmpaques, prmNumParte, prmCantidad, prmAjuste, prmFechaCad, prmLote, prmMercado, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_RegistraEmpaqueNvoPallet_NEAsync(ByVal prmCantidadEmpaques As Integer, ByVal prmNumParte As String, ByVal prmCantidad As Double, ByVal prmAjuste As String, ByVal prmFechaCad As String, ByVal prmLote As String, ByVal prmMercado As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_RegistraEmpaqueNvoPallet_NEOperationCompleted Is Nothing) Then
                Me.WM_RegistraEmpaqueNvoPallet_NEOperationCompleted = AddressOf Me.OnWM_RegistraEmpaqueNvoPallet_NEOperationCompleted
            End If
            Me.InvokeAsync("WM_RegistraEmpaqueNvoPallet_NE", New Object() {prmCantidadEmpaques, prmNumParte, prmCantidad, prmAjuste, prmFechaCad, prmLote, prmMercado, prmEstacion, prmUsuario}, Me.WM_RegistraEmpaqueNvoPallet_NEOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_RegistraEmpaqueNvoPallet_NEOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_RegistraEmpaqueNvoPallet_NECompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_RegistraEmpaqueNvoPallet_NECompleted(Me, New WM_RegistraEmpaqueNvoPallet_NECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_CierraPalletAjuste", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_CierraPalletAjuste(ByVal prmCodigoPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_CierraPalletAjuste", New Object() {prmCodigoPallet, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_CierraPalletAjusteAsync(ByVal prmCodigoPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_CierraPalletAjusteAsync(prmCodigoPallet, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_CierraPalletAjusteAsync(ByVal prmCodigoPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_CierraPalletAjusteOperationCompleted Is Nothing) Then
                Me.WM_CierraPalletAjusteOperationCompleted = AddressOf Me.OnWM_CierraPalletAjusteOperationCompleted
            End If
            Me.InvokeAsync("WM_CierraPalletAjuste", New Object() {prmCodigoPallet, prmEstacion, prmUsuario}, Me.WM_CierraPalletAjusteOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_CierraPalletAjusteOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_CierraPalletAjusteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_CierraPalletAjusteCompleted(Me, New WM_CierraPalletAjusteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_RegistraAjusteNvoPallet", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_RegistraAjusteNvoPallet(ByVal prmCodigoEmpaque As String, ByVal prmCantidad As Double, ByVal prmAjuste As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_RegistraAjusteNvoPallet", New Object() {prmCodigoEmpaque, prmCantidad, prmAjuste, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_RegistraAjusteNvoPalletAsync(ByVal prmCodigoEmpaque As String, ByVal prmCantidad As Double, ByVal prmAjuste As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_RegistraAjusteNvoPalletAsync(prmCodigoEmpaque, prmCantidad, prmAjuste, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_RegistraAjusteNvoPalletAsync(ByVal prmCodigoEmpaque As String, ByVal prmCantidad As Double, ByVal prmAjuste As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_RegistraAjusteNvoPalletOperationCompleted Is Nothing) Then
                Me.WM_RegistraAjusteNvoPalletOperationCompleted = AddressOf Me.OnWM_RegistraAjusteNvoPalletOperationCompleted
            End If
            Me.InvokeAsync("WM_RegistraAjusteNvoPallet", New Object() {prmCodigoEmpaque, prmCantidad, prmAjuste, prmEstacion, prmUsuario}, Me.WM_RegistraAjusteNvoPalletOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_RegistraAjusteNvoPalletOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_RegistraAjusteNvoPalletCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_RegistraAjusteNvoPalletCompleted(Me, New WM_RegistraAjusteNvoPalletCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_AjusteNuevoEmpaque_NE", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_AjusteNuevoEmpaque_NE(ByVal prmCantEmpaques As String, ByVal prmPallet As String, ByVal prmNumParte As String, ByVal prmCantidad As String, ByVal prmTipoAjuste As String, ByVal prmFechaCad As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_AjusteNuevoEmpaque_NE", New Object() {prmCantEmpaques, prmPallet, prmNumParte, prmCantidad, prmTipoAjuste, prmFechaCad, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_AjusteNuevoEmpaque_NEAsync(ByVal prmCantEmpaques As String, ByVal prmPallet As String, ByVal prmNumParte As String, ByVal prmCantidad As String, ByVal prmTipoAjuste As String, ByVal prmFechaCad As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_AjusteNuevoEmpaque_NEAsync(prmCantEmpaques, prmPallet, prmNumParte, prmCantidad, prmTipoAjuste, prmFechaCad, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_AjusteNuevoEmpaque_NEAsync(ByVal prmCantEmpaques As String, ByVal prmPallet As String, ByVal prmNumParte As String, ByVal prmCantidad As String, ByVal prmTipoAjuste As String, ByVal prmFechaCad As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_AjusteNuevoEmpaque_NEOperationCompleted Is Nothing) Then
                Me.WM_AjusteNuevoEmpaque_NEOperationCompleted = AddressOf Me.OnWM_AjusteNuevoEmpaque_NEOperationCompleted
            End If
            Me.InvokeAsync("WM_AjusteNuevoEmpaque_NE", New Object() {prmCantEmpaques, prmPallet, prmNumParte, prmCantidad, prmTipoAjuste, prmFechaCad, prmEstacion, prmUsuario}, Me.WM_AjusteNuevoEmpaque_NEOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_AjusteNuevoEmpaque_NEOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_AjusteNuevoEmpaque_NECompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_AjusteNuevoEmpaque_NECompleted(Me, New WM_AjusteNuevoEmpaque_NECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_CuarentenaPallet", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_CuarentenaPallet(ByVal prmCodigoPallet As String, ByVal prmEstatus As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_CuarentenaPallet", New Object() {prmCodigoPallet, prmEstatus, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_CuarentenaPalletAsync(ByVal prmCodigoPallet As String, ByVal prmEstatus As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_CuarentenaPalletAsync(prmCodigoPallet, prmEstatus, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_CuarentenaPalletAsync(ByVal prmCodigoPallet As String, ByVal prmEstatus As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_CuarentenaPalletOperationCompleted Is Nothing) Then
                Me.WM_CuarentenaPalletOperationCompleted = AddressOf Me.OnWM_CuarentenaPalletOperationCompleted
            End If
            Me.InvokeAsync("WM_CuarentenaPallet", New Object() {prmCodigoPallet, prmEstatus, prmEstacion, prmUsuario}, Me.WM_CuarentenaPalletOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_CuarentenaPalletOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_CuarentenaPalletCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_CuarentenaPalletCompleted(Me, New WM_CuarentenaPalletCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_CuarentenaEmpaque", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_CuarentenaEmpaque(ByVal prmCodigoEmpaque As String, ByVal prmEstatus As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_CuarentenaEmpaque", New Object() {prmCodigoEmpaque, prmEstatus, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_CuarentenaEmpaqueAsync(ByVal prmCodigoEmpaque As String, ByVal prmEstatus As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_CuarentenaEmpaqueAsync(prmCodigoEmpaque, prmEstatus, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_CuarentenaEmpaqueAsync(ByVal prmCodigoEmpaque As String, ByVal prmEstatus As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_CuarentenaEmpaqueOperationCompleted Is Nothing) Then
                Me.WM_CuarentenaEmpaqueOperationCompleted = AddressOf Me.OnWM_CuarentenaEmpaqueOperationCompleted
            End If
            Me.InvokeAsync("WM_CuarentenaEmpaque", New Object() {prmCodigoEmpaque, prmEstatus, prmEstacion, prmUsuario}, Me.WM_CuarentenaEmpaqueOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_CuarentenaEmpaqueOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_CuarentenaEmpaqueCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_CuarentenaEmpaqueCompleted(Me, New WM_CuarentenaEmpaqueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ImprimeEtiquetaEmpaque", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ImprimeEtiquetaEmpaque(ByVal prmLote As String, ByVal prmNumEtiquetas As Integer, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ImprimeEtiquetaEmpaque", New Object() {prmLote, prmNumEtiquetas, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ImprimeEtiquetaEmpaqueAsync(ByVal prmLote As String, ByVal prmNumEtiquetas As Integer, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ImprimeEtiquetaEmpaqueAsync(prmLote, prmNumEtiquetas, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ImprimeEtiquetaEmpaqueAsync(ByVal prmLote As String, ByVal prmNumEtiquetas As Integer, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ImprimeEtiquetaEmpaqueOperationCompleted Is Nothing) Then
                Me.WM_ImprimeEtiquetaEmpaqueOperationCompleted = AddressOf Me.OnWM_ImprimeEtiquetaEmpaqueOperationCompleted
            End If
            Me.InvokeAsync("WM_ImprimeEtiquetaEmpaque", New Object() {prmLote, prmNumEtiquetas, prmEstacion, prmUsuario}, Me.WM_ImprimeEtiquetaEmpaqueOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ImprimeEtiquetaEmpaqueOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ImprimeEtiquetaEmpaqueCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ImprimeEtiquetaEmpaqueCompleted(Me, New WM_ImprimeEtiquetaEmpaqueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ImpEtiquetaEmpaque", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ImpEtiquetaEmpaque(ByVal prmLote As String, ByVal prmNumEtiquetas As Integer, ByVal prmImpresora As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ImpEtiquetaEmpaque", New Object() {prmLote, prmNumEtiquetas, prmImpresora, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ImpEtiquetaEmpaqueAsync(ByVal prmLote As String, ByVal prmNumEtiquetas As Integer, ByVal prmImpresora As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ImpEtiquetaEmpaqueAsync(prmLote, prmNumEtiquetas, prmImpresora, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ImpEtiquetaEmpaqueAsync(ByVal prmLote As String, ByVal prmNumEtiquetas As Integer, ByVal prmImpresora As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ImpEtiquetaEmpaqueOperationCompleted Is Nothing) Then
                Me.WM_ImpEtiquetaEmpaqueOperationCompleted = AddressOf Me.OnWM_ImpEtiquetaEmpaqueOperationCompleted
            End If
            Me.InvokeAsync("WM_ImpEtiquetaEmpaque", New Object() {prmLote, prmNumEtiquetas, prmImpresora, prmEstacion, prmUsuario}, Me.WM_ImpEtiquetaEmpaqueOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ImpEtiquetaEmpaqueOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ImpEtiquetaEmpaqueCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ImpEtiquetaEmpaqueCompleted(Me, New WM_ImpEtiquetaEmpaqueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaPalletAColocar", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaPalletAColocar(ByVal prmCodigoPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaPalletAColocar", New Object() {prmCodigoPallet, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaPalletAColocarAsync(ByVal prmCodigoPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaPalletAColocarAsync(prmCodigoPallet, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaPalletAColocarAsync(ByVal prmCodigoPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaPalletAColocarOperationCompleted Is Nothing) Then
                Me.WM_ConsultaPalletAColocarOperationCompleted = AddressOf Me.OnWM_ConsultaPalletAColocarOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaPalletAColocar", New Object() {prmCodigoPallet, prmEstacion, prmUsuario}, Me.WM_ConsultaPalletAColocarOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaPalletAColocarOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaPalletAColocarCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaPalletAColocarCompleted(Me, New WM_ConsultaPalletAColocarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_CuarentenaRecuperaPalletCompleto", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_CuarentenaRecuperaPalletCompleto(ByVal prmCodigoPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_CuarentenaRecuperaPalletCompleto", New Object() {prmCodigoPallet, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_CuarentenaRecuperaPalletCompletoAsync(ByVal prmCodigoPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_CuarentenaRecuperaPalletCompletoAsync(prmCodigoPallet, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_CuarentenaRecuperaPalletCompletoAsync(ByVal prmCodigoPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_CuarentenaRecuperaPalletCompletoOperationCompleted Is Nothing) Then
                Me.WM_CuarentenaRecuperaPalletCompletoOperationCompleted = AddressOf Me.OnWM_CuarentenaRecuperaPalletCompletoOperationCompleted
            End If
            Me.InvokeAsync("WM_CuarentenaRecuperaPalletCompleto", New Object() {prmCodigoPallet, prmEstacion, prmUsuario}, Me.WM_CuarentenaRecuperaPalletCompletoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_CuarentenaRecuperaPalletCompletoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_CuarentenaRecuperaPalletCompletoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_CuarentenaRecuperaPalletCompletoCompleted(Me, New WM_CuarentenaRecuperaPalletCompletoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaPalletAConsolidar", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaPalletAConsolidar(ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaPalletAConsolidar", New Object() {prmPallet, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaPalletAConsolidarAsync(ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaPalletAConsolidarAsync(prmPallet, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaPalletAConsolidarAsync(ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaPalletAConsolidarOperationCompleted Is Nothing) Then
                Me.WM_ConsultaPalletAConsolidarOperationCompleted = AddressOf Me.OnWM_ConsultaPalletAConsolidarOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaPalletAConsolidar", New Object() {prmPallet, prmEstacion, prmUsuario}, Me.WM_ConsultaPalletAConsolidarOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaPalletAConsolidarOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaPalletAConsolidarCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaPalletAConsolidarCompleted(Me, New WM_ConsultaPalletAConsolidarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaPalletCons", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaPalletCons(ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaPalletCons", New Object() {prmPallet, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaPalletConsAsync(ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaPalletConsAsync(prmPallet, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaPalletConsAsync(ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaPalletConsOperationCompleted Is Nothing) Then
                Me.WM_ConsultaPalletConsOperationCompleted = AddressOf Me.OnWM_ConsultaPalletConsOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaPalletCons", New Object() {prmPallet, prmEstacion, prmUsuario}, Me.WM_ConsultaPalletConsOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaPalletConsOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaPalletConsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaPalletConsCompleted(Me, New WM_ConsultaPalletConsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_CreaPalletCons", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_CreaPalletCons(ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_CreaPalletCons", New Object() {prmPallet, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_CreaPalletConsAsync(ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_CreaPalletConsAsync(prmPallet, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_CreaPalletConsAsync(ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_CreaPalletConsOperationCompleted Is Nothing) Then
                Me.WM_CreaPalletConsOperationCompleted = AddressOf Me.OnWM_CreaPalletConsOperationCompleted
            End If
            Me.InvokeAsync("WM_CreaPalletCons", New Object() {prmPallet, prmEstacion, prmUsuario}, Me.WM_CreaPalletConsOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_CreaPalletConsOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_CreaPalletConsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_CreaPalletConsCompleted(Me, New WM_CreaPalletConsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaEmpaquesCarrito", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaEmpaquesCarrito(ByVal prmDocumento As String, ByVal prmCarrito As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaEmpaquesCarrito", New Object() {prmDocumento, prmCarrito, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaEmpaquesCarritoAsync(ByVal prmDocumento As String, ByVal prmCarrito As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaEmpaquesCarritoAsync(prmDocumento, prmCarrito, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaEmpaquesCarritoAsync(ByVal prmDocumento As String, ByVal prmCarrito As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaEmpaquesCarritoOperationCompleted Is Nothing) Then
                Me.WM_ConsultaEmpaquesCarritoOperationCompleted = AddressOf Me.OnWM_ConsultaEmpaquesCarritoOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaEmpaquesCarrito", New Object() {prmDocumento, prmCarrito, prmEstacion, prmUsuario}, Me.WM_ConsultaEmpaquesCarritoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaEmpaquesCarritoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaEmpaquesCarritoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaEmpaquesCarritoCompleted(Me, New WM_ConsultaEmpaquesCarritoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaPedidoSurtidoReempaque", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaPedidoSurtidoReempaque(ByVal prmPedido As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaPedidoSurtidoReempaque", New Object() {prmPedido, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaPedidoSurtidoReempaqueAsync(ByVal prmPedido As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaPedidoSurtidoReempaqueAsync(prmPedido, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaPedidoSurtidoReempaqueAsync(ByVal prmPedido As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaPedidoSurtidoReempaqueOperationCompleted Is Nothing) Then
                Me.WM_ConsultaPedidoSurtidoReempaqueOperationCompleted = AddressOf Me.OnWM_ConsultaPedidoSurtidoReempaqueOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaPedidoSurtidoReempaque", New Object() {prmPedido, prmEstacion, prmUsuario}, Me.WM_ConsultaPedidoSurtidoReempaqueOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaPedidoSurtidoReempaqueOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaPedidoSurtidoReempaqueCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaPedidoSurtidoReempaqueCompleted(Me, New WM_ConsultaPedidoSurtidoReempaqueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_CreaPalletReempaque", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_CreaPalletReempaque(ByVal prmEmbarque As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_CreaPalletReempaque", New Object() {prmEmbarque, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_CreaPalletReempaqueAsync(ByVal prmEmbarque As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_CreaPalletReempaqueAsync(prmEmbarque, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_CreaPalletReempaqueAsync(ByVal prmEmbarque As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_CreaPalletReempaqueOperationCompleted Is Nothing) Then
                Me.WM_CreaPalletReempaqueOperationCompleted = AddressOf Me.OnWM_CreaPalletReempaqueOperationCompleted
            End If
            Me.InvokeAsync("WM_CreaPalletReempaque", New Object() {prmEmbarque, prmEstacion, prmUsuario}, Me.WM_CreaPalletReempaqueOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_CreaPalletReempaqueOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_CreaPalletReempaqueCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_CreaPalletReempaqueCompleted(Me, New WM_CreaPalletReempaqueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_CerrarReempaque", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_CerrarReempaque(ByVal prmEmbarque As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_CerrarReempaque", New Object() {prmEmbarque, prmPallet, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_CerrarReempaqueAsync(ByVal prmEmbarque As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_CerrarReempaqueAsync(prmEmbarque, prmPallet, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_CerrarReempaqueAsync(ByVal prmEmbarque As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_CerrarReempaqueOperationCompleted Is Nothing) Then
                Me.WM_CerrarReempaqueOperationCompleted = AddressOf Me.OnWM_CerrarReempaqueOperationCompleted
            End If
            Me.InvokeAsync("WM_CerrarReempaque", New Object() {prmEmbarque, prmPallet, prmEstacion, prmUsuario}, Me.WM_CerrarReempaqueOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_CerrarReempaqueOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_CerrarReempaqueCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_CerrarReempaqueCompleted(Me, New WM_CerrarReempaqueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_CancelaReempaque", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_CancelaReempaque(ByVal prmEmbarque As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_CancelaReempaque", New Object() {prmEmbarque, prmPallet, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_CancelaReempaqueAsync(ByVal prmEmbarque As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_CancelaReempaqueAsync(prmEmbarque, prmPallet, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_CancelaReempaqueAsync(ByVal prmEmbarque As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_CancelaReempaqueOperationCompleted Is Nothing) Then
                Me.WM_CancelaReempaqueOperationCompleted = AddressOf Me.OnWM_CancelaReempaqueOperationCompleted
            End If
            Me.InvokeAsync("WM_CancelaReempaque", New Object() {prmEmbarque, prmPallet, prmEstacion, prmUsuario}, Me.WM_CancelaReempaqueOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_CancelaReempaqueOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_CancelaReempaqueCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_CancelaReempaqueCompleted(Me, New WM_CancelaReempaqueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_OSConsultaPalletConsAbierto", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_OSConsultaPalletConsAbierto(ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_OSConsultaPalletConsAbierto", New Object() {prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_OSConsultaPalletConsAbiertoAsync(ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_OSConsultaPalletConsAbiertoAsync(prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_OSConsultaPalletConsAbiertoAsync(ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_OSConsultaPalletConsAbiertoOperationCompleted Is Nothing) Then
                Me.WM_OSConsultaPalletConsAbiertoOperationCompleted = AddressOf Me.OnWM_OSConsultaPalletConsAbiertoOperationCompleted
            End If
            Me.InvokeAsync("WM_OSConsultaPalletConsAbierto", New Object() {prmEstacion, prmUsuario}, Me.WM_OSConsultaPalletConsAbiertoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_OSConsultaPalletConsAbiertoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_OSConsultaPalletConsAbiertoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_OSConsultaPalletConsAbiertoCompleted(Me, New WM_OSConsultaPalletConsAbiertoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_RegistraEmpaqueCons", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_RegistraEmpaqueCons(ByVal prmPallet As String, ByVal prmEmpaque As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_RegistraEmpaqueCons", New Object() {prmPallet, prmEmpaque, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_RegistraEmpaqueConsAsync(ByVal prmPallet As String, ByVal prmEmpaque As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_RegistraEmpaqueConsAsync(prmPallet, prmEmpaque, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_RegistraEmpaqueConsAsync(ByVal prmPallet As String, ByVal prmEmpaque As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_RegistraEmpaqueConsOperationCompleted Is Nothing) Then
                Me.WM_RegistraEmpaqueConsOperationCompleted = AddressOf Me.OnWM_RegistraEmpaqueConsOperationCompleted
            End If
            Me.InvokeAsync("WM_RegistraEmpaqueCons", New Object() {prmPallet, prmEmpaque, prmEstacion, prmUsuario}, Me.WM_RegistraEmpaqueConsOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_RegistraEmpaqueConsOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_RegistraEmpaqueConsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_RegistraEmpaqueConsCompleted(Me, New WM_RegistraEmpaqueConsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_RegistraConsolidacion_NE", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_RegistraConsolidacion_NE(ByVal prmPallet As String, ByVal prmPalletAConsolidar As String, ByVal prmProducto As String, ByVal prmCantidadEmpaques As Integer, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_RegistraConsolidacion_NE", New Object() {prmPallet, prmPalletAConsolidar, prmProducto, prmCantidadEmpaques, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_RegistraConsolidacion_NEAsync(ByVal prmPallet As String, ByVal prmPalletAConsolidar As String, ByVal prmProducto As String, ByVal prmCantidadEmpaques As Integer, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_RegistraConsolidacion_NEAsync(prmPallet, prmPalletAConsolidar, prmProducto, prmCantidadEmpaques, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_RegistraConsolidacion_NEAsync(ByVal prmPallet As String, ByVal prmPalletAConsolidar As String, ByVal prmProducto As String, ByVal prmCantidadEmpaques As Integer, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_RegistraConsolidacion_NEOperationCompleted Is Nothing) Then
                Me.WM_RegistraConsolidacion_NEOperationCompleted = AddressOf Me.OnWM_RegistraConsolidacion_NEOperationCompleted
            End If
            Me.InvokeAsync("WM_RegistraConsolidacion_NE", New Object() {prmPallet, prmPalletAConsolidar, prmProducto, prmCantidadEmpaques, prmEstacion, prmUsuario}, Me.WM_RegistraConsolidacion_NEOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_RegistraConsolidacion_NEOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_RegistraConsolidacion_NECompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_RegistraConsolidacion_NECompleted(Me, New WM_RegistraConsolidacion_NECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_RegistraEmpaqueCons_NE_old", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_RegistraEmpaqueCons_NE_old(ByVal prmPallet As String, ByVal prmPalletAConsolidar As String, ByVal prmCantidadEmpaques As Integer, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_RegistraEmpaqueCons_NE_old", New Object() {prmPallet, prmPalletAConsolidar, prmCantidadEmpaques, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_RegistraEmpaqueCons_NE_oldAsync(ByVal prmPallet As String, ByVal prmPalletAConsolidar As String, ByVal prmCantidadEmpaques As Integer, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_RegistraEmpaqueCons_NE_oldAsync(prmPallet, prmPalletAConsolidar, prmCantidadEmpaques, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_RegistraEmpaqueCons_NE_oldAsync(ByVal prmPallet As String, ByVal prmPalletAConsolidar As String, ByVal prmCantidadEmpaques As Integer, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_RegistraEmpaqueCons_NE_oldOperationCompleted Is Nothing) Then
                Me.WM_RegistraEmpaqueCons_NE_oldOperationCompleted = AddressOf Me.OnWM_RegistraEmpaqueCons_NE_oldOperationCompleted
            End If
            Me.InvokeAsync("WM_RegistraEmpaqueCons_NE_old", New Object() {prmPallet, prmPalletAConsolidar, prmCantidadEmpaques, prmEstacion, prmUsuario}, Me.WM_RegistraEmpaqueCons_NE_oldOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_RegistraEmpaqueCons_NE_oldOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_RegistraEmpaqueCons_NE_oldCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_RegistraEmpaqueCons_NE_oldCompleted(Me, New WM_RegistraEmpaqueCons_NE_oldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_CancelaConsolidacion", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_CancelaConsolidacion(ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_CancelaConsolidacion", New Object() {prmPallet, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_CancelaConsolidacionAsync(ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_CancelaConsolidacionAsync(prmPallet, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_CancelaConsolidacionAsync(ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_CancelaConsolidacionOperationCompleted Is Nothing) Then
                Me.WM_CancelaConsolidacionOperationCompleted = AddressOf Me.OnWM_CancelaConsolidacionOperationCompleted
            End If
            Me.InvokeAsync("WM_CancelaConsolidacion", New Object() {prmPallet, prmEstacion, prmUsuario}, Me.WM_CancelaConsolidacionOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_CancelaConsolidacionOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_CancelaConsolidacionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_CancelaConsolidacionCompleted(Me, New WM_CancelaConsolidacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_CerrarConsolidacion", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_CerrarConsolidacion(ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_CerrarConsolidacion", New Object() {prmPallet, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_CerrarConsolidacionAsync(ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_CerrarConsolidacionAsync(prmPallet, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_CerrarConsolidacionAsync(ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_CerrarConsolidacionOperationCompleted Is Nothing) Then
                Me.WM_CerrarConsolidacionOperationCompleted = AddressOf Me.OnWM_CerrarConsolidacionOperationCompleted
            End If
            Me.InvokeAsync("WM_CerrarConsolidacion", New Object() {prmPallet, prmEstacion, prmUsuario}, Me.WM_CerrarConsolidacionOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_CerrarConsolidacionOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_CerrarConsolidacionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_CerrarConsolidacionCompleted(Me, New WM_CerrarConsolidacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaPalletReempaque", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaPalletReempaque(ByVal prmEmbarque As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaPalletReempaque", New Object() {prmEmbarque, prmPallet, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaPalletReempaqueAsync(ByVal prmEmbarque As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaPalletReempaqueAsync(prmEmbarque, prmPallet, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaPalletReempaqueAsync(ByVal prmEmbarque As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaPalletReempaqueOperationCompleted Is Nothing) Then
                Me.WM_ConsultaPalletReempaqueOperationCompleted = AddressOf Me.OnWM_ConsultaPalletReempaqueOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaPalletReempaque", New Object() {prmEmbarque, prmPallet, prmEstacion, prmUsuario}, Me.WM_ConsultaPalletReempaqueOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaPalletReempaqueOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaPalletReempaqueCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaPalletReempaqueCompleted(Me, New WM_ConsultaPalletReempaqueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_RegistraReempaque_NE", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_RegistraReempaque_NE(ByVal prmDocumento As String, ByVal prmPallet As String, ByVal prmPalletAConsolidar As String, ByVal prmProducto As String, ByVal prmCantidadEmpaques As Integer, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_RegistraReempaque_NE", New Object() {prmDocumento, prmPallet, prmPalletAConsolidar, prmProducto, prmCantidadEmpaques, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_RegistraReempaque_NEAsync(ByVal prmDocumento As String, ByVal prmPallet As String, ByVal prmPalletAConsolidar As String, ByVal prmProducto As String, ByVal prmCantidadEmpaques As Integer, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_RegistraReempaque_NEAsync(prmDocumento, prmPallet, prmPalletAConsolidar, prmProducto, prmCantidadEmpaques, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_RegistraReempaque_NEAsync(ByVal prmDocumento As String, ByVal prmPallet As String, ByVal prmPalletAConsolidar As String, ByVal prmProducto As String, ByVal prmCantidadEmpaques As Integer, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_RegistraReempaque_NEOperationCompleted Is Nothing) Then
                Me.WM_RegistraReempaque_NEOperationCompleted = AddressOf Me.OnWM_RegistraReempaque_NEOperationCompleted
            End If
            Me.InvokeAsync("WM_RegistraReempaque_NE", New Object() {prmDocumento, prmPallet, prmPalletAConsolidar, prmProducto, prmCantidadEmpaques, prmEstacion, prmUsuario}, Me.WM_RegistraReempaque_NEOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_RegistraReempaque_NEOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_RegistraReempaque_NECompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_RegistraReempaque_NECompleted(Me, New WM_RegistraReempaque_NECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_RegistraReempaque", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_RegistraReempaque(ByVal prmDocumento As String, ByVal prmPallet As String, ByVal prmPalletAConsolidar As String, ByVal prmProducto As String, ByVal prmCantidadEmpaques As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_RegistraReempaque", New Object() {prmDocumento, prmPallet, prmPalletAConsolidar, prmProducto, prmCantidadEmpaques, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_RegistraReempaqueAsync(ByVal prmDocumento As String, ByVal prmPallet As String, ByVal prmPalletAConsolidar As String, ByVal prmProducto As String, ByVal prmCantidadEmpaques As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_RegistraReempaqueAsync(prmDocumento, prmPallet, prmPalletAConsolidar, prmProducto, prmCantidadEmpaques, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_RegistraReempaqueAsync(ByVal prmDocumento As String, ByVal prmPallet As String, ByVal prmPalletAConsolidar As String, ByVal prmProducto As String, ByVal prmCantidadEmpaques As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_RegistraReempaqueOperationCompleted Is Nothing) Then
                Me.WM_RegistraReempaqueOperationCompleted = AddressOf Me.OnWM_RegistraReempaqueOperationCompleted
            End If
            Me.InvokeAsync("WM_RegistraReempaque", New Object() {prmDocumento, prmPallet, prmPalletAConsolidar, prmProducto, prmCantidadEmpaques, prmEstacion, prmUsuario}, Me.WM_RegistraReempaqueOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_RegistraReempaqueOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_RegistraReempaqueCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_RegistraReempaqueCompleted(Me, New WM_RegistraReempaqueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_RegistraReempaquePiezas", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_RegistraReempaquePiezas(ByVal prmDocumento As String, ByVal prmPallet As String, ByVal prmPalletAConsolidar As String, ByVal prmProducto As String, ByVal prmCantidadEmpaques As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_RegistraReempaquePiezas", New Object() {prmDocumento, prmPallet, prmPalletAConsolidar, prmProducto, prmCantidadEmpaques, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_RegistraReempaquePiezasAsync(ByVal prmDocumento As String, ByVal prmPallet As String, ByVal prmPalletAConsolidar As String, ByVal prmProducto As String, ByVal prmCantidadEmpaques As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_RegistraReempaquePiezasAsync(prmDocumento, prmPallet, prmPalletAConsolidar, prmProducto, prmCantidadEmpaques, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_RegistraReempaquePiezasAsync(ByVal prmDocumento As String, ByVal prmPallet As String, ByVal prmPalletAConsolidar As String, ByVal prmProducto As String, ByVal prmCantidadEmpaques As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_RegistraReempaquePiezasOperationCompleted Is Nothing) Then
                Me.WM_RegistraReempaquePiezasOperationCompleted = AddressOf Me.OnWM_RegistraReempaquePiezasOperationCompleted
            End If
            Me.InvokeAsync("WM_RegistraReempaquePiezas", New Object() {prmDocumento, prmPallet, prmPalletAConsolidar, prmProducto, prmCantidadEmpaques, prmEstacion, prmUsuario}, Me.WM_RegistraReempaquePiezasOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_RegistraReempaquePiezasOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_RegistraReempaquePiezasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_RegistraReempaquePiezasCompleted(Me, New WM_RegistraReempaquePiezasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_RegistraReempaqueSKU", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_RegistraReempaqueSKU(ByVal prmDocumento As String, ByVal prmPallet As String, ByVal prmPalletAConsolidar As String, ByVal prmProducto As String, ByVal prmSKU As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_RegistraReempaqueSKU", New Object() {prmDocumento, prmPallet, prmPalletAConsolidar, prmProducto, prmSKU, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_RegistraReempaqueSKUAsync(ByVal prmDocumento As String, ByVal prmPallet As String, ByVal prmPalletAConsolidar As String, ByVal prmProducto As String, ByVal prmSKU As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_RegistraReempaqueSKUAsync(prmDocumento, prmPallet, prmPalletAConsolidar, prmProducto, prmSKU, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_RegistraReempaqueSKUAsync(ByVal prmDocumento As String, ByVal prmPallet As String, ByVal prmPalletAConsolidar As String, ByVal prmProducto As String, ByVal prmSKU As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_RegistraReempaqueSKUOperationCompleted Is Nothing) Then
                Me.WM_RegistraReempaqueSKUOperationCompleted = AddressOf Me.OnWM_RegistraReempaqueSKUOperationCompleted
            End If
            Me.InvokeAsync("WM_RegistraReempaqueSKU", New Object() {prmDocumento, prmPallet, prmPalletAConsolidar, prmProducto, prmSKU, prmEstacion, prmUsuario}, Me.WM_RegistraReempaqueSKUOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_RegistraReempaqueSKUOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_RegistraReempaqueSKUCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_RegistraReempaqueSKUCompleted(Me, New WM_RegistraReempaqueSKUCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaOrdenSurtido", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaOrdenSurtido(ByVal prmOrdenEmbarque As String, ByVal prmStatus As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaOrdenSurtido", New Object() {prmOrdenEmbarque, prmStatus, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaOrdenSurtidoAsync(ByVal prmOrdenEmbarque As String, ByVal prmStatus As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaOrdenSurtidoAsync(prmOrdenEmbarque, prmStatus, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaOrdenSurtidoAsync(ByVal prmOrdenEmbarque As String, ByVal prmStatus As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaOrdenSurtidoOperationCompleted Is Nothing) Then
                Me.WM_ConsultaOrdenSurtidoOperationCompleted = AddressOf Me.OnWM_ConsultaOrdenSurtidoOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaOrdenSurtido", New Object() {prmOrdenEmbarque, prmStatus, prmEstacion, prmUsuario}, Me.WM_ConsultaOrdenSurtidoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaOrdenSurtidoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaOrdenSurtidoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaOrdenSurtidoCompleted(Me, New WM_ConsultaOrdenSurtidoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaOrdenSurtido_Reempaque", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaOrdenSurtido_Reempaque(ByVal prmOrdenEmbarque As String, ByVal prmStatus As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaOrdenSurtido_Reempaque", New Object() {prmOrdenEmbarque, prmStatus, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaOrdenSurtido_ReempaqueAsync(ByVal prmOrdenEmbarque As String, ByVal prmStatus As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaOrdenSurtido_ReempaqueAsync(prmOrdenEmbarque, prmStatus, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaOrdenSurtido_ReempaqueAsync(ByVal prmOrdenEmbarque As String, ByVal prmStatus As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaOrdenSurtido_ReempaqueOperationCompleted Is Nothing) Then
                Me.WM_ConsultaOrdenSurtido_ReempaqueOperationCompleted = AddressOf Me.OnWM_ConsultaOrdenSurtido_ReempaqueOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaOrdenSurtido_Reempaque", New Object() {prmOrdenEmbarque, prmStatus, prmEstacion, prmUsuario}, Me.WM_ConsultaOrdenSurtido_ReempaqueOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaOrdenSurtido_ReempaqueOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaOrdenSurtido_ReempaqueCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaOrdenSurtido_ReempaqueCompleted(Me, New WM_ConsultaOrdenSurtido_ReempaqueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaListaConsolidadosReempaque", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaListaConsolidadosReempaque(ByVal prmDocumento As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaListaConsolidadosReempaque", New Object() {prmDocumento, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaListaConsolidadosReempaqueAsync(ByVal prmDocumento As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaListaConsolidadosReempaqueAsync(prmDocumento, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaListaConsolidadosReempaqueAsync(ByVal prmDocumento As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaListaConsolidadosReempaqueOperationCompleted Is Nothing) Then
                Me.WM_ConsultaListaConsolidadosReempaqueOperationCompleted = AddressOf Me.OnWM_ConsultaListaConsolidadosReempaqueOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaListaConsolidadosReempaque", New Object() {prmDocumento, prmEstacion, prmUsuario}, Me.WM_ConsultaListaConsolidadosReempaqueOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaListaConsolidadosReempaqueOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaListaConsolidadosReempaqueCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaListaConsolidadosReempaqueCompleted(Me, New WM_ConsultaListaConsolidadosReempaqueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ListaEmbarqueValidadasDet", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ListaEmbarqueValidadasDet(ByVal prmOrdenEmbarquea As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ListaEmbarqueValidadasDet", New Object() {prmOrdenEmbarquea, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ListaEmbarqueValidadasDetAsync(ByVal prmOrdenEmbarquea As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ListaEmbarqueValidadasDetAsync(prmOrdenEmbarquea, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ListaEmbarqueValidadasDetAsync(ByVal prmOrdenEmbarquea As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ListaEmbarqueValidadasDetOperationCompleted Is Nothing) Then
                Me.WM_ListaEmbarqueValidadasDetOperationCompleted = AddressOf Me.OnWM_ListaEmbarqueValidadasDetOperationCompleted
            End If
            Me.InvokeAsync("WM_ListaEmbarqueValidadasDet", New Object() {prmOrdenEmbarquea, prmEstacion, prmUsuario}, Me.WM_ListaEmbarqueValidadasDetOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ListaEmbarqueValidadasDetOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ListaEmbarqueValidadasDetCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ListaEmbarqueValidadasDetCompleted(Me, New WM_ListaEmbarqueValidadasDetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_CancelaEmbarqueValidado", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_CancelaEmbarqueValidado(ByVal prmOrden As String, ByVal prmMotivo As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_CancelaEmbarqueValidado", New Object() {prmOrden, prmMotivo, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_CancelaEmbarqueValidadoAsync(ByVal prmOrden As String, ByVal prmMotivo As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_CancelaEmbarqueValidadoAsync(prmOrden, prmMotivo, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_CancelaEmbarqueValidadoAsync(ByVal prmOrden As String, ByVal prmMotivo As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_CancelaEmbarqueValidadoOperationCompleted Is Nothing) Then
                Me.WM_CancelaEmbarqueValidadoOperationCompleted = AddressOf Me.OnWM_CancelaEmbarqueValidadoOperationCompleted
            End If
            Me.InvokeAsync("WM_CancelaEmbarqueValidado", New Object() {prmOrden, prmMotivo, prmEstacion, prmUsuario}, Me.WM_CancelaEmbarqueValidadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_CancelaEmbarqueValidadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_CancelaEmbarqueValidadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_CancelaEmbarqueValidadoCompleted(Me, New WM_CancelaEmbarqueValidadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ListarPartidasRecepcionTraspaso", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ListarPartidasRecepcionTraspaso(ByVal prmDocumento As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ListarPartidasRecepcionTraspaso", New Object() {prmDocumento, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ListarPartidasRecepcionTraspasoAsync(ByVal prmDocumento As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ListarPartidasRecepcionTraspasoAsync(prmDocumento, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ListarPartidasRecepcionTraspasoAsync(ByVal prmDocumento As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ListarPartidasRecepcionTraspasoOperationCompleted Is Nothing) Then
                Me.WM_ListarPartidasRecepcionTraspasoOperationCompleted = AddressOf Me.OnWM_ListarPartidasRecepcionTraspasoOperationCompleted
            End If
            Me.InvokeAsync("WM_ListarPartidasRecepcionTraspaso", New Object() {prmDocumento, prmEstacion, prmUsuario}, Me.WM_ListarPartidasRecepcionTraspasoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ListarPartidasRecepcionTraspasoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ListarPartidasRecepcionTraspasoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ListarPartidasRecepcionTraspasoCompleted(Me, New WM_ListarPartidasRecepcionTraspasoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_DetallePartidaTraspaso", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_DetallePartidaTraspaso(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_DetallePartidaTraspaso", New Object() {prmDocumento, prmPartida, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_DetallePartidaTraspasoAsync(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_DetallePartidaTraspasoAsync(prmDocumento, prmPartida, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_DetallePartidaTraspasoAsync(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_DetallePartidaTraspasoOperationCompleted Is Nothing) Then
                Me.WM_DetallePartidaTraspasoOperationCompleted = AddressOf Me.OnWM_DetallePartidaTraspasoOperationCompleted
            End If
            Me.InvokeAsync("WM_DetallePartidaTraspaso", New Object() {prmDocumento, prmPartida, prmEstacion, prmUsuario}, Me.WM_DetallePartidaTraspasoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_DetallePartidaTraspasoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_DetallePartidaTraspasoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_DetallePartidaTraspasoCompleted(Me, New WM_DetallePartidaTraspasoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_PrimeraUltimaTraspaso", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_PrimeraUltimaTraspaso(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmCantidad As Double, ByVal prmPrimera As String, ByVal prmUltima As String, ByVal prmCantidadEmpaques As Integer, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_PrimeraUltimaTraspaso", New Object() {prmDocumento, prmPartida, prmCantidad, prmPrimera, prmUltima, prmCantidadEmpaques, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_PrimeraUltimaTraspasoAsync(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmCantidad As Double, ByVal prmPrimera As String, ByVal prmUltima As String, ByVal prmCantidadEmpaques As Integer, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_PrimeraUltimaTraspasoAsync(prmDocumento, prmPartida, prmCantidad, prmPrimera, prmUltima, prmCantidadEmpaques, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_PrimeraUltimaTraspasoAsync(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmCantidad As Double, ByVal prmPrimera As String, ByVal prmUltima As String, ByVal prmCantidadEmpaques As Integer, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_PrimeraUltimaTraspasoOperationCompleted Is Nothing) Then
                Me.WM_PrimeraUltimaTraspasoOperationCompleted = AddressOf Me.OnWM_PrimeraUltimaTraspasoOperationCompleted
            End If
            Me.InvokeAsync("WM_PrimeraUltimaTraspaso", New Object() {prmDocumento, prmPartida, prmCantidad, prmPrimera, prmUltima, prmCantidadEmpaques, prmEstacion, prmUsuario}, Me.WM_PrimeraUltimaTraspasoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_PrimeraUltimaTraspasoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_PrimeraUltimaTraspasoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_PrimeraUltimaTraspasoCompleted(Me, New WM_PrimeraUltimaTraspasoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_CierreParcialEnvioTraspaso", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_CierreParcialEnvioTraspaso(ByVal prmDocumento As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_CierreParcialEnvioTraspaso", New Object() {prmDocumento, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_CierreParcialEnvioTraspasoAsync(ByVal prmDocumento As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_CierreParcialEnvioTraspasoAsync(prmDocumento, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_CierreParcialEnvioTraspasoAsync(ByVal prmDocumento As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_CierreParcialEnvioTraspasoOperationCompleted Is Nothing) Then
                Me.WM_CierreParcialEnvioTraspasoOperationCompleted = AddressOf Me.OnWM_CierreParcialEnvioTraspasoOperationCompleted
            End If
            Me.InvokeAsync("WM_CierreParcialEnvioTraspaso", New Object() {prmDocumento, prmEstacion, prmUsuario}, Me.WM_CierreParcialEnvioTraspasoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_CierreParcialEnvioTraspasoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_CierreParcialEnvioTraspasoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_CierreParcialEnvioTraspasoCompleted(Me, New WM_CierreParcialEnvioTraspasoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_CierreParcialTraspaso", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_CierreParcialTraspaso(ByVal prmDocumento As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_CierreParcialTraspaso", New Object() {prmDocumento, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_CierreParcialTraspasoAsync(ByVal prmDocumento As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_CierreParcialTraspasoAsync(prmDocumento, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_CierreParcialTraspasoAsync(ByVal prmDocumento As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_CierreParcialTraspasoOperationCompleted Is Nothing) Then
                Me.WM_CierreParcialTraspasoOperationCompleted = AddressOf Me.OnWM_CierreParcialTraspasoOperationCompleted
            End If
            Me.InvokeAsync("WM_CierreParcialTraspaso", New Object() {prmDocumento, prmEstacion, prmUsuario}, Me.WM_CierreParcialTraspasoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_CierreParcialTraspasoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_CierreParcialTraspasoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_CierreParcialTraspasoCompleted(Me, New WM_CierreParcialTraspasoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_RegistraEmpaqueTraspaso", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_RegistraEmpaqueTraspaso(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmCodigoEmpaque As String, ByVal prmCantidad As Double, ByVal prmEmpaques As Integer, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_RegistraEmpaqueTraspaso", New Object() {prmDocumento, prmPartida, prmCodigoEmpaque, prmCantidad, prmEmpaques, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_RegistraEmpaqueTraspasoAsync(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmCodigoEmpaque As String, ByVal prmCantidad As Double, ByVal prmEmpaques As Integer, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_RegistraEmpaqueTraspasoAsync(prmDocumento, prmPartida, prmCodigoEmpaque, prmCantidad, prmEmpaques, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_RegistraEmpaqueTraspasoAsync(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmCodigoEmpaque As String, ByVal prmCantidad As Double, ByVal prmEmpaques As Integer, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_RegistraEmpaqueTraspasoOperationCompleted Is Nothing) Then
                Me.WM_RegistraEmpaqueTraspasoOperationCompleted = AddressOf Me.OnWM_RegistraEmpaqueTraspasoOperationCompleted
            End If
            Me.InvokeAsync("WM_RegistraEmpaqueTraspaso", New Object() {prmDocumento, prmPartida, prmCodigoEmpaque, prmCantidad, prmEmpaques, prmEstacion, prmUsuario}, Me.WM_RegistraEmpaqueTraspasoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_RegistraEmpaqueTraspasoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_RegistraEmpaqueTraspasoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_RegistraEmpaqueTraspasoCompleted(Me, New WM_RegistraEmpaqueTraspasoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_CreaEmpaqueTraspasoNE", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_CreaEmpaqueTraspasoNE(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmCantidad As Double, ByVal prmEmpaques As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_CreaEmpaqueTraspasoNE", New Object() {prmDocumento, prmPartida, prmCantidad, prmEmpaques, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_CreaEmpaqueTraspasoNEAsync(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmCantidad As Double, ByVal prmEmpaques As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_CreaEmpaqueTraspasoNEAsync(prmDocumento, prmPartida, prmCantidad, prmEmpaques, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_CreaEmpaqueTraspasoNEAsync(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmCantidad As Double, ByVal prmEmpaques As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_CreaEmpaqueTraspasoNEOperationCompleted Is Nothing) Then
                Me.WM_CreaEmpaqueTraspasoNEOperationCompleted = AddressOf Me.OnWM_CreaEmpaqueTraspasoNEOperationCompleted
            End If
            Me.InvokeAsync("WM_CreaEmpaqueTraspasoNE", New Object() {prmDocumento, prmPartida, prmCantidad, prmEmpaques, prmEstacion, prmUsuario}, Me.WM_CreaEmpaqueTraspasoNEOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_CreaEmpaqueTraspasoNEOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_CreaEmpaqueTraspasoNECompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_CreaEmpaqueTraspasoNECompleted(Me, New WM_CreaEmpaqueTraspasoNECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_OCCierraPalletTraspaso", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_OCCierraPalletTraspaso(ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_OCCierraPalletTraspaso", New Object() {prmPallet, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_OCCierraPalletTraspasoAsync(ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_OCCierraPalletTraspasoAsync(prmPallet, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_OCCierraPalletTraspasoAsync(ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_OCCierraPalletTraspasoOperationCompleted Is Nothing) Then
                Me.WM_OCCierraPalletTraspasoOperationCompleted = AddressOf Me.OnWM_OCCierraPalletTraspasoOperationCompleted
            End If
            Me.InvokeAsync("WM_OCCierraPalletTraspaso", New Object() {prmPallet, prmEstacion, prmUsuario}, Me.WM_OCCierraPalletTraspasoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_OCCierraPalletTraspasoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_OCCierraPalletTraspasoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_OCCierraPalletTraspasoCompleted(Me, New WM_OCCierraPalletTraspasoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaPalletAbiertoTraspaso", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaPalletAbiertoTraspaso(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaPalletAbiertoTraspaso", New Object() {prmDocumento, prmPartida, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaPalletAbiertoTraspasoAsync(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaPalletAbiertoTraspasoAsync(prmDocumento, prmPartida, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaPalletAbiertoTraspasoAsync(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaPalletAbiertoTraspasoOperationCompleted Is Nothing) Then
                Me.WM_ConsultaPalletAbiertoTraspasoOperationCompleted = AddressOf Me.OnWM_ConsultaPalletAbiertoTraspasoOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaPalletAbiertoTraspaso", New Object() {prmDocumento, prmPartida, prmEstacion, prmUsuario}, Me.WM_ConsultaPalletAbiertoTraspasoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaPalletAbiertoTraspasoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaPalletAbiertoTraspasoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaPalletAbiertoTraspasoCompleted(Me, New WM_ConsultaPalletAbiertoTraspasoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultarPalletTraspaso_NE", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultarPalletTraspaso_NE(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmCodigoPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultarPalletTraspaso_NE", New Object() {prmDocumento, prmPartida, prmCodigoPallet, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultarPalletTraspaso_NEAsync(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmCodigoPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultarPalletTraspaso_NEAsync(prmDocumento, prmPartida, prmCodigoPallet, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultarPalletTraspaso_NEAsync(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmCodigoPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultarPalletTraspaso_NEOperationCompleted Is Nothing) Then
                Me.WM_ConsultarPalletTraspaso_NEOperationCompleted = AddressOf Me.OnWM_ConsultarPalletTraspaso_NEOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultarPalletTraspaso_NE", New Object() {prmDocumento, prmPartida, prmCodigoPallet, prmEstacion, prmUsuario}, Me.WM_ConsultarPalletTraspaso_NEOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultarPalletTraspaso_NEOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultarPalletTraspaso_NECompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultarPalletTraspaso_NECompleted(Me, New WM_ConsultarPalletTraspaso_NECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaPalletTraspaso", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaPalletTraspaso(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaPalletTraspaso", New Object() {prmDocumento, prmPartida, prmPallet, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaPalletTraspasoAsync(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaPalletTraspasoAsync(prmDocumento, prmPartida, prmPallet, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaPalletTraspasoAsync(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaPalletTraspasoOperationCompleted Is Nothing) Then
                Me.WM_ConsultaPalletTraspasoOperationCompleted = AddressOf Me.OnWM_ConsultaPalletTraspasoOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaPalletTraspaso", New Object() {prmDocumento, prmPartida, prmPallet, prmEstacion, prmUsuario}, Me.WM_ConsultaPalletTraspasoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaPalletTraspasoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaPalletTraspasoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaPalletTraspasoCompleted(Me, New WM_ConsultaPalletTraspasoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_RegistroTraspasoPalletEnvio", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_RegistroTraspasoPalletEnvio(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmCodigoPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_RegistroTraspasoPalletEnvio", New Object() {prmDocumento, prmPartida, prmCodigoPallet, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_RegistroTraspasoPalletEnvioAsync(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmCodigoPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_RegistroTraspasoPalletEnvioAsync(prmDocumento, prmPartida, prmCodigoPallet, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_RegistroTraspasoPalletEnvioAsync(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmCodigoPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_RegistroTraspasoPalletEnvioOperationCompleted Is Nothing) Then
                Me.WM_RegistroTraspasoPalletEnvioOperationCompleted = AddressOf Me.OnWM_RegistroTraspasoPalletEnvioOperationCompleted
            End If
            Me.InvokeAsync("WM_RegistroTraspasoPalletEnvio", New Object() {prmDocumento, prmPartida, prmCodigoPallet, prmEstacion, prmUsuario}, Me.WM_RegistroTraspasoPalletEnvioOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_RegistroTraspasoPalletEnvioOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_RegistroTraspasoPalletEnvioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_RegistroTraspasoPalletEnvioCompleted(Me, New WM_RegistroTraspasoPalletEnvioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_RegistroTraspasoEmpaqueEnvio", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_RegistroTraspasoEmpaqueEnvio(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmCodigoEmpaque As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_RegistroTraspasoEmpaqueEnvio", New Object() {prmDocumento, prmPartida, prmCodigoEmpaque, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_RegistroTraspasoEmpaqueEnvioAsync(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmCodigoEmpaque As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_RegistroTraspasoEmpaqueEnvioAsync(prmDocumento, prmPartida, prmCodigoEmpaque, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_RegistroTraspasoEmpaqueEnvioAsync(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmCodigoEmpaque As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_RegistroTraspasoEmpaqueEnvioOperationCompleted Is Nothing) Then
                Me.WM_RegistroTraspasoEmpaqueEnvioOperationCompleted = AddressOf Me.OnWM_RegistroTraspasoEmpaqueEnvioOperationCompleted
            End If
            Me.InvokeAsync("WM_RegistroTraspasoEmpaqueEnvio", New Object() {prmDocumento, prmPartida, prmCodigoEmpaque, prmEstacion, prmUsuario}, Me.WM_RegistroTraspasoEmpaqueEnvioOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_RegistroTraspasoEmpaqueEnvioOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_RegistroTraspasoEmpaqueEnvioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_RegistroTraspasoEmpaqueEnvioCompleted(Me, New WM_RegistroTraspasoEmpaqueEnvioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_RegistroTraspasoEmpaqueEnvio_NE", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_RegistroTraspasoEmpaqueEnvio_NE(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmCodigoPallet As String, ByVal prmCantidadEmpaques As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_RegistroTraspasoEmpaqueEnvio_NE", New Object() {prmDocumento, prmPartida, prmCodigoPallet, prmCantidadEmpaques, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_RegistroTraspasoEmpaqueEnvio_NEAsync(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmCodigoPallet As String, ByVal prmCantidadEmpaques As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_RegistroTraspasoEmpaqueEnvio_NEAsync(prmDocumento, prmPartida, prmCodigoPallet, prmCantidadEmpaques, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_RegistroTraspasoEmpaqueEnvio_NEAsync(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmCodigoPallet As String, ByVal prmCantidadEmpaques As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_RegistroTraspasoEmpaqueEnvio_NEOperationCompleted Is Nothing) Then
                Me.WM_RegistroTraspasoEmpaqueEnvio_NEOperationCompleted = AddressOf Me.OnWM_RegistroTraspasoEmpaqueEnvio_NEOperationCompleted
            End If
            Me.InvokeAsync("WM_RegistroTraspasoEmpaqueEnvio_NE", New Object() {prmDocumento, prmPartida, prmCodigoPallet, prmCantidadEmpaques, prmEstacion, prmUsuario}, Me.WM_RegistroTraspasoEmpaqueEnvio_NEOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_RegistroTraspasoEmpaqueEnvio_NEOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_RegistroTraspasoEmpaqueEnvio_NECompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_RegistroTraspasoEmpaqueEnvio_NECompleted(Me, New WM_RegistroTraspasoEmpaqueEnvio_NECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_RegistroPalletTraspasoMultPart", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_RegistroPalletTraspasoMultPart(ByVal prmDocumento As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_RegistroPalletTraspasoMultPart", New Object() {prmDocumento, prmPallet, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_RegistroPalletTraspasoMultPartAsync(ByVal prmDocumento As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_RegistroPalletTraspasoMultPartAsync(prmDocumento, prmPallet, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_RegistroPalletTraspasoMultPartAsync(ByVal prmDocumento As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_RegistroPalletTraspasoMultPartOperationCompleted Is Nothing) Then
                Me.WM_RegistroPalletTraspasoMultPartOperationCompleted = AddressOf Me.OnWM_RegistroPalletTraspasoMultPartOperationCompleted
            End If
            Me.InvokeAsync("WM_RegistroPalletTraspasoMultPart", New Object() {prmDocumento, prmPallet, prmEstacion, prmUsuario}, Me.WM_RegistroPalletTraspasoMultPartOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_RegistroPalletTraspasoMultPartOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_RegistroPalletTraspasoMultPartCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_RegistroPalletTraspasoMultPartCompleted(Me, New WM_RegistroPalletTraspasoMultPartCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_CierrePalletTraspasoEnvio", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_CierrePalletTraspasoEnvio(ByVal prmDocumento As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_CierrePalletTraspasoEnvio", New Object() {prmDocumento, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_CierrePalletTraspasoEnvioAsync(ByVal prmDocumento As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_CierrePalletTraspasoEnvioAsync(prmDocumento, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_CierrePalletTraspasoEnvioAsync(ByVal prmDocumento As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_CierrePalletTraspasoEnvioOperationCompleted Is Nothing) Then
                Me.WM_CierrePalletTraspasoEnvioOperationCompleted = AddressOf Me.OnWM_CierrePalletTraspasoEnvioOperationCompleted
            End If
            Me.InvokeAsync("WM_CierrePalletTraspasoEnvio", New Object() {prmDocumento, prmEstacion, prmUsuario}, Me.WM_CierrePalletTraspasoEnvioOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_CierrePalletTraspasoEnvioOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_CierrePalletTraspasoEnvioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_CierrePalletTraspasoEnvioCompleted(Me, New WM_CierrePalletTraspasoEnvioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_RegistroTraspasoPalletConEtiquetas", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_RegistroTraspasoPalletConEtiquetas(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmCodigoPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_RegistroTraspasoPalletConEtiquetas", New Object() {prmDocumento, prmPartida, prmCodigoPallet, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_RegistroTraspasoPalletConEtiquetasAsync(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmCodigoPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_RegistroTraspasoPalletConEtiquetasAsync(prmDocumento, prmPartida, prmCodigoPallet, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_RegistroTraspasoPalletConEtiquetasAsync(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmCodigoPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_RegistroTraspasoPalletConEtiquetasOperationCompleted Is Nothing) Then
                Me.WM_RegistroTraspasoPalletConEtiquetasOperationCompleted = AddressOf Me.OnWM_RegistroTraspasoPalletConEtiquetasOperationCompleted
            End If
            Me.InvokeAsync("WM_RegistroTraspasoPalletConEtiquetas", New Object() {prmDocumento, prmPartida, prmCodigoPallet, prmEstacion, prmUsuario}, Me.WM_RegistroTraspasoPalletConEtiquetasOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_RegistroTraspasoPalletConEtiquetasOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_RegistroTraspasoPalletConEtiquetasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_RegistroTraspasoPalletConEtiquetasCompleted(Me, New WM_RegistroTraspasoPalletConEtiquetasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_RegistroTraspasoNuevoPallet", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_RegistroTraspasoNuevoPallet(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmCodigoPallet As String, ByVal prmCantidadEmpaques As Integer, ByVal prmCantidadXEmpaque As Integer, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_RegistroTraspasoNuevoPallet", New Object() {prmDocumento, prmPartida, prmCodigoPallet, prmCantidadEmpaques, prmCantidadXEmpaque, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_RegistroTraspasoNuevoPalletAsync(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmCodigoPallet As String, ByVal prmCantidadEmpaques As Integer, ByVal prmCantidadXEmpaque As Integer, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_RegistroTraspasoNuevoPalletAsync(prmDocumento, prmPartida, prmCodigoPallet, prmCantidadEmpaques, prmCantidadXEmpaque, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_RegistroTraspasoNuevoPalletAsync(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmCodigoPallet As String, ByVal prmCantidadEmpaques As Integer, ByVal prmCantidadXEmpaque As Integer, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_RegistroTraspasoNuevoPalletOperationCompleted Is Nothing) Then
                Me.WM_RegistroTraspasoNuevoPalletOperationCompleted = AddressOf Me.OnWM_RegistroTraspasoNuevoPalletOperationCompleted
            End If
            Me.InvokeAsync("WM_RegistroTraspasoNuevoPallet", New Object() {prmDocumento, prmPartida, prmCodigoPallet, prmCantidadEmpaques, prmCantidadXEmpaque, prmEstacion, prmUsuario}, Me.WM_RegistroTraspasoNuevoPalletOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_RegistroTraspasoNuevoPalletOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_RegistroTraspasoNuevoPalletCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_RegistroTraspasoNuevoPalletCompleted(Me, New WM_RegistroTraspasoNuevoPalletCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ListarTarimasRecibidasTraspaso", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ListarTarimasRecibidasTraspaso(ByVal prmDocumento As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ListarTarimasRecibidasTraspaso", New Object() {prmDocumento, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ListarTarimasRecibidasTraspasoAsync(ByVal prmDocumento As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ListarTarimasRecibidasTraspasoAsync(prmDocumento, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ListarTarimasRecibidasTraspasoAsync(ByVal prmDocumento As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ListarTarimasRecibidasTraspasoOperationCompleted Is Nothing) Then
                Me.WM_ListarTarimasRecibidasTraspasoOperationCompleted = AddressOf Me.OnWM_ListarTarimasRecibidasTraspasoOperationCompleted
            End If
            Me.InvokeAsync("WM_ListarTarimasRecibidasTraspaso", New Object() {prmDocumento, prmEstacion, prmUsuario}, Me.WM_ListarTarimasRecibidasTraspasoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ListarTarimasRecibidasTraspasoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ListarTarimasRecibidasTraspasoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ListarTarimasRecibidasTraspasoCompleted(Me, New WM_ListarTarimasRecibidasTraspasoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_CancelarPalletTraspaso", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_CancelarPalletTraspaso(ByVal prmDocumento As String, ByVal prmCodigoPallet As String, ByVal prmRazon As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_CancelarPalletTraspaso", New Object() {prmDocumento, prmCodigoPallet, prmRazon, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_CancelarPalletTraspasoAsync(ByVal prmDocumento As String, ByVal prmCodigoPallet As String, ByVal prmRazon As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_CancelarPalletTraspasoAsync(prmDocumento, prmCodigoPallet, prmRazon, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_CancelarPalletTraspasoAsync(ByVal prmDocumento As String, ByVal prmCodigoPallet As String, ByVal prmRazon As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_CancelarPalletTraspasoOperationCompleted Is Nothing) Then
                Me.WM_CancelarPalletTraspasoOperationCompleted = AddressOf Me.OnWM_CancelarPalletTraspasoOperationCompleted
            End If
            Me.InvokeAsync("WM_CancelarPalletTraspaso", New Object() {prmDocumento, prmCodigoPallet, prmRazon, prmEstacion, prmUsuario}, Me.WM_CancelarPalletTraspasoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_CancelarPalletTraspasoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_CancelarPalletTraspasoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_CancelarPalletTraspasoCompleted(Me, New WM_CancelarPalletTraspasoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_PrimeraUltimaTraspasoSelAlm", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_PrimeraUltimaTraspasoSelAlm(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmCantidad As Double, ByVal prmPrimera As String, ByVal prmUltima As String, ByVal prmCantidadEmpaques As Integer, ByVal prmAlmacen As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_PrimeraUltimaTraspasoSelAlm", New Object() {prmDocumento, prmPartida, prmCantidad, prmPrimera, prmUltima, prmCantidadEmpaques, prmAlmacen, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_PrimeraUltimaTraspasoSelAlmAsync(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmCantidad As Double, ByVal prmPrimera As String, ByVal prmUltima As String, ByVal prmCantidadEmpaques As Integer, ByVal prmAlmacen As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_PrimeraUltimaTraspasoSelAlmAsync(prmDocumento, prmPartida, prmCantidad, prmPrimera, prmUltima, prmCantidadEmpaques, prmAlmacen, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_PrimeraUltimaTraspasoSelAlmAsync(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmCantidad As Double, ByVal prmPrimera As String, ByVal prmUltima As String, ByVal prmCantidadEmpaques As Integer, ByVal prmAlmacen As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_PrimeraUltimaTraspasoSelAlmOperationCompleted Is Nothing) Then
                Me.WM_PrimeraUltimaTraspasoSelAlmOperationCompleted = AddressOf Me.OnWM_PrimeraUltimaTraspasoSelAlmOperationCompleted
            End If
            Me.InvokeAsync("WM_PrimeraUltimaTraspasoSelAlm", New Object() {prmDocumento, prmPartida, prmCantidad, prmPrimera, prmUltima, prmCantidadEmpaques, prmAlmacen, prmEstacion, prmUsuario}, Me.WM_PrimeraUltimaTraspasoSelAlmOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_PrimeraUltimaTraspasoSelAlmOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_PrimeraUltimaTraspasoSelAlmCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_PrimeraUltimaTraspasoSelAlmCompleted(Me, New WM_PrimeraUltimaTraspasoSelAlmCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_RegistraEmpaqueTraspasoSelAlm", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_RegistraEmpaqueTraspasoSelAlm(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmCodigoEmpaque As String, ByVal prmCantidad As Double, ByVal prmEmpaques As Integer, ByVal prmAlmacen As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_RegistraEmpaqueTraspasoSelAlm", New Object() {prmDocumento, prmPartida, prmCodigoEmpaque, prmCantidad, prmEmpaques, prmAlmacen, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_RegistraEmpaqueTraspasoSelAlmAsync(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmCodigoEmpaque As String, ByVal prmCantidad As Double, ByVal prmEmpaques As Integer, ByVal prmAlmacen As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_RegistraEmpaqueTraspasoSelAlmAsync(prmDocumento, prmPartida, prmCodigoEmpaque, prmCantidad, prmEmpaques, prmAlmacen, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_RegistraEmpaqueTraspasoSelAlmAsync(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmCodigoEmpaque As String, ByVal prmCantidad As Double, ByVal prmEmpaques As Integer, ByVal prmAlmacen As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_RegistraEmpaqueTraspasoSelAlmOperationCompleted Is Nothing) Then
                Me.WM_RegistraEmpaqueTraspasoSelAlmOperationCompleted = AddressOf Me.OnWM_RegistraEmpaqueTraspasoSelAlmOperationCompleted
            End If
            Me.InvokeAsync("WM_RegistraEmpaqueTraspasoSelAlm", New Object() {prmDocumento, prmPartida, prmCodigoEmpaque, prmCantidad, prmEmpaques, prmAlmacen, prmEstacion, prmUsuario}, Me.WM_RegistraEmpaqueTraspasoSelAlmOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_RegistraEmpaqueTraspasoSelAlmOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_RegistraEmpaqueTraspasoSelAlmCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_RegistraEmpaqueTraspasoSelAlmCompleted(Me, New WM_RegistraEmpaqueTraspasoSelAlmCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_CreaEmpaqueTraspasoNESelAlm", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_CreaEmpaqueTraspasoNESelAlm(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmCantidad As Double, ByVal prmEmpaques As String, ByVal prmAlmacen As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_CreaEmpaqueTraspasoNESelAlm", New Object() {prmDocumento, prmPartida, prmCantidad, prmEmpaques, prmAlmacen, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_CreaEmpaqueTraspasoNESelAlmAsync(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmCantidad As Double, ByVal prmEmpaques As String, ByVal prmAlmacen As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_CreaEmpaqueTraspasoNESelAlmAsync(prmDocumento, prmPartida, prmCantidad, prmEmpaques, prmAlmacen, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_CreaEmpaqueTraspasoNESelAlmAsync(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmCantidad As Double, ByVal prmEmpaques As String, ByVal prmAlmacen As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_CreaEmpaqueTraspasoNESelAlmOperationCompleted Is Nothing) Then
                Me.WM_CreaEmpaqueTraspasoNESelAlmOperationCompleted = AddressOf Me.OnWM_CreaEmpaqueTraspasoNESelAlmOperationCompleted
            End If
            Me.InvokeAsync("WM_CreaEmpaqueTraspasoNESelAlm", New Object() {prmDocumento, prmPartida, prmCantidad, prmEmpaques, prmAlmacen, prmEstacion, prmUsuario}, Me.WM_CreaEmpaqueTraspasoNESelAlmOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_CreaEmpaqueTraspasoNESelAlmOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_CreaEmpaqueTraspasoNESelAlmCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_CreaEmpaqueTraspasoNESelAlmCompleted(Me, New WM_CreaEmpaqueTraspasoNESelAlmCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_PrimeraUltimaTraspasoSelAlm_SA", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_PrimeraUltimaTraspasoSelAlm_SA(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmCantidad As Double, ByVal prmPrimera As String, ByVal prmUltima As String, ByVal prmCantidadEmpaques As Integer, ByVal prmAlmacen As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_PrimeraUltimaTraspasoSelAlm_SA", New Object() {prmDocumento, prmPartida, prmCantidad, prmPrimera, prmUltima, prmCantidadEmpaques, prmAlmacen, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_PrimeraUltimaTraspasoSelAlm_SAAsync(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmCantidad As Double, ByVal prmPrimera As String, ByVal prmUltima As String, ByVal prmCantidadEmpaques As Integer, ByVal prmAlmacen As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_PrimeraUltimaTraspasoSelAlm_SAAsync(prmDocumento, prmPartida, prmCantidad, prmPrimera, prmUltima, prmCantidadEmpaques, prmAlmacen, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_PrimeraUltimaTraspasoSelAlm_SAAsync(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmCantidad As Double, ByVal prmPrimera As String, ByVal prmUltima As String, ByVal prmCantidadEmpaques As Integer, ByVal prmAlmacen As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_PrimeraUltimaTraspasoSelAlm_SAOperationCompleted Is Nothing) Then
                Me.WM_PrimeraUltimaTraspasoSelAlm_SAOperationCompleted = AddressOf Me.OnWM_PrimeraUltimaTraspasoSelAlm_SAOperationCompleted
            End If
            Me.InvokeAsync("WM_PrimeraUltimaTraspasoSelAlm_SA", New Object() {prmDocumento, prmPartida, prmCantidad, prmPrimera, prmUltima, prmCantidadEmpaques, prmAlmacen, prmEstacion, prmUsuario}, Me.WM_PrimeraUltimaTraspasoSelAlm_SAOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_PrimeraUltimaTraspasoSelAlm_SAOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_PrimeraUltimaTraspasoSelAlm_SACompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_PrimeraUltimaTraspasoSelAlm_SACompleted(Me, New WM_PrimeraUltimaTraspasoSelAlm_SACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_RegistraEmpaqueTraspasoSelAlm_SA", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_RegistraEmpaqueTraspasoSelAlm_SA(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmCodigoEmpaque As String, ByVal prmCantidad As Double, ByVal prmEmpaques As Integer, ByVal prmAlmacen As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_RegistraEmpaqueTraspasoSelAlm_SA", New Object() {prmDocumento, prmPartida, prmCodigoEmpaque, prmCantidad, prmEmpaques, prmAlmacen, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_RegistraEmpaqueTraspasoSelAlm_SAAsync(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmCodigoEmpaque As String, ByVal prmCantidad As Double, ByVal prmEmpaques As Integer, ByVal prmAlmacen As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_RegistraEmpaqueTraspasoSelAlm_SAAsync(prmDocumento, prmPartida, prmCodigoEmpaque, prmCantidad, prmEmpaques, prmAlmacen, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_RegistraEmpaqueTraspasoSelAlm_SAAsync(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmCodigoEmpaque As String, ByVal prmCantidad As Double, ByVal prmEmpaques As Integer, ByVal prmAlmacen As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_RegistraEmpaqueTraspasoSelAlm_SAOperationCompleted Is Nothing) Then
                Me.WM_RegistraEmpaqueTraspasoSelAlm_SAOperationCompleted = AddressOf Me.OnWM_RegistraEmpaqueTraspasoSelAlm_SAOperationCompleted
            End If
            Me.InvokeAsync("WM_RegistraEmpaqueTraspasoSelAlm_SA", New Object() {prmDocumento, prmPartida, prmCodigoEmpaque, prmCantidad, prmEmpaques, prmAlmacen, prmEstacion, prmUsuario}, Me.WM_RegistraEmpaqueTraspasoSelAlm_SAOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_RegistraEmpaqueTraspasoSelAlm_SAOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_RegistraEmpaqueTraspasoSelAlm_SACompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_RegistraEmpaqueTraspasoSelAlm_SACompleted(Me, New WM_RegistraEmpaqueTraspasoSelAlm_SACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_CreaEmpaqueTraspasoNESelAlm_SA", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_CreaEmpaqueTraspasoNESelAlm_SA(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmCantidad As Double, ByVal prmEmpaques As String, ByVal prmAlmacen As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_CreaEmpaqueTraspasoNESelAlm_SA", New Object() {prmDocumento, prmPartida, prmCantidad, prmEmpaques, prmAlmacen, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_CreaEmpaqueTraspasoNESelAlm_SAAsync(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmCantidad As Double, ByVal prmEmpaques As String, ByVal prmAlmacen As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_CreaEmpaqueTraspasoNESelAlm_SAAsync(prmDocumento, prmPartida, prmCantidad, prmEmpaques, prmAlmacen, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_CreaEmpaqueTraspasoNESelAlm_SAAsync(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmCantidad As Double, ByVal prmEmpaques As String, ByVal prmAlmacen As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_CreaEmpaqueTraspasoNESelAlm_SAOperationCompleted Is Nothing) Then
                Me.WM_CreaEmpaqueTraspasoNESelAlm_SAOperationCompleted = AddressOf Me.OnWM_CreaEmpaqueTraspasoNESelAlm_SAOperationCompleted
            End If
            Me.InvokeAsync("WM_CreaEmpaqueTraspasoNESelAlm_SA", New Object() {prmDocumento, prmPartida, prmCantidad, prmEmpaques, prmAlmacen, prmEstacion, prmUsuario}, Me.WM_CreaEmpaqueTraspasoNESelAlm_SAOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_CreaEmpaqueTraspasoNESelAlm_SAOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_CreaEmpaqueTraspasoNESelAlm_SACompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_CreaEmpaqueTraspasoNESelAlm_SACompleted(Me, New WM_CreaEmpaqueTraspasoNESelAlm_SACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaTextosTraspaso", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaTextosTraspaso(ByVal prmDocumento As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaTextosTraspaso", New Object() {prmDocumento, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaTextosTraspasoAsync(ByVal prmDocumento As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaTextosTraspasoAsync(prmDocumento, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaTextosTraspasoAsync(ByVal prmDocumento As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaTextosTraspasoOperationCompleted Is Nothing) Then
                Me.WM_ConsultaTextosTraspasoOperationCompleted = AddressOf Me.OnWM_ConsultaTextosTraspasoOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaTextosTraspaso", New Object() {prmDocumento, prmEstacion, prmUsuario}, Me.WM_ConsultaTextosTraspasoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaTextosTraspasoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaTextosTraspasoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaTextosTraspasoCompleted(Me, New WM_ConsultaTextosTraspasoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_RegistroTextosTraspaso", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_RegistroTextosTraspaso(ByVal prmDocumento As String, ByVal prmNotaEntrega As String, ByVal prmCartaPorte As String, ByVal prmTextoCabecera As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_RegistroTextosTraspaso", New Object() {prmDocumento, prmNotaEntrega, prmCartaPorte, prmTextoCabecera, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_RegistroTextosTraspasoAsync(ByVal prmDocumento As String, ByVal prmNotaEntrega As String, ByVal prmCartaPorte As String, ByVal prmTextoCabecera As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_RegistroTextosTraspasoAsync(prmDocumento, prmNotaEntrega, prmCartaPorte, prmTextoCabecera, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_RegistroTextosTraspasoAsync(ByVal prmDocumento As String, ByVal prmNotaEntrega As String, ByVal prmCartaPorte As String, ByVal prmTextoCabecera As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_RegistroTextosTraspasoOperationCompleted Is Nothing) Then
                Me.WM_RegistroTextosTraspasoOperationCompleted = AddressOf Me.OnWM_RegistroTextosTraspasoOperationCompleted
            End If
            Me.InvokeAsync("WM_RegistroTextosTraspaso", New Object() {prmDocumento, prmNotaEntrega, prmCartaPorte, prmTextoCabecera, prmEstacion, prmUsuario}, Me.WM_RegistroTextosTraspasoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_RegistroTextosTraspasoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_RegistroTextosTraspasoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_RegistroTextosTraspasoCompleted(Me, New WM_RegistroTextosTraspasoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ListarPartidasEnvioMaquila", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ListarPartidasEnvioMaquila(ByVal prmDocumento As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ListarPartidasEnvioMaquila", New Object() {prmDocumento, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ListarPartidasEnvioMaquilaAsync(ByVal prmDocumento As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ListarPartidasEnvioMaquilaAsync(prmDocumento, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ListarPartidasEnvioMaquilaAsync(ByVal prmDocumento As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ListarPartidasEnvioMaquilaOperationCompleted Is Nothing) Then
                Me.WM_ListarPartidasEnvioMaquilaOperationCompleted = AddressOf Me.OnWM_ListarPartidasEnvioMaquilaOperationCompleted
            End If
            Me.InvokeAsync("WM_ListarPartidasEnvioMaquila", New Object() {prmDocumento, prmEstacion, prmUsuario}, Me.WM_ListarPartidasEnvioMaquilaOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ListarPartidasEnvioMaquilaOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ListarPartidasEnvioMaquilaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ListarPartidasEnvioMaquilaCompleted(Me, New WM_ListarPartidasEnvioMaquilaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultarPartidaEnvioMaquila", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultarPartidaEnvioMaquila(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultarPartidaEnvioMaquila", New Object() {prmDocumento, prmPartida, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultarPartidaEnvioMaquilaAsync(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultarPartidaEnvioMaquilaAsync(prmDocumento, prmPartida, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultarPartidaEnvioMaquilaAsync(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultarPartidaEnvioMaquilaOperationCompleted Is Nothing) Then
                Me.WM_ConsultarPartidaEnvioMaquilaOperationCompleted = AddressOf Me.OnWM_ConsultarPartidaEnvioMaquilaOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultarPartidaEnvioMaquila", New Object() {prmDocumento, prmPartida, prmEstacion, prmUsuario}, Me.WM_ConsultarPartidaEnvioMaquilaOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultarPartidaEnvioMaquilaOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultarPartidaEnvioMaquilaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultarPartidaEnvioMaquilaCompleted(Me, New WM_ConsultarPartidaEnvioMaquilaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_EnviaEmpaqueMaquila", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_EnviaEmpaqueMaquila(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmEmpaque As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_EnviaEmpaqueMaquila", New Object() {prmOrdenCompra, prmPartida, prmEmpaque, prmUbicacion, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_EnviaEmpaqueMaquilaAsync(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmEmpaque As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_EnviaEmpaqueMaquilaAsync(prmOrdenCompra, prmPartida, prmEmpaque, prmUbicacion, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_EnviaEmpaqueMaquilaAsync(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmEmpaque As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_EnviaEmpaqueMaquilaOperationCompleted Is Nothing) Then
                Me.WM_EnviaEmpaqueMaquilaOperationCompleted = AddressOf Me.OnWM_EnviaEmpaqueMaquilaOperationCompleted
            End If
            Me.InvokeAsync("WM_EnviaEmpaqueMaquila", New Object() {prmOrdenCompra, prmPartida, prmEmpaque, prmUbicacion, prmEstacion, prmUsuario}, Me.WM_EnviaEmpaqueMaquilaOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_EnviaEmpaqueMaquilaOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_EnviaEmpaqueMaquilaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_EnviaEmpaqueMaquilaCompleted(Me, New WM_EnviaEmpaqueMaquilaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_EnviaPalletMaquila", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_EnviaPalletMaquila(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmPallet As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_EnviaPalletMaquila", New Object() {prmOrdenCompra, prmPartida, prmPallet, prmUbicacion, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_EnviaPalletMaquilaAsync(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmPallet As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_EnviaPalletMaquilaAsync(prmOrdenCompra, prmPartida, prmPallet, prmUbicacion, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_EnviaPalletMaquilaAsync(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmPallet As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_EnviaPalletMaquilaOperationCompleted Is Nothing) Then
                Me.WM_EnviaPalletMaquilaOperationCompleted = AddressOf Me.OnWM_EnviaPalletMaquilaOperationCompleted
            End If
            Me.InvokeAsync("WM_EnviaPalletMaquila", New Object() {prmOrdenCompra, prmPartida, prmPallet, prmUbicacion, prmEstacion, prmUsuario}, Me.WM_EnviaPalletMaquilaOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_EnviaPalletMaquilaOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_EnviaPalletMaquilaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_EnviaPalletMaquilaCompleted(Me, New WM_EnviaPalletMaquilaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_SugierePalletEnvioMaquila", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_SugierePalletEnvioMaquila(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_SugierePalletEnvioMaquila", New Object() {prmDocumento, prmPartida, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_SugierePalletEnvioMaquilaAsync(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_SugierePalletEnvioMaquilaAsync(prmDocumento, prmPartida, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_SugierePalletEnvioMaquilaAsync(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_SugierePalletEnvioMaquilaOperationCompleted Is Nothing) Then
                Me.WM_SugierePalletEnvioMaquilaOperationCompleted = AddressOf Me.OnWM_SugierePalletEnvioMaquilaOperationCompleted
            End If
            Me.InvokeAsync("WM_SugierePalletEnvioMaquila", New Object() {prmDocumento, prmPartida, prmEstacion, prmUsuario}, Me.WM_SugierePalletEnvioMaquilaOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_SugierePalletEnvioMaquilaOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_SugierePalletEnvioMaquilaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_SugierePalletEnvioMaquilaCompleted(Me, New WM_SugierePalletEnvioMaquilaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaOrdenProduccion", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaOrdenProduccion(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaOrdenProduccion", New Object() {prmDocumento, prmPartida, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaOrdenProduccionAsync(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaOrdenProduccionAsync(prmDocumento, prmPartida, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaOrdenProduccionAsync(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaOrdenProduccionOperationCompleted Is Nothing) Then
                Me.WM_ConsultaOrdenProduccionOperationCompleted = AddressOf Me.OnWM_ConsultaOrdenProduccionOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaOrdenProduccion", New Object() {prmDocumento, prmPartida, prmEstacion, prmUsuario}, Me.WM_ConsultaOrdenProduccionOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaOrdenProduccionOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaOrdenProduccionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaOrdenProduccionCompleted(Me, New WM_ConsultaOrdenProduccionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaOrdenProduccion_v2", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaOrdenProduccion_v2(ByVal prmDocumento As String, ByVal prmTipo As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaOrdenProduccion_v2", New Object() {prmDocumento, prmTipo, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaOrdenProduccion_v2Async(ByVal prmDocumento As String, ByVal prmTipo As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaOrdenProduccion_v2Async(prmDocumento, prmTipo, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaOrdenProduccion_v2Async(ByVal prmDocumento As String, ByVal prmTipo As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaOrdenProduccion_v2OperationCompleted Is Nothing) Then
                Me.WM_ConsultaOrdenProduccion_v2OperationCompleted = AddressOf Me.OnWM_ConsultaOrdenProduccion_v2OperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaOrdenProduccion_v2", New Object() {prmDocumento, prmTipo, prmEstacion, prmUsuario}, Me.WM_ConsultaOrdenProduccion_v2OperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaOrdenProduccion_v2OperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaOrdenProduccion_v2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaOrdenProduccion_v2Completed(Me, New WM_ConsultaOrdenProduccion_v2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_CerrarOrdenProduccion", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_CerrarOrdenProduccion(ByVal prmOrdenProduccion As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_CerrarOrdenProduccion", New Object() {prmOrdenProduccion, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_CerrarOrdenProduccionAsync(ByVal prmOrdenProduccion As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_CerrarOrdenProduccionAsync(prmOrdenProduccion, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_CerrarOrdenProduccionAsync(ByVal prmOrdenProduccion As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_CerrarOrdenProduccionOperationCompleted Is Nothing) Then
                Me.WM_CerrarOrdenProduccionOperationCompleted = AddressOf Me.OnWM_CerrarOrdenProduccionOperationCompleted
            End If
            Me.InvokeAsync("WM_CerrarOrdenProduccion", New Object() {prmOrdenProduccion, prmEstacion, prmUsuario}, Me.WM_CerrarOrdenProduccionOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_CerrarOrdenProduccionOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_CerrarOrdenProduccionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_CerrarOrdenProduccionCompleted(Me, New WM_CerrarOrdenProduccionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_CerrarOrdenProduccion_v2", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_CerrarOrdenProduccion_v2(ByVal prmOrdenProduccion As String, ByVal prmFechaCad As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_CerrarOrdenProduccion_v2", New Object() {prmOrdenProduccion, prmFechaCad, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_CerrarOrdenProduccion_v2Async(ByVal prmOrdenProduccion As String, ByVal prmFechaCad As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_CerrarOrdenProduccion_v2Async(prmOrdenProduccion, prmFechaCad, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_CerrarOrdenProduccion_v2Async(ByVal prmOrdenProduccion As String, ByVal prmFechaCad As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_CerrarOrdenProduccion_v2OperationCompleted Is Nothing) Then
                Me.WM_CerrarOrdenProduccion_v2OperationCompleted = AddressOf Me.OnWM_CerrarOrdenProduccion_v2OperationCompleted
            End If
            Me.InvokeAsync("WM_CerrarOrdenProduccion_v2", New Object() {prmOrdenProduccion, prmFechaCad, prmEstacion, prmUsuario}, Me.WM_CerrarOrdenProduccion_v2OperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_CerrarOrdenProduccion_v2OperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_CerrarOrdenProduccion_v2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_CerrarOrdenProduccion_v2Completed(Me, New WM_CerrarOrdenProduccion_v2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_RegistraCantidadOrdenProduccion", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_RegistraCantidadOrdenProduccion(ByVal prmOrdenProduccion As String, ByVal prmCantidad As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_RegistraCantidadOrdenProduccion", New Object() {prmOrdenProduccion, prmCantidad, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_RegistraCantidadOrdenProduccionAsync(ByVal prmOrdenProduccion As String, ByVal prmCantidad As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_RegistraCantidadOrdenProduccionAsync(prmOrdenProduccion, prmCantidad, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_RegistraCantidadOrdenProduccionAsync(ByVal prmOrdenProduccion As String, ByVal prmCantidad As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_RegistraCantidadOrdenProduccionOperationCompleted Is Nothing) Then
                Me.WM_RegistraCantidadOrdenProduccionOperationCompleted = AddressOf Me.OnWM_RegistraCantidadOrdenProduccionOperationCompleted
            End If
            Me.InvokeAsync("WM_RegistraCantidadOrdenProduccion", New Object() {prmOrdenProduccion, prmCantidad, prmEstacion, prmUsuario}, Me.WM_RegistraCantidadOrdenProduccionOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_RegistraCantidadOrdenProduccionOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_RegistraCantidadOrdenProduccionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_RegistraCantidadOrdenProduccionCompleted(Me, New WM_RegistraCantidadOrdenProduccionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_RegistraSobranteOrdenProduccion", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_RegistraSobranteOrdenProduccion(ByVal prmOrdenProduccion As String, ByVal prmEmpaque As String, ByVal prmCantidadSobrante As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_RegistraSobranteOrdenProduccion", New Object() {prmOrdenProduccion, prmEmpaque, prmCantidadSobrante, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_RegistraSobranteOrdenProduccionAsync(ByVal prmOrdenProduccion As String, ByVal prmEmpaque As String, ByVal prmCantidadSobrante As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_RegistraSobranteOrdenProduccionAsync(prmOrdenProduccion, prmEmpaque, prmCantidadSobrante, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_RegistraSobranteOrdenProduccionAsync(ByVal prmOrdenProduccion As String, ByVal prmEmpaque As String, ByVal prmCantidadSobrante As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_RegistraSobranteOrdenProduccionOperationCompleted Is Nothing) Then
                Me.WM_RegistraSobranteOrdenProduccionOperationCompleted = AddressOf Me.OnWM_RegistraSobranteOrdenProduccionOperationCompleted
            End If
            Me.InvokeAsync("WM_RegistraSobranteOrdenProduccion", New Object() {prmOrdenProduccion, prmEmpaque, prmCantidadSobrante, prmEstacion, prmUsuario}, Me.WM_RegistraSobranteOrdenProduccionOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_RegistraSobranteOrdenProduccionOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_RegistraSobranteOrdenProduccionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_RegistraSobranteOrdenProduccionCompleted(Me, New WM_RegistraSobranteOrdenProduccionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_RegistraFechaCadOrdenProd", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_RegistraFechaCadOrdenProd(ByVal prmOrdenProduccion As String, ByVal prmFechaCad As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_RegistraFechaCadOrdenProd", New Object() {prmOrdenProduccion, prmFechaCad, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_RegistraFechaCadOrdenProdAsync(ByVal prmOrdenProduccion As String, ByVal prmFechaCad As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_RegistraFechaCadOrdenProdAsync(prmOrdenProduccion, prmFechaCad, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_RegistraFechaCadOrdenProdAsync(ByVal prmOrdenProduccion As String, ByVal prmFechaCad As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_RegistraFechaCadOrdenProdOperationCompleted Is Nothing) Then
                Me.WM_RegistraFechaCadOrdenProdOperationCompleted = AddressOf Me.OnWM_RegistraFechaCadOrdenProdOperationCompleted
            End If
            Me.InvokeAsync("WM_RegistraFechaCadOrdenProd", New Object() {prmOrdenProduccion, prmFechaCad, prmEstacion, prmUsuario}, Me.WM_RegistraFechaCadOrdenProdOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_RegistraFechaCadOrdenProdOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_RegistraFechaCadOrdenProdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_RegistraFechaCadOrdenProdCompleted(Me, New WM_RegistraFechaCadOrdenProdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaOrdenProduccionDet", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaOrdenProduccionDet(ByVal prmDocumento As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaOrdenProduccionDet", New Object() {prmDocumento, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaOrdenProduccionDetAsync(ByVal prmDocumento As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaOrdenProduccionDetAsync(prmDocumento, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaOrdenProduccionDetAsync(ByVal prmDocumento As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaOrdenProduccionDetOperationCompleted Is Nothing) Then
                Me.WM_ConsultaOrdenProduccionDetOperationCompleted = AddressOf Me.OnWM_ConsultaOrdenProduccionDetOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaOrdenProduccionDet", New Object() {prmDocumento, prmEstacion, prmUsuario}, Me.WM_ConsultaOrdenProduccionDetOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaOrdenProduccionDetOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaOrdenProduccionDetCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaOrdenProduccionDetCompleted(Me, New WM_ConsultaOrdenProduccionDetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaEmpaquesArmadoProd", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaEmpaquesArmadoProd(ByVal prmOrdenProd As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaEmpaquesArmadoProd", New Object() {prmOrdenProd, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaEmpaquesArmadoProdAsync(ByVal prmOrdenProd As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaEmpaquesArmadoProdAsync(prmOrdenProd, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaEmpaquesArmadoProdAsync(ByVal prmOrdenProd As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaEmpaquesArmadoProdOperationCompleted Is Nothing) Then
                Me.WM_ConsultaEmpaquesArmadoProdOperationCompleted = AddressOf Me.OnWM_ConsultaEmpaquesArmadoProdOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaEmpaquesArmadoProd", New Object() {prmOrdenProd, prmEstacion, prmUsuario}, Me.WM_ConsultaEmpaquesArmadoProdOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaEmpaquesArmadoProdOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaEmpaquesArmadoProdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaEmpaquesArmadoProdCompleted(Me, New WM_ConsultaEmpaquesArmadoProdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaEmpaquesArmadoProd_NE", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaEmpaquesArmadoProd_NE(ByVal prmOrdenProd As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaEmpaquesArmadoProd_NE", New Object() {prmOrdenProd, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaEmpaquesArmadoProd_NEAsync(ByVal prmOrdenProd As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaEmpaquesArmadoProd_NEAsync(prmOrdenProd, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaEmpaquesArmadoProd_NEAsync(ByVal prmOrdenProd As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaEmpaquesArmadoProd_NEOperationCompleted Is Nothing) Then
                Me.WM_ConsultaEmpaquesArmadoProd_NEOperationCompleted = AddressOf Me.OnWM_ConsultaEmpaquesArmadoProd_NEOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaEmpaquesArmadoProd_NE", New Object() {prmOrdenProd, prmEstacion, prmUsuario}, Me.WM_ConsultaEmpaquesArmadoProd_NEOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaEmpaquesArmadoProd_NEOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaEmpaquesArmadoProd_NECompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaEmpaquesArmadoProd_NECompleted(Me, New WM_ConsultaEmpaquesArmadoProd_NECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_RegistraEmpaqueEnPallet", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_RegistraEmpaqueEnPallet(ByVal prmOrden As String, ByVal prmEmpaque As String, ByVal prmCantidad As Double, ByVal prmTipo As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_RegistraEmpaqueEnPallet", New Object() {prmOrden, prmEmpaque, prmCantidad, prmTipo, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_RegistraEmpaqueEnPalletAsync(ByVal prmOrden As String, ByVal prmEmpaque As String, ByVal prmCantidad As Double, ByVal prmTipo As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_RegistraEmpaqueEnPalletAsync(prmOrden, prmEmpaque, prmCantidad, prmTipo, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_RegistraEmpaqueEnPalletAsync(ByVal prmOrden As String, ByVal prmEmpaque As String, ByVal prmCantidad As Double, ByVal prmTipo As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_RegistraEmpaqueEnPalletOperationCompleted Is Nothing) Then
                Me.WM_RegistraEmpaqueEnPalletOperationCompleted = AddressOf Me.OnWM_RegistraEmpaqueEnPalletOperationCompleted
            End If
            Me.InvokeAsync("WM_RegistraEmpaqueEnPallet", New Object() {prmOrden, prmEmpaque, prmCantidad, prmTipo, prmEstacion, prmUsuario}, Me.WM_RegistraEmpaqueEnPalletOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_RegistraEmpaqueEnPalletOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_RegistraEmpaqueEnPalletCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_RegistraEmpaqueEnPalletCompleted(Me, New WM_RegistraEmpaqueEnPalletCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_RegistraEmpaqueEnPalletPrimeraYUltima", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_RegistraEmpaqueEnPalletPrimeraYUltima(ByVal prmOrden As String, ByVal prmPrimerEmpaque As String, ByVal prmUltimoEmpaque As String, ByVal prmCantidad As Integer, ByVal prmTipo As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_RegistraEmpaqueEnPalletPrimeraYUltima", New Object() {prmOrden, prmPrimerEmpaque, prmUltimoEmpaque, prmCantidad, prmTipo, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_RegistraEmpaqueEnPalletPrimeraYUltimaAsync(ByVal prmOrden As String, ByVal prmPrimerEmpaque As String, ByVal prmUltimoEmpaque As String, ByVal prmCantidad As Integer, ByVal prmTipo As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_RegistraEmpaqueEnPalletPrimeraYUltimaAsync(prmOrden, prmPrimerEmpaque, prmUltimoEmpaque, prmCantidad, prmTipo, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_RegistraEmpaqueEnPalletPrimeraYUltimaAsync(ByVal prmOrden As String, ByVal prmPrimerEmpaque As String, ByVal prmUltimoEmpaque As String, ByVal prmCantidad As Integer, ByVal prmTipo As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_RegistraEmpaqueEnPalletPrimeraYUltimaOperationCompleted Is Nothing) Then
                Me.WM_RegistraEmpaqueEnPalletPrimeraYUltimaOperationCompleted = AddressOf Me.OnWM_RegistraEmpaqueEnPalletPrimeraYUltimaOperationCompleted
            End If
            Me.InvokeAsync("WM_RegistraEmpaqueEnPalletPrimeraYUltima", New Object() {prmOrden, prmPrimerEmpaque, prmUltimoEmpaque, prmCantidad, prmTipo, prmEstacion, prmUsuario}, Me.WM_RegistraEmpaqueEnPalletPrimeraYUltimaOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_RegistraEmpaqueEnPalletPrimeraYUltimaOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_RegistraEmpaqueEnPalletPrimeraYUltimaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_RegistraEmpaqueEnPalletPrimeraYUltimaCompleted(Me, New WM_RegistraEmpaqueEnPalletPrimeraYUltimaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_CreaEmpaqueNE", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_CreaEmpaqueNE(ByVal prmOrdenProd As String, ByVal prmCantidad As Double, ByVal prmTipo As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_CreaEmpaqueNE", New Object() {prmOrdenProd, prmCantidad, prmTipo, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_CreaEmpaqueNEAsync(ByVal prmOrdenProd As String, ByVal prmCantidad As Double, ByVal prmTipo As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_CreaEmpaqueNEAsync(prmOrdenProd, prmCantidad, prmTipo, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_CreaEmpaqueNEAsync(ByVal prmOrdenProd As String, ByVal prmCantidad As Double, ByVal prmTipo As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_CreaEmpaqueNEOperationCompleted Is Nothing) Then
                Me.WM_CreaEmpaqueNEOperationCompleted = AddressOf Me.OnWM_CreaEmpaqueNEOperationCompleted
            End If
            Me.InvokeAsync("WM_CreaEmpaqueNE", New Object() {prmOrdenProd, prmCantidad, prmTipo, prmEstacion, prmUsuario}, Me.WM_CreaEmpaqueNEOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_CreaEmpaqueNEOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_CreaEmpaqueNECompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_CreaEmpaqueNECompleted(Me, New WM_CreaEmpaqueNECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaCarritoSurtido", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaCarritoSurtido(ByVal prmPedido As String, ByVal prmCarrito As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaCarritoSurtido", New Object() {prmPedido, prmCarrito, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaCarritoSurtidoAsync(ByVal prmPedido As String, ByVal prmCarrito As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaCarritoSurtidoAsync(prmPedido, prmCarrito, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaCarritoSurtidoAsync(ByVal prmPedido As String, ByVal prmCarrito As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaCarritoSurtidoOperationCompleted Is Nothing) Then
                Me.WM_ConsultaCarritoSurtidoOperationCompleted = AddressOf Me.OnWM_ConsultaCarritoSurtidoOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaCarritoSurtido", New Object() {prmPedido, prmCarrito, prmEstacion, prmUsuario}, Me.WM_ConsultaCarritoSurtidoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaCarritoSurtidoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaCarritoSurtidoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaCarritoSurtidoCompleted(Me, New WM_ConsultaCarritoSurtidoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaPisoSugerido", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaPisoSugerido(ByVal prmPedido As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal prmTipoRegistro As Integer) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaPisoSugerido", New Object() {prmPedido, prmPartida, prmEstacion, prmUsuario, prmTipoRegistro})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaPisoSugeridoAsync(ByVal prmPedido As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal prmTipoRegistro As Integer)
            Me.WM_ConsultaPisoSugeridoAsync(prmPedido, prmPartida, prmEstacion, prmUsuario, prmTipoRegistro, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaPisoSugeridoAsync(ByVal prmPedido As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal prmTipoRegistro As Integer, ByVal userState As Object)
            If (Me.WM_ConsultaPisoSugeridoOperationCompleted Is Nothing) Then
                Me.WM_ConsultaPisoSugeridoOperationCompleted = AddressOf Me.OnWM_ConsultaPisoSugeridoOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaPisoSugerido", New Object() {prmPedido, prmPartida, prmEstacion, prmUsuario, prmTipoRegistro}, Me.WM_ConsultaPisoSugeridoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaPisoSugeridoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaPisoSugeridoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaPisoSugeridoCompleted(Me, New WM_ConsultaPisoSugeridoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaPisoSurtido", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaPisoSurtido(ByVal prmPedido As String, ByVal prmPartida As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaPisoSurtido", New Object() {prmPedido, prmPartida, prmPallet, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaPisoSurtidoAsync(ByVal prmPedido As String, ByVal prmPartida As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaPisoSurtidoAsync(prmPedido, prmPartida, prmPallet, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaPisoSurtidoAsync(ByVal prmPedido As String, ByVal prmPartida As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaPisoSurtidoOperationCompleted Is Nothing) Then
                Me.WM_ConsultaPisoSurtidoOperationCompleted = AddressOf Me.OnWM_ConsultaPisoSurtidoOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaPisoSurtido", New Object() {prmPedido, prmPartida, prmPallet, prmEstacion, prmUsuario}, Me.WM_ConsultaPisoSurtidoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaPisoSurtidoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaPisoSurtidoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaPisoSurtidoCompleted(Me, New WM_ConsultaPisoSurtidoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_RegistroPisoSurtido", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_RegistroPisoSurtido(ByVal prmPedido As String, ByVal prmPartida As String, ByVal prmPallet As String, ByVal prmCantidadEmpaques As Integer, ByVal prmArmadoPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_RegistroPisoSurtido", New Object() {prmPedido, prmPartida, prmPallet, prmCantidadEmpaques, prmArmadoPallet, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_RegistroPisoSurtidoAsync(ByVal prmPedido As String, ByVal prmPartida As String, ByVal prmPallet As String, ByVal prmCantidadEmpaques As Integer, ByVal prmArmadoPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_RegistroPisoSurtidoAsync(prmPedido, prmPartida, prmPallet, prmCantidadEmpaques, prmArmadoPallet, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_RegistroPisoSurtidoAsync(ByVal prmPedido As String, ByVal prmPartida As String, ByVal prmPallet As String, ByVal prmCantidadEmpaques As Integer, ByVal prmArmadoPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_RegistroPisoSurtidoOperationCompleted Is Nothing) Then
                Me.WM_RegistroPisoSurtidoOperationCompleted = AddressOf Me.OnWM_RegistroPisoSurtidoOperationCompleted
            End If
            Me.InvokeAsync("WM_RegistroPisoSurtido", New Object() {prmPedido, prmPartida, prmPallet, prmCantidadEmpaques, prmArmadoPallet, prmEstacion, prmUsuario}, Me.WM_RegistroPisoSurtidoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_RegistroPisoSurtidoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_RegistroPisoSurtidoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_RegistroPisoSurtidoCompleted(Me, New WM_RegistroPisoSurtidoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaEmbarqueValidarTotales", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaEmbarqueValidarTotales(ByVal prmOrdenEmbarque As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaEmbarqueValidarTotales", New Object() {prmOrdenEmbarque, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaEmbarqueValidarTotalesAsync(ByVal prmOrdenEmbarque As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaEmbarqueValidarTotalesAsync(prmOrdenEmbarque, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaEmbarqueValidarTotalesAsync(ByVal prmOrdenEmbarque As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaEmbarqueValidarTotalesOperationCompleted Is Nothing) Then
                Me.WM_ConsultaEmbarqueValidarTotalesOperationCompleted = AddressOf Me.OnWM_ConsultaEmbarqueValidarTotalesOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaEmbarqueValidarTotales", New Object() {prmOrdenEmbarque, prmEstacion, prmUsuario}, Me.WM_ConsultaEmbarqueValidarTotalesOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaEmbarqueValidarTotalesOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaEmbarqueValidarTotalesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaEmbarqueValidarTotalesCompleted(Me, New WM_ConsultaEmbarqueValidarTotalesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaEmbarqueValidarEmpaques", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaEmbarqueValidarEmpaques(ByVal prmOrdenEmbarque As String, ByVal prmProducto As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaEmbarqueValidarEmpaques", New Object() {prmOrdenEmbarque, prmProducto, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaEmbarqueValidarEmpaquesAsync(ByVal prmOrdenEmbarque As String, ByVal prmProducto As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaEmbarqueValidarEmpaquesAsync(prmOrdenEmbarque, prmProducto, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaEmbarqueValidarEmpaquesAsync(ByVal prmOrdenEmbarque As String, ByVal prmProducto As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaEmbarqueValidarEmpaquesOperationCompleted Is Nothing) Then
                Me.WM_ConsultaEmbarqueValidarEmpaquesOperationCompleted = AddressOf Me.OnWM_ConsultaEmbarqueValidarEmpaquesOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaEmbarqueValidarEmpaques", New Object() {prmOrdenEmbarque, prmProducto, prmEstacion, prmUsuario}, Me.WM_ConsultaEmbarqueValidarEmpaquesOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaEmbarqueValidarEmpaquesOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaEmbarqueValidarEmpaquesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaEmbarqueValidarEmpaquesCompleted(Me, New WM_ConsultaEmbarqueValidarEmpaquesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaEmbarqueValidarPallets", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaEmbarqueValidarPallets(ByVal prmOrdenEmbarque As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaEmbarqueValidarPallets", New Object() {prmOrdenEmbarque, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaEmbarqueValidarPalletsAsync(ByVal prmOrdenEmbarque As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaEmbarqueValidarPalletsAsync(prmOrdenEmbarque, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaEmbarqueValidarPalletsAsync(ByVal prmOrdenEmbarque As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaEmbarqueValidarPalletsOperationCompleted Is Nothing) Then
                Me.WM_ConsultaEmbarqueValidarPalletsOperationCompleted = AddressOf Me.OnWM_ConsultaEmbarqueValidarPalletsOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaEmbarqueValidarPallets", New Object() {prmOrdenEmbarque, prmEstacion, prmUsuario}, Me.WM_ConsultaEmbarqueValidarPalletsOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaEmbarqueValidarPalletsOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaEmbarqueValidarPalletsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaEmbarqueValidarPalletsCompleted(Me, New WM_ConsultaEmbarqueValidarPalletsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ValidaEmbEmpaque", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ValidaEmbEmpaque(ByVal prmDocumento As String, ByVal prmCodigoEmpaque As String, ByVal prmGuia As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ValidaEmbEmpaque", New Object() {prmDocumento, prmCodigoEmpaque, prmGuia, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ValidaEmbEmpaqueAsync(ByVal prmDocumento As String, ByVal prmCodigoEmpaque As String, ByVal prmGuia As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ValidaEmbEmpaqueAsync(prmDocumento, prmCodigoEmpaque, prmGuia, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ValidaEmbEmpaqueAsync(ByVal prmDocumento As String, ByVal prmCodigoEmpaque As String, ByVal prmGuia As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ValidaEmbEmpaqueOperationCompleted Is Nothing) Then
                Me.WM_ValidaEmbEmpaqueOperationCompleted = AddressOf Me.OnWM_ValidaEmbEmpaqueOperationCompleted
            End If
            Me.InvokeAsync("WM_ValidaEmbEmpaque", New Object() {prmDocumento, prmCodigoEmpaque, prmGuia, prmEstacion, prmUsuario}, Me.WM_ValidaEmbEmpaqueOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ValidaEmbEmpaqueOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ValidaEmbEmpaqueCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ValidaEmbEmpaqueCompleted(Me, New WM_ValidaEmbEmpaqueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ValidaEmbPallet", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ValidaEmbPallet(ByVal prmOS As String, ByVal prmPallet As String, ByVal prmGuia As String, ByVal prmValida As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ValidaEmbPallet", New Object() {prmOS, prmPallet, prmGuia, prmValida, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ValidaEmbPalletAsync(ByVal prmOS As String, ByVal prmPallet As String, ByVal prmGuia As String, ByVal prmValida As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ValidaEmbPalletAsync(prmOS, prmPallet, prmGuia, prmValida, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ValidaEmbPalletAsync(ByVal prmOS As String, ByVal prmPallet As String, ByVal prmGuia As String, ByVal prmValida As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ValidaEmbPalletOperationCompleted Is Nothing) Then
                Me.WM_ValidaEmbPalletOperationCompleted = AddressOf Me.OnWM_ValidaEmbPalletOperationCompleted
            End If
            Me.InvokeAsync("WM_ValidaEmbPallet", New Object() {prmOS, prmPallet, prmGuia, prmValida, prmEstacion, prmUsuario}, Me.WM_ValidaEmbPalletOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ValidaEmbPalletOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ValidaEmbPalletCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ValidaEmbPalletCompleted(Me, New WM_ValidaEmbPalletCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_RegistrarEmbMaterial", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_RegistrarEmbMaterial(ByVal prmDocumento As String, ByVal prmLinea As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal prmValida As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_RegistrarEmbMaterial", New Object() {prmDocumento, prmLinea, prmEstacion, prmUsuario, prmValida})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_RegistrarEmbMaterialAsync(ByVal prmDocumento As String, ByVal prmLinea As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal prmValida As String)
            Me.WM_RegistrarEmbMaterialAsync(prmDocumento, prmLinea, prmEstacion, prmUsuario, prmValida, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_RegistrarEmbMaterialAsync(ByVal prmDocumento As String, ByVal prmLinea As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal prmValida As String, ByVal userState As Object)
            If (Me.WM_RegistrarEmbMaterialOperationCompleted Is Nothing) Then
                Me.WM_RegistrarEmbMaterialOperationCompleted = AddressOf Me.OnWM_RegistrarEmbMaterialOperationCompleted
            End If
            Me.InvokeAsync("WM_RegistrarEmbMaterial", New Object() {prmDocumento, prmLinea, prmEstacion, prmUsuario, prmValida}, Me.WM_RegistrarEmbMaterialOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_RegistrarEmbMaterialOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_RegistrarEmbMaterialCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_RegistrarEmbMaterialCompleted(Me, New WM_RegistrarEmbMaterialCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaPalletSugeridoTraspasoEnvio", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaPalletSugeridoTraspasoEnvio(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaPalletSugeridoTraspasoEnvio", New Object() {prmDocumento, prmPartida, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaPalletSugeridoTraspasoEnvioAsync(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaPalletSugeridoTraspasoEnvioAsync(prmDocumento, prmPartida, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaPalletSugeridoTraspasoEnvioAsync(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaPalletSugeridoTraspasoEnvioOperationCompleted Is Nothing) Then
                Me.WM_ConsultaPalletSugeridoTraspasoEnvioOperationCompleted = AddressOf Me.OnWM_ConsultaPalletSugeridoTraspasoEnvioOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaPalletSugeridoTraspasoEnvio", New Object() {prmDocumento, prmPartida, prmEstacion, prmUsuario}, Me.WM_ConsultaPalletSugeridoTraspasoEnvioOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaPalletSugeridoTraspasoEnvioOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaPalletSugeridoTraspasoEnvioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaPalletSugeridoTraspasoEnvioCompleted(Me, New WM_ConsultaPalletSugeridoTraspasoEnvioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaPalletSugeridoTraspasoEnvio_NE", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaPalletSugeridoTraspasoEnvio_NE(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaPalletSugeridoTraspasoEnvio_NE", New Object() {prmDocumento, prmPartida, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaPalletSugeridoTraspasoEnvio_NEAsync(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaPalletSugeridoTraspasoEnvio_NEAsync(prmDocumento, prmPartida, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaPalletSugeridoTraspasoEnvio_NEAsync(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaPalletSugeridoTraspasoEnvio_NEOperationCompleted Is Nothing) Then
                Me.WM_ConsultaPalletSugeridoTraspasoEnvio_NEOperationCompleted = AddressOf Me.OnWM_ConsultaPalletSugeridoTraspasoEnvio_NEOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaPalletSugeridoTraspasoEnvio_NE", New Object() {prmDocumento, prmPartida, prmEstacion, prmUsuario}, Me.WM_ConsultaPalletSugeridoTraspasoEnvio_NEOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaPalletSugeridoTraspasoEnvio_NEOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaPalletSugeridoTraspasoEnvio_NECompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaPalletSugeridoTraspasoEnvio_NECompleted(Me, New WM_ConsultaPalletSugeridoTraspasoEnvio_NECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaTarimaArmadoTraspaso", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaTarimaArmadoTraspaso(ByVal prmDocumento As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaTarimaArmadoTraspaso", New Object() {prmDocumento, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaTarimaArmadoTraspasoAsync(ByVal prmDocumento As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaTarimaArmadoTraspasoAsync(prmDocumento, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaTarimaArmadoTraspasoAsync(ByVal prmDocumento As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaTarimaArmadoTraspasoOperationCompleted Is Nothing) Then
                Me.WM_ConsultaTarimaArmadoTraspasoOperationCompleted = AddressOf Me.OnWM_ConsultaTarimaArmadoTraspasoOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaTarimaArmadoTraspaso", New Object() {prmDocumento, prmEstacion, prmUsuario}, Me.WM_ConsultaTarimaArmadoTraspasoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaTarimaArmadoTraspasoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaTarimaArmadoTraspasoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaTarimaArmadoTraspasoCompleted(Me, New WM_ConsultaTarimaArmadoTraspasoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaTarimaArmadoTraspaso_NE", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaTarimaArmadoTraspaso_NE(ByVal prmDocumento As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaTarimaArmadoTraspaso_NE", New Object() {prmDocumento, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaTarimaArmadoTraspaso_NEAsync(ByVal prmDocumento As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaTarimaArmadoTraspaso_NEAsync(prmDocumento, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaTarimaArmadoTraspaso_NEAsync(ByVal prmDocumento As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaTarimaArmadoTraspaso_NEOperationCompleted Is Nothing) Then
                Me.WM_ConsultaTarimaArmadoTraspaso_NEOperationCompleted = AddressOf Me.OnWM_ConsultaTarimaArmadoTraspaso_NEOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaTarimaArmadoTraspaso_NE", New Object() {prmDocumento, prmEstacion, prmUsuario}, Me.WM_ConsultaTarimaArmadoTraspaso_NEOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaTarimaArmadoTraspaso_NEOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaTarimaArmadoTraspaso_NECompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaTarimaArmadoTraspaso_NECompleted(Me, New WM_ConsultaTarimaArmadoTraspaso_NECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaEmpaqueSugeridoTraspasoEnvio", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaEmpaqueSugeridoTraspasoEnvio(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaEmpaqueSugeridoTraspasoEnvio", New Object() {prmDocumento, prmPartida, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaEmpaqueSugeridoTraspasoEnvioAsync(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaEmpaqueSugeridoTraspasoEnvioAsync(prmDocumento, prmPartida, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaEmpaqueSugeridoTraspasoEnvioAsync(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaEmpaqueSugeridoTraspasoEnvioOperationCompleted Is Nothing) Then
                Me.WM_ConsultaEmpaqueSugeridoTraspasoEnvioOperationCompleted = AddressOf Me.OnWM_ConsultaEmpaqueSugeridoTraspasoEnvioOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaEmpaqueSugeridoTraspasoEnvio", New Object() {prmDocumento, prmPartida, prmEstacion, prmUsuario}, Me.WM_ConsultaEmpaqueSugeridoTraspasoEnvioOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaEmpaqueSugeridoTraspasoEnvioOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaEmpaqueSugeridoTraspasoEnvioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaEmpaqueSugeridoTraspasoEnvioCompleted(Me, New WM_ConsultaEmpaqueSugeridoTraspasoEnvioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultarPisoTraspaso", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultarPisoTraspaso(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmPiso As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultarPisoTraspaso", New Object() {prmDocumento, prmPartida, prmPiso, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultarPisoTraspasoAsync(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmPiso As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultarPisoTraspasoAsync(prmDocumento, prmPartida, prmPiso, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultarPisoTraspasoAsync(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmPiso As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultarPisoTraspasoOperationCompleted Is Nothing) Then
                Me.WM_ConsultarPisoTraspasoOperationCompleted = AddressOf Me.OnWM_ConsultarPisoTraspasoOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultarPisoTraspaso", New Object() {prmDocumento, prmPartida, prmPiso, prmEstacion, prmUsuario}, Me.WM_ConsultarPisoTraspasoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultarPisoTraspasoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultarPisoTraspasoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultarPisoTraspasoCompleted(Me, New WM_ConsultarPisoTraspasoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_RegistroTraspasoPisoEnvio", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_RegistroTraspasoPisoEnvio(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmPiso As String, ByVal prmCantidadEmpaques As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_RegistroTraspasoPisoEnvio", New Object() {prmDocumento, prmPartida, prmPiso, prmCantidadEmpaques, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_RegistroTraspasoPisoEnvioAsync(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmPiso As String, ByVal prmCantidadEmpaques As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_RegistroTraspasoPisoEnvioAsync(prmDocumento, prmPartida, prmPiso, prmCantidadEmpaques, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_RegistroTraspasoPisoEnvioAsync(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmPiso As String, ByVal prmCantidadEmpaques As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_RegistroTraspasoPisoEnvioOperationCompleted Is Nothing) Then
                Me.WM_RegistroTraspasoPisoEnvioOperationCompleted = AddressOf Me.OnWM_RegistroTraspasoPisoEnvioOperationCompleted
            End If
            Me.InvokeAsync("WM_RegistroTraspasoPisoEnvio", New Object() {prmDocumento, prmPartida, prmPiso, prmCantidadEmpaques, prmEstacion, prmUsuario}, Me.WM_RegistroTraspasoPisoEnvioOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_RegistroTraspasoPisoEnvioOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_RegistroTraspasoPisoEnvioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_RegistroTraspasoPisoEnvioCompleted(Me, New WM_RegistroTraspasoPisoEnvioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaPisoSugeridoTraspaso", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaPisoSugeridoTraspaso(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaPisoSugeridoTraspaso", New Object() {prmDocumento, prmPartida, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaPisoSugeridoTraspasoAsync(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaPisoSugeridoTraspasoAsync(prmDocumento, prmPartida, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaPisoSugeridoTraspasoAsync(ByVal prmDocumento As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaPisoSugeridoTraspasoOperationCompleted Is Nothing) Then
                Me.WM_ConsultaPisoSugeridoTraspasoOperationCompleted = AddressOf Me.OnWM_ConsultaPisoSugeridoTraspasoOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaPisoSugeridoTraspaso", New Object() {prmDocumento, prmPartida, prmEstacion, prmUsuario}, Me.WM_ConsultaPisoSugeridoTraspasoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaPisoSugeridoTraspasoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaPisoSugeridoTraspasoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaPisoSugeridoTraspasoCompleted(Me, New WM_ConsultaPisoSugeridoTraspasoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaRechazoPalletTrasp", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaRechazoPalletTrasp(ByVal prmDocumento As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaRechazoPalletTrasp", New Object() {prmDocumento, prmPallet, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaRechazoPalletTraspAsync(ByVal prmDocumento As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaRechazoPalletTraspAsync(prmDocumento, prmPallet, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaRechazoPalletTraspAsync(ByVal prmDocumento As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaRechazoPalletTraspOperationCompleted Is Nothing) Then
                Me.WM_ConsultaRechazoPalletTraspOperationCompleted = AddressOf Me.OnWM_ConsultaRechazoPalletTraspOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaRechazoPalletTrasp", New Object() {prmDocumento, prmPallet, prmEstacion, prmUsuario}, Me.WM_ConsultaRechazoPalletTraspOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaRechazoPalletTraspOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaRechazoPalletTraspCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaRechazoPalletTraspCompleted(Me, New WM_ConsultaRechazoPalletTraspCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_RechazoPalletTrasp", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_RechazoPalletTrasp(ByVal prmDocumento As String, ByVal prmPallet As String, ByVal prmLinea As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_RechazoPalletTrasp", New Object() {prmDocumento, prmPallet, prmLinea, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_RechazoPalletTraspAsync(ByVal prmDocumento As String, ByVal prmPallet As String, ByVal prmLinea As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_RechazoPalletTraspAsync(prmDocumento, prmPallet, prmLinea, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_RechazoPalletTraspAsync(ByVal prmDocumento As String, ByVal prmPallet As String, ByVal prmLinea As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_RechazoPalletTraspOperationCompleted Is Nothing) Then
                Me.WM_RechazoPalletTraspOperationCompleted = AddressOf Me.OnWM_RechazoPalletTraspOperationCompleted
            End If
            Me.InvokeAsync("WM_RechazoPalletTrasp", New Object() {prmDocumento, prmPallet, prmLinea, prmEstacion, prmUsuario}, Me.WM_RechazoPalletTraspOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_RechazoPalletTraspOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_RechazoPalletTraspCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_RechazoPalletTraspCompleted(Me, New WM_RechazoPalletTraspCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_OSListarPartidasAValidar", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_OSListarPartidasAValidar(ByVal prmIdOS As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_OSListarPartidasAValidar", New Object() {prmIdOS, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_OSListarPartidasAValidarAsync(ByVal prmIdOS As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_OSListarPartidasAValidarAsync(prmIdOS, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_OSListarPartidasAValidarAsync(ByVal prmIdOS As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_OSListarPartidasAValidarOperationCompleted Is Nothing) Then
                Me.WM_OSListarPartidasAValidarOperationCompleted = AddressOf Me.OnWM_OSListarPartidasAValidarOperationCompleted
            End If
            Me.InvokeAsync("WM_OSListarPartidasAValidar", New Object() {prmIdOS, prmEstacion, prmUsuario}, Me.WM_OSListarPartidasAValidarOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_OSListarPartidasAValidarOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_OSListarPartidasAValidarCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_OSListarPartidasAValidarCompleted(Me, New WM_OSListarPartidasAValidarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_OSConsultarPalletAValidar", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_OSConsultarPalletAValidar(ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_OSConsultarPalletAValidar", New Object() {prmPallet, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_OSConsultarPalletAValidarAsync(ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_OSConsultarPalletAValidarAsync(prmPallet, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_OSConsultarPalletAValidarAsync(ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_OSConsultarPalletAValidarOperationCompleted Is Nothing) Then
                Me.WM_OSConsultarPalletAValidarOperationCompleted = AddressOf Me.OnWM_OSConsultarPalletAValidarOperationCompleted
            End If
            Me.InvokeAsync("WM_OSConsultarPalletAValidar", New Object() {prmPallet, prmEstacion, prmUsuario}, Me.WM_OSConsultarPalletAValidarOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_OSConsultarPalletAValidarOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_OSConsultarPalletAValidarCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_OSConsultarPalletAValidarCompleted(Me, New WM_OSConsultarPalletAValidarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_OSRegistrarEmpaqueRechazado", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_OSRegistrarEmpaqueRechazado(ByVal prmOS As String, ByVal prmPallet As String, ByVal prmGuia As String, ByVal prmRazonRechazo As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_OSRegistrarEmpaqueRechazado", New Object() {prmOS, prmPallet, prmGuia, prmRazonRechazo, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_OSRegistrarEmpaqueRechazadoAsync(ByVal prmOS As String, ByVal prmPallet As String, ByVal prmGuia As String, ByVal prmRazonRechazo As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_OSRegistrarEmpaqueRechazadoAsync(prmOS, prmPallet, prmGuia, prmRazonRechazo, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_OSRegistrarEmpaqueRechazadoAsync(ByVal prmOS As String, ByVal prmPallet As String, ByVal prmGuia As String, ByVal prmRazonRechazo As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_OSRegistrarEmpaqueRechazadoOperationCompleted Is Nothing) Then
                Me.WM_OSRegistrarEmpaqueRechazadoOperationCompleted = AddressOf Me.OnWM_OSRegistrarEmpaqueRechazadoOperationCompleted
            End If
            Me.InvokeAsync("WM_OSRegistrarEmpaqueRechazado", New Object() {prmOS, prmPallet, prmGuia, prmRazonRechazo, prmEstacion, prmUsuario}, Me.WM_OSRegistrarEmpaqueRechazadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_OSRegistrarEmpaqueRechazadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_OSRegistrarEmpaqueRechazadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_OSRegistrarEmpaqueRechazadoCompleted(Me, New WM_OSRegistrarEmpaqueRechazadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_OSRegistrarPalletLineaRechazado", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_OSRegistrarPalletLineaRechazado(ByVal prmOS As String, ByVal prmPallet As String, ByVal prmLinea As String, ByVal prmRazonRechazo As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_OSRegistrarPalletLineaRechazado", New Object() {prmOS, prmPallet, prmLinea, prmRazonRechazo, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_OSRegistrarPalletLineaRechazadoAsync(ByVal prmOS As String, ByVal prmPallet As String, ByVal prmLinea As String, ByVal prmRazonRechazo As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_OSRegistrarPalletLineaRechazadoAsync(prmOS, prmPallet, prmLinea, prmRazonRechazo, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_OSRegistrarPalletLineaRechazadoAsync(ByVal prmOS As String, ByVal prmPallet As String, ByVal prmLinea As String, ByVal prmRazonRechazo As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_OSRegistrarPalletLineaRechazadoOperationCompleted Is Nothing) Then
                Me.WM_OSRegistrarPalletLineaRechazadoOperationCompleted = AddressOf Me.OnWM_OSRegistrarPalletLineaRechazadoOperationCompleted
            End If
            Me.InvokeAsync("WM_OSRegistrarPalletLineaRechazado", New Object() {prmOS, prmPallet, prmLinea, prmRazonRechazo, prmEstacion, prmUsuario}, Me.WM_OSRegistrarPalletLineaRechazadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_OSRegistrarPalletLineaRechazadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_OSRegistrarPalletLineaRechazadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_OSRegistrarPalletLineaRechazadoCompleted(Me, New WM_OSRegistrarPalletLineaRechazadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_OSRegistrarPalletAndenValidado", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_OSRegistrarPalletAndenValidado(ByVal prmOS As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_OSRegistrarPalletAndenValidado", New Object() {prmOS, prmPallet, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_OSRegistrarPalletAndenValidadoAsync(ByVal prmOS As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_OSRegistrarPalletAndenValidadoAsync(prmOS, prmPallet, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_OSRegistrarPalletAndenValidadoAsync(ByVal prmOS As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_OSRegistrarPalletAndenValidadoOperationCompleted Is Nothing) Then
                Me.WM_OSRegistrarPalletAndenValidadoOperationCompleted = AddressOf Me.OnWM_OSRegistrarPalletAndenValidadoOperationCompleted
            End If
            Me.InvokeAsync("WM_OSRegistrarPalletAndenValidado", New Object() {prmOS, prmPallet, prmEstacion, prmUsuario}, Me.WM_OSRegistrarPalletAndenValidadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_OSRegistrarPalletAndenValidadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_OSRegistrarPalletAndenValidadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_OSRegistrarPalletAndenValidadoCompleted(Me, New WM_OSRegistrarPalletAndenValidadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_OSRegistrarEmpaqueAndenRechazado", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_OSRegistrarEmpaqueAndenRechazado(ByVal prmOS As String, ByVal prmEmpaque As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_OSRegistrarEmpaqueAndenRechazado", New Object() {prmOS, prmEmpaque, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_OSRegistrarEmpaqueAndenRechazadoAsync(ByVal prmOS As String, ByVal prmEmpaque As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_OSRegistrarEmpaqueAndenRechazadoAsync(prmOS, prmEmpaque, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_OSRegistrarEmpaqueAndenRechazadoAsync(ByVal prmOS As String, ByVal prmEmpaque As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_OSRegistrarEmpaqueAndenRechazadoOperationCompleted Is Nothing) Then
                Me.WM_OSRegistrarEmpaqueAndenRechazadoOperationCompleted = AddressOf Me.OnWM_OSRegistrarEmpaqueAndenRechazadoOperationCompleted
            End If
            Me.InvokeAsync("WM_OSRegistrarEmpaqueAndenRechazado", New Object() {prmOS, prmEmpaque, prmEstacion, prmUsuario}, Me.WM_OSRegistrarEmpaqueAndenRechazadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_OSRegistrarEmpaqueAndenRechazadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_OSRegistrarEmpaqueAndenRechazadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_OSRegistrarEmpaqueAndenRechazadoCompleted(Me, New WM_OSRegistrarEmpaqueAndenRechazadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_OSRegistrarPalletAndenRechazado", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_OSRegistrarPalletAndenRechazado(ByVal prmOS As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_OSRegistrarPalletAndenRechazado", New Object() {prmOS, prmPallet, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_OSRegistrarPalletAndenRechazadoAsync(ByVal prmOS As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_OSRegistrarPalletAndenRechazadoAsync(prmOS, prmPallet, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_OSRegistrarPalletAndenRechazadoAsync(ByVal prmOS As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_OSRegistrarPalletAndenRechazadoOperationCompleted Is Nothing) Then
                Me.WM_OSRegistrarPalletAndenRechazadoOperationCompleted = AddressOf Me.OnWM_OSRegistrarPalletAndenRechazadoOperationCompleted
            End If
            Me.InvokeAsync("WM_OSRegistrarPalletAndenRechazado", New Object() {prmOS, prmPallet, prmEstacion, prmUsuario}, Me.WM_OSRegistrarPalletAndenRechazadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_OSRegistrarPalletAndenRechazadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_OSRegistrarPalletAndenRechazadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_OSRegistrarPalletAndenRechazadoCompleted(Me, New WM_OSRegistrarPalletAndenRechazadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_OSListarPalletsAEntregar", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_OSListarPalletsAEntregar(ByVal prmIdOS As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_OSListarPalletsAEntregar", New Object() {prmIdOS, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_OSListarPalletsAEntregarAsync(ByVal prmIdOS As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_OSListarPalletsAEntregarAsync(prmIdOS, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_OSListarPalletsAEntregarAsync(ByVal prmIdOS As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_OSListarPalletsAEntregarOperationCompleted Is Nothing) Then
                Me.WM_OSListarPalletsAEntregarOperationCompleted = AddressOf Me.OnWM_OSListarPalletsAEntregarOperationCompleted
            End If
            Me.InvokeAsync("WM_OSListarPalletsAEntregar", New Object() {prmIdOS, prmEstacion, prmUsuario}, Me.WM_OSListarPalletsAEntregarOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_OSListarPalletsAEntregarOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_OSListarPalletsAEntregarCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_OSListarPalletsAEntregarCompleted(Me, New WM_OSListarPalletsAEntregarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_OSRegistrarPalletEntregado", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_OSRegistrarPalletEntregado(ByVal prmOS As String, ByVal prmPallet As String, ByVal prmLinea As String, ByVal prmUsuarioEntrega As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_OSRegistrarPalletEntregado", New Object() {prmOS, prmPallet, prmLinea, prmUsuarioEntrega, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_OSRegistrarPalletEntregadoAsync(ByVal prmOS As String, ByVal prmPallet As String, ByVal prmLinea As String, ByVal prmUsuarioEntrega As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_OSRegistrarPalletEntregadoAsync(prmOS, prmPallet, prmLinea, prmUsuarioEntrega, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_OSRegistrarPalletEntregadoAsync(ByVal prmOS As String, ByVal prmPallet As String, ByVal prmLinea As String, ByVal prmUsuarioEntrega As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_OSRegistrarPalletEntregadoOperationCompleted Is Nothing) Then
                Me.WM_OSRegistrarPalletEntregadoOperationCompleted = AddressOf Me.OnWM_OSRegistrarPalletEntregadoOperationCompleted
            End If
            Me.InvokeAsync("WM_OSRegistrarPalletEntregado", New Object() {prmOS, prmPallet, prmLinea, prmUsuarioEntrega, prmEstacion, prmUsuario}, Me.WM_OSRegistrarPalletEntregadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_OSRegistrarPalletEntregadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_OSRegistrarPalletEntregadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_OSRegistrarPalletEntregadoCompleted(Me, New WM_OSRegistrarPalletEntregadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_OSRegistraEntregaAnden", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_OSRegistraEntregaAnden(ByVal prmPallet As String, ByVal prmAnden As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_OSRegistraEntregaAnden", New Object() {prmPallet, prmAnden, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_OSRegistraEntregaAndenAsync(ByVal prmPallet As String, ByVal prmAnden As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_OSRegistraEntregaAndenAsync(prmPallet, prmAnden, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_OSRegistraEntregaAndenAsync(ByVal prmPallet As String, ByVal prmAnden As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_OSRegistraEntregaAndenOperationCompleted Is Nothing) Then
                Me.WM_OSRegistraEntregaAndenOperationCompleted = AddressOf Me.OnWM_OSRegistraEntregaAndenOperationCompleted
            End If
            Me.InvokeAsync("WM_OSRegistraEntregaAnden", New Object() {prmPallet, prmAnden, prmEstacion, prmUsuario}, Me.WM_OSRegistraEntregaAndenOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_OSRegistraEntregaAndenOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_OSRegistraEntregaAndenCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_OSRegistraEntregaAndenCompleted(Me, New WM_OSRegistraEntregaAndenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_OSRegistraEmbarqueAnden", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_OSRegistraEmbarqueAnden(ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_OSRegistraEmbarqueAnden", New Object() {prmPallet, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_OSRegistraEmbarqueAndenAsync(ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_OSRegistraEmbarqueAndenAsync(prmPallet, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_OSRegistraEmbarqueAndenAsync(ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_OSRegistraEmbarqueAndenOperationCompleted Is Nothing) Then
                Me.WM_OSRegistraEmbarqueAndenOperationCompleted = AddressOf Me.OnWM_OSRegistraEmbarqueAndenOperationCompleted
            End If
            Me.InvokeAsync("WM_OSRegistraEmbarqueAnden", New Object() {prmPallet, prmEstacion, prmUsuario}, Me.WM_OSRegistraEmbarqueAndenOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_OSRegistraEmbarqueAndenOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_OSRegistraEmbarqueAndenCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_OSRegistraEmbarqueAndenCompleted(Me, New WM_OSRegistraEmbarqueAndenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_OSRegistraRecibePalletP2", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_OSRegistraRecibePalletP2(ByVal prmOS As String, ByVal prmPallet As String, ByVal prmLinea As String, ByVal prmUsuarioEntrega As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_OSRegistraRecibePalletP2", New Object() {prmOS, prmPallet, prmLinea, prmUsuarioEntrega, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_OSRegistraRecibePalletP2Async(ByVal prmOS As String, ByVal prmPallet As String, ByVal prmLinea As String, ByVal prmUsuarioEntrega As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_OSRegistraRecibePalletP2Async(prmOS, prmPallet, prmLinea, prmUsuarioEntrega, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_OSRegistraRecibePalletP2Async(ByVal prmOS As String, ByVal prmPallet As String, ByVal prmLinea As String, ByVal prmUsuarioEntrega As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_OSRegistraRecibePalletP2OperationCompleted Is Nothing) Then
                Me.WM_OSRegistraRecibePalletP2OperationCompleted = AddressOf Me.OnWM_OSRegistraRecibePalletP2OperationCompleted
            End If
            Me.InvokeAsync("WM_OSRegistraRecibePalletP2", New Object() {prmOS, prmPallet, prmLinea, prmUsuarioEntrega, prmEstacion, prmUsuario}, Me.WM_OSRegistraRecibePalletP2OperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_OSRegistraRecibePalletP2OperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_OSRegistraRecibePalletP2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_OSRegistraRecibePalletP2Completed(Me, New WM_OSRegistraRecibePalletP2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_KanbanListarPartidasOrdenesSurtido", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_KanbanListarPartidasOrdenesSurtido(ByVal prmOrdenSurtido As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_KanbanListarPartidasOrdenesSurtido", New Object() {prmOrdenSurtido, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_KanbanListarPartidasOrdenesSurtidoAsync(ByVal prmOrdenSurtido As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_KanbanListarPartidasOrdenesSurtidoAsync(prmOrdenSurtido, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_KanbanListarPartidasOrdenesSurtidoAsync(ByVal prmOrdenSurtido As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_KanbanListarPartidasOrdenesSurtidoOperationCompleted Is Nothing) Then
                Me.WM_KanbanListarPartidasOrdenesSurtidoOperationCompleted = AddressOf Me.OnWM_KanbanListarPartidasOrdenesSurtidoOperationCompleted
            End If
            Me.InvokeAsync("WM_KanbanListarPartidasOrdenesSurtido", New Object() {prmOrdenSurtido, prmEstacion, prmUsuario}, Me.WM_KanbanListarPartidasOrdenesSurtidoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_KanbanListarPartidasOrdenesSurtidoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_KanbanListarPartidasOrdenesSurtidoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_KanbanListarPartidasOrdenesSurtidoCompleted(Me, New WM_KanbanListarPartidasOrdenesSurtidoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_KanbanConsultaPartidaOrdenesSurtido", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_KanbanConsultaPartidaOrdenesSurtido(ByVal prmOrdenKanban As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_KanbanConsultaPartidaOrdenesSurtido", New Object() {prmOrdenKanban, prmPartida, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_KanbanConsultaPartidaOrdenesSurtidoAsync(ByVal prmOrdenKanban As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_KanbanConsultaPartidaOrdenesSurtidoAsync(prmOrdenKanban, prmPartida, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_KanbanConsultaPartidaOrdenesSurtidoAsync(ByVal prmOrdenKanban As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_KanbanConsultaPartidaOrdenesSurtidoOperationCompleted Is Nothing) Then
                Me.WM_KanbanConsultaPartidaOrdenesSurtidoOperationCompleted = AddressOf Me.OnWM_KanbanConsultaPartidaOrdenesSurtidoOperationCompleted
            End If
            Me.InvokeAsync("WM_KanbanConsultaPartidaOrdenesSurtido", New Object() {prmOrdenKanban, prmPartida, prmEstacion, prmUsuario}, Me.WM_KanbanConsultaPartidaOrdenesSurtidoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_KanbanConsultaPartidaOrdenesSurtidoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_KanbanConsultaPartidaOrdenesSurtidoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_KanbanConsultaPartidaOrdenesSurtidoCompleted(Me, New WM_KanbanConsultaPartidaOrdenesSurtidoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_KanbanConsultaPalletASurtir", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_KanbanConsultaPalletASurtir(ByVal prmCodigoPallet As String, ByVal prmOrdenSurtido As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_KanbanConsultaPalletASurtir", New Object() {prmCodigoPallet, prmOrdenSurtido, prmPartida, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_KanbanConsultaPalletASurtirAsync(ByVal prmCodigoPallet As String, ByVal prmOrdenSurtido As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_KanbanConsultaPalletASurtirAsync(prmCodigoPallet, prmOrdenSurtido, prmPartida, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_KanbanConsultaPalletASurtirAsync(ByVal prmCodigoPallet As String, ByVal prmOrdenSurtido As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_KanbanConsultaPalletASurtirOperationCompleted Is Nothing) Then
                Me.WM_KanbanConsultaPalletASurtirOperationCompleted = AddressOf Me.OnWM_KanbanConsultaPalletASurtirOperationCompleted
            End If
            Me.InvokeAsync("WM_KanbanConsultaPalletASurtir", New Object() {prmCodigoPallet, prmOrdenSurtido, prmPartida, prmEstacion, prmUsuario}, Me.WM_KanbanConsultaPalletASurtirOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_KanbanConsultaPalletASurtirOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_KanbanConsultaPalletASurtirCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_KanbanConsultaPalletASurtirCompleted(Me, New WM_KanbanConsultaPalletASurtirCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_KanbanConsultaEmpaqueASurtir", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_KanbanConsultaEmpaqueASurtir(ByVal prmCodigoEmpaque As String, ByVal prmOrdenSurtido As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_KanbanConsultaEmpaqueASurtir", New Object() {prmCodigoEmpaque, prmOrdenSurtido, prmPartida, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_KanbanConsultaEmpaqueASurtirAsync(ByVal prmCodigoEmpaque As String, ByVal prmOrdenSurtido As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_KanbanConsultaEmpaqueASurtirAsync(prmCodigoEmpaque, prmOrdenSurtido, prmPartida, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_KanbanConsultaEmpaqueASurtirAsync(ByVal prmCodigoEmpaque As String, ByVal prmOrdenSurtido As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_KanbanConsultaEmpaqueASurtirOperationCompleted Is Nothing) Then
                Me.WM_KanbanConsultaEmpaqueASurtirOperationCompleted = AddressOf Me.OnWM_KanbanConsultaEmpaqueASurtirOperationCompleted
            End If
            Me.InvokeAsync("WM_KanbanConsultaEmpaqueASurtir", New Object() {prmCodigoEmpaque, prmOrdenSurtido, prmPartida, prmEstacion, prmUsuario}, Me.WM_KanbanConsultaEmpaqueASurtirOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_KanbanConsultaEmpaqueASurtirOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_KanbanConsultaEmpaqueASurtirCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_KanbanConsultaEmpaqueASurtirCompleted(Me, New WM_KanbanConsultaEmpaqueASurtirCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_KanbanSugerirPallet", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_KanbanSugerirPallet(ByVal prmOrdenKanban As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_KanbanSugerirPallet", New Object() {prmOrdenKanban, prmPartida, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_KanbanSugerirPalletAsync(ByVal prmOrdenKanban As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_KanbanSugerirPalletAsync(prmOrdenKanban, prmPartida, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_KanbanSugerirPalletAsync(ByVal prmOrdenKanban As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_KanbanSugerirPalletOperationCompleted Is Nothing) Then
                Me.WM_KanbanSugerirPalletOperationCompleted = AddressOf Me.OnWM_KanbanSugerirPalletOperationCompleted
            End If
            Me.InvokeAsync("WM_KanbanSugerirPallet", New Object() {prmOrdenKanban, prmPartida, prmEstacion, prmUsuario}, Me.WM_KanbanSugerirPalletOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_KanbanSugerirPalletOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_KanbanSugerirPalletCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_KanbanSugerirPalletCompleted(Me, New WM_KanbanSugerirPalletCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_KanbanSugerirEmpaque", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_KanbanSugerirEmpaque(ByVal prmOrdenKanban As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_KanbanSugerirEmpaque", New Object() {prmOrdenKanban, prmPartida, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_KanbanSugerirEmpaqueAsync(ByVal prmOrdenKanban As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_KanbanSugerirEmpaqueAsync(prmOrdenKanban, prmPartida, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_KanbanSugerirEmpaqueAsync(ByVal prmOrdenKanban As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_KanbanSugerirEmpaqueOperationCompleted Is Nothing) Then
                Me.WM_KanbanSugerirEmpaqueOperationCompleted = AddressOf Me.OnWM_KanbanSugerirEmpaqueOperationCompleted
            End If
            Me.InvokeAsync("WM_KanbanSugerirEmpaque", New Object() {prmOrdenKanban, prmPartida, prmEstacion, prmUsuario}, Me.WM_KanbanSugerirEmpaqueOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_KanbanSugerirEmpaqueOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_KanbanSugerirEmpaqueCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_KanbanSugerirEmpaqueCompleted(Me, New WM_KanbanSugerirEmpaqueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_KanbanSurtirPallet", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_KanbanSurtirPallet(ByVal prmOrdenKanban As String, ByVal prmPartida As String, ByVal prmCodigoPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_KanbanSurtirPallet", New Object() {prmOrdenKanban, prmPartida, prmCodigoPallet, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_KanbanSurtirPalletAsync(ByVal prmOrdenKanban As String, ByVal prmPartida As String, ByVal prmCodigoPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_KanbanSurtirPalletAsync(prmOrdenKanban, prmPartida, prmCodigoPallet, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_KanbanSurtirPalletAsync(ByVal prmOrdenKanban As String, ByVal prmPartida As String, ByVal prmCodigoPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_KanbanSurtirPalletOperationCompleted Is Nothing) Then
                Me.WM_KanbanSurtirPalletOperationCompleted = AddressOf Me.OnWM_KanbanSurtirPalletOperationCompleted
            End If
            Me.InvokeAsync("WM_KanbanSurtirPallet", New Object() {prmOrdenKanban, prmPartida, prmCodigoPallet, prmEstacion, prmUsuario}, Me.WM_KanbanSurtirPalletOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_KanbanSurtirPalletOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_KanbanSurtirPalletCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_KanbanSurtirPalletCompleted(Me, New WM_KanbanSurtirPalletCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_KanbanSurtirEmpaque", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_KanbanSurtirEmpaque(ByVal prmOrdenSurtido As String, ByVal prmPartida As String, ByVal prmCodigoEmpaque As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_KanbanSurtirEmpaque", New Object() {prmOrdenSurtido, prmPartida, prmCodigoEmpaque, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_KanbanSurtirEmpaqueAsync(ByVal prmOrdenSurtido As String, ByVal prmPartida As String, ByVal prmCodigoEmpaque As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_KanbanSurtirEmpaqueAsync(prmOrdenSurtido, prmPartida, prmCodigoEmpaque, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_KanbanSurtirEmpaqueAsync(ByVal prmOrdenSurtido As String, ByVal prmPartida As String, ByVal prmCodigoEmpaque As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_KanbanSurtirEmpaqueOperationCompleted Is Nothing) Then
                Me.WM_KanbanSurtirEmpaqueOperationCompleted = AddressOf Me.OnWM_KanbanSurtirEmpaqueOperationCompleted
            End If
            Me.InvokeAsync("WM_KanbanSurtirEmpaque", New Object() {prmOrdenSurtido, prmPartida, prmCodigoEmpaque, prmEstacion, prmUsuario}, Me.WM_KanbanSurtirEmpaqueOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_KanbanSurtirEmpaqueOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_KanbanSurtirEmpaqueCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_KanbanSurtirEmpaqueCompleted(Me, New WM_KanbanSurtirEmpaqueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_KanbanSurtirPiezas", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_KanbanSurtirPiezas(ByVal prmOrdenSurtido As String, ByVal prmPartida As String, ByVal prmCodigoEmpaque As String, ByVal prmCantidadPiezas As Double, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_KanbanSurtirPiezas", New Object() {prmOrdenSurtido, prmPartida, prmCodigoEmpaque, prmCantidadPiezas, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_KanbanSurtirPiezasAsync(ByVal prmOrdenSurtido As String, ByVal prmPartida As String, ByVal prmCodigoEmpaque As String, ByVal prmCantidadPiezas As Double, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_KanbanSurtirPiezasAsync(prmOrdenSurtido, prmPartida, prmCodigoEmpaque, prmCantidadPiezas, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_KanbanSurtirPiezasAsync(ByVal prmOrdenSurtido As String, ByVal prmPartida As String, ByVal prmCodigoEmpaque As String, ByVal prmCantidadPiezas As Double, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_KanbanSurtirPiezasOperationCompleted Is Nothing) Then
                Me.WM_KanbanSurtirPiezasOperationCompleted = AddressOf Me.OnWM_KanbanSurtirPiezasOperationCompleted
            End If
            Me.InvokeAsync("WM_KanbanSurtirPiezas", New Object() {prmOrdenSurtido, prmPartida, prmCodigoEmpaque, prmCantidadPiezas, prmEstacion, prmUsuario}, Me.WM_KanbanSurtirPiezasOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_KanbanSurtirPiezasOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_KanbanSurtirPiezasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_KanbanSurtirPiezasCompleted(Me, New WM_KanbanSurtirPiezasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_KanbanConsultaPalletPKAbierto", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_KanbanConsultaPalletPKAbierto(ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_KanbanConsultaPalletPKAbierto", New Object() {prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_KanbanConsultaPalletPKAbiertoAsync(ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_KanbanConsultaPalletPKAbiertoAsync(prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_KanbanConsultaPalletPKAbiertoAsync(ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_KanbanConsultaPalletPKAbiertoOperationCompleted Is Nothing) Then
                Me.WM_KanbanConsultaPalletPKAbiertoOperationCompleted = AddressOf Me.OnWM_KanbanConsultaPalletPKAbiertoOperationCompleted
            End If
            Me.InvokeAsync("WM_KanbanConsultaPalletPKAbierto", New Object() {prmEstacion, prmUsuario}, Me.WM_KanbanConsultaPalletPKAbiertoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_KanbanConsultaPalletPKAbiertoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_KanbanConsultaPalletPKAbiertoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_KanbanConsultaPalletPKAbiertoCompleted(Me, New WM_KanbanConsultaPalletPKAbiertoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_KanbanCerrarPalletPK", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_KanbanCerrarPalletPK(ByVal prmOrdenSurtido As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_KanbanCerrarPalletPK", New Object() {prmOrdenSurtido, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_KanbanCerrarPalletPKAsync(ByVal prmOrdenSurtido As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_KanbanCerrarPalletPKAsync(prmOrdenSurtido, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_KanbanCerrarPalletPKAsync(ByVal prmOrdenSurtido As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_KanbanCerrarPalletPKOperationCompleted Is Nothing) Then
                Me.WM_KanbanCerrarPalletPKOperationCompleted = AddressOf Me.OnWM_KanbanCerrarPalletPKOperationCompleted
            End If
            Me.InvokeAsync("WM_KanbanCerrarPalletPK", New Object() {prmOrdenSurtido, prmEstacion, prmUsuario}, Me.WM_KanbanCerrarPalletPKOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_KanbanCerrarPalletPKOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_KanbanCerrarPalletPKCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_KanbanCerrarPalletPKCompleted(Me, New WM_KanbanCerrarPalletPKCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_KBListarPartidasAValidar", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_KBListarPartidasAValidar(ByVal prmIdOS As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_KBListarPartidasAValidar", New Object() {prmIdOS, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_KBListarPartidasAValidarAsync(ByVal prmIdOS As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_KBListarPartidasAValidarAsync(prmIdOS, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_KBListarPartidasAValidarAsync(ByVal prmIdOS As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_KBListarPartidasAValidarOperationCompleted Is Nothing) Then
                Me.WM_KBListarPartidasAValidarOperationCompleted = AddressOf Me.OnWM_KBListarPartidasAValidarOperationCompleted
            End If
            Me.InvokeAsync("WM_KBListarPartidasAValidar", New Object() {prmIdOS, prmEstacion, prmUsuario}, Me.WM_KBListarPartidasAValidarOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_KBListarPartidasAValidarOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_KBListarPartidasAValidarCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_KBListarPartidasAValidarCompleted(Me, New WM_KBListarPartidasAValidarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_KBConsultarPalletAValidar", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_KBConsultarPalletAValidar(ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_KBConsultarPalletAValidar", New Object() {prmPallet, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_KBConsultarPalletAValidarAsync(ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_KBConsultarPalletAValidarAsync(prmPallet, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_KBConsultarPalletAValidarAsync(ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_KBConsultarPalletAValidarOperationCompleted Is Nothing) Then
                Me.WM_KBConsultarPalletAValidarOperationCompleted = AddressOf Me.OnWM_KBConsultarPalletAValidarOperationCompleted
            End If
            Me.InvokeAsync("WM_KBConsultarPalletAValidar", New Object() {prmPallet, prmEstacion, prmUsuario}, Me.WM_KBConsultarPalletAValidarOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_KBConsultarPalletAValidarOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_KBConsultarPalletAValidarCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_KBConsultarPalletAValidarCompleted(Me, New WM_KBConsultarPalletAValidarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_KBRegistrarPalletLineaValidado", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_KBRegistrarPalletLineaValidado(ByVal prmOS As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_KBRegistrarPalletLineaValidado", New Object() {prmOS, prmPallet, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_KBRegistrarPalletLineaValidadoAsync(ByVal prmOS As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_KBRegistrarPalletLineaValidadoAsync(prmOS, prmPallet, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_KBRegistrarPalletLineaValidadoAsync(ByVal prmOS As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_KBRegistrarPalletLineaValidadoOperationCompleted Is Nothing) Then
                Me.WM_KBRegistrarPalletLineaValidadoOperationCompleted = AddressOf Me.OnWM_KBRegistrarPalletLineaValidadoOperationCompleted
            End If
            Me.InvokeAsync("WM_KBRegistrarPalletLineaValidado", New Object() {prmOS, prmPallet, prmEstacion, prmUsuario}, Me.WM_KBRegistrarPalletLineaValidadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_KBRegistrarPalletLineaValidadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_KBRegistrarPalletLineaValidadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_KBRegistrarPalletLineaValidadoCompleted(Me, New WM_KBRegistrarPalletLineaValidadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_KBRegistrarEmpaqueLineaRechazado", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_KBRegistrarEmpaqueLineaRechazado(ByVal prmOS As String, ByVal prmEmpaque As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_KBRegistrarEmpaqueLineaRechazado", New Object() {prmOS, prmEmpaque, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_KBRegistrarEmpaqueLineaRechazadoAsync(ByVal prmOS As String, ByVal prmEmpaque As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_KBRegistrarEmpaqueLineaRechazadoAsync(prmOS, prmEmpaque, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_KBRegistrarEmpaqueLineaRechazadoAsync(ByVal prmOS As String, ByVal prmEmpaque As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_KBRegistrarEmpaqueLineaRechazadoOperationCompleted Is Nothing) Then
                Me.WM_KBRegistrarEmpaqueLineaRechazadoOperationCompleted = AddressOf Me.OnWM_KBRegistrarEmpaqueLineaRechazadoOperationCompleted
            End If
            Me.InvokeAsync("WM_KBRegistrarEmpaqueLineaRechazado", New Object() {prmOS, prmEmpaque, prmEstacion, prmUsuario}, Me.WM_KBRegistrarEmpaqueLineaRechazadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_KBRegistrarEmpaqueLineaRechazadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_KBRegistrarEmpaqueLineaRechazadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_KBRegistrarEmpaqueLineaRechazadoCompleted(Me, New WM_KBRegistrarEmpaqueLineaRechazadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_KBRegistrarPalletLineaRechazado", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_KBRegistrarPalletLineaRechazado(ByVal prmOS As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_KBRegistrarPalletLineaRechazado", New Object() {prmOS, prmPallet, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_KBRegistrarPalletLineaRechazadoAsync(ByVal prmOS As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_KBRegistrarPalletLineaRechazadoAsync(prmOS, prmPallet, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_KBRegistrarPalletLineaRechazadoAsync(ByVal prmOS As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_KBRegistrarPalletLineaRechazadoOperationCompleted Is Nothing) Then
                Me.WM_KBRegistrarPalletLineaRechazadoOperationCompleted = AddressOf Me.OnWM_KBRegistrarPalletLineaRechazadoOperationCompleted
            End If
            Me.InvokeAsync("WM_KBRegistrarPalletLineaRechazado", New Object() {prmOS, prmPallet, prmEstacion, prmUsuario}, Me.WM_KBRegistrarPalletLineaRechazadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_KBRegistrarPalletLineaRechazadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_KBRegistrarPalletLineaRechazadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_KBRegistrarPalletLineaRechazadoCompleted(Me, New WM_KBRegistrarPalletLineaRechazadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_KBRegistrarPalletAndenValidado", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_KBRegistrarPalletAndenValidado(ByVal prmOS As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_KBRegistrarPalletAndenValidado", New Object() {prmOS, prmPallet, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_KBRegistrarPalletAndenValidadoAsync(ByVal prmOS As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_KBRegistrarPalletAndenValidadoAsync(prmOS, prmPallet, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_KBRegistrarPalletAndenValidadoAsync(ByVal prmOS As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_KBRegistrarPalletAndenValidadoOperationCompleted Is Nothing) Then
                Me.WM_KBRegistrarPalletAndenValidadoOperationCompleted = AddressOf Me.OnWM_KBRegistrarPalletAndenValidadoOperationCompleted
            End If
            Me.InvokeAsync("WM_KBRegistrarPalletAndenValidado", New Object() {prmOS, prmPallet, prmEstacion, prmUsuario}, Me.WM_KBRegistrarPalletAndenValidadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_KBRegistrarPalletAndenValidadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_KBRegistrarPalletAndenValidadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_KBRegistrarPalletAndenValidadoCompleted(Me, New WM_KBRegistrarPalletAndenValidadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_KBRegistrarEmpaqueAndenRechazado", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_KBRegistrarEmpaqueAndenRechazado(ByVal prmOS As String, ByVal prmEmpaque As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_KBRegistrarEmpaqueAndenRechazado", New Object() {prmOS, prmEmpaque, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_KBRegistrarEmpaqueAndenRechazadoAsync(ByVal prmOS As String, ByVal prmEmpaque As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_KBRegistrarEmpaqueAndenRechazadoAsync(prmOS, prmEmpaque, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_KBRegistrarEmpaqueAndenRechazadoAsync(ByVal prmOS As String, ByVal prmEmpaque As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_KBRegistrarEmpaqueAndenRechazadoOperationCompleted Is Nothing) Then
                Me.WM_KBRegistrarEmpaqueAndenRechazadoOperationCompleted = AddressOf Me.OnWM_KBRegistrarEmpaqueAndenRechazadoOperationCompleted
            End If
            Me.InvokeAsync("WM_KBRegistrarEmpaqueAndenRechazado", New Object() {prmOS, prmEmpaque, prmEstacion, prmUsuario}, Me.WM_KBRegistrarEmpaqueAndenRechazadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_KBRegistrarEmpaqueAndenRechazadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_KBRegistrarEmpaqueAndenRechazadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_KBRegistrarEmpaqueAndenRechazadoCompleted(Me, New WM_KBRegistrarEmpaqueAndenRechazadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_KBRegistrarPalletAndenRechazado", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_KBRegistrarPalletAndenRechazado(ByVal prmOS As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_KBRegistrarPalletAndenRechazado", New Object() {prmOS, prmPallet, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_KBRegistrarPalletAndenRechazadoAsync(ByVal prmOS As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_KBRegistrarPalletAndenRechazadoAsync(prmOS, prmPallet, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_KBRegistrarPalletAndenRechazadoAsync(ByVal prmOS As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_KBRegistrarPalletAndenRechazadoOperationCompleted Is Nothing) Then
                Me.WM_KBRegistrarPalletAndenRechazadoOperationCompleted = AddressOf Me.OnWM_KBRegistrarPalletAndenRechazadoOperationCompleted
            End If
            Me.InvokeAsync("WM_KBRegistrarPalletAndenRechazado", New Object() {prmOS, prmPallet, prmEstacion, prmUsuario}, Me.WM_KBRegistrarPalletAndenRechazadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_KBRegistrarPalletAndenRechazadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_KBRegistrarPalletAndenRechazadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_KBRegistrarPalletAndenRechazadoCompleted(Me, New WM_KBRegistrarPalletAndenRechazadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_KBListarPalletsAEntregar", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_KBListarPalletsAEntregar(ByVal prmIdOK As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_KBListarPalletsAEntregar", New Object() {prmIdOK, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_KBListarPalletsAEntregarAsync(ByVal prmIdOK As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_KBListarPalletsAEntregarAsync(prmIdOK, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_KBListarPalletsAEntregarAsync(ByVal prmIdOK As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_KBListarPalletsAEntregarOperationCompleted Is Nothing) Then
                Me.WM_KBListarPalletsAEntregarOperationCompleted = AddressOf Me.OnWM_KBListarPalletsAEntregarOperationCompleted
            End If
            Me.InvokeAsync("WM_KBListarPalletsAEntregar", New Object() {prmIdOK, prmEstacion, prmUsuario}, Me.WM_KBListarPalletsAEntregarOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_KBListarPalletsAEntregarOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_KBListarPalletsAEntregarCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_KBListarPalletsAEntregarCompleted(Me, New WM_KBListarPalletsAEntregarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_KBRegistrarPalletEntregado", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_KBRegistrarPalletEntregado(ByVal prmOS As String, ByVal prmPallet As String, ByVal prmLinea As String, ByVal prmUsuarioEntrega As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_KBRegistrarPalletEntregado", New Object() {prmOS, prmPallet, prmLinea, prmUsuarioEntrega, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_KBRegistrarPalletEntregadoAsync(ByVal prmOS As String, ByVal prmPallet As String, ByVal prmLinea As String, ByVal prmUsuarioEntrega As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_KBRegistrarPalletEntregadoAsync(prmOS, prmPallet, prmLinea, prmUsuarioEntrega, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_KBRegistrarPalletEntregadoAsync(ByVal prmOS As String, ByVal prmPallet As String, ByVal prmLinea As String, ByVal prmUsuarioEntrega As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_KBRegistrarPalletEntregadoOperationCompleted Is Nothing) Then
                Me.WM_KBRegistrarPalletEntregadoOperationCompleted = AddressOf Me.OnWM_KBRegistrarPalletEntregadoOperationCompleted
            End If
            Me.InvokeAsync("WM_KBRegistrarPalletEntregado", New Object() {prmOS, prmPallet, prmLinea, prmUsuarioEntrega, prmEstacion, prmUsuario}, Me.WM_KBRegistrarPalletEntregadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_KBRegistrarPalletEntregadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_KBRegistrarPalletEntregadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_KBRegistrarPalletEntregadoCompleted(Me, New WM_KBRegistrarPalletEntregadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_KBRegistraRecibePalletP2", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_KBRegistraRecibePalletP2(ByVal prmOS As String, ByVal prmPallet As String, ByVal prmLinea As String, ByVal prmUsuarioEntrega As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_KBRegistraRecibePalletP2", New Object() {prmOS, prmPallet, prmLinea, prmUsuarioEntrega, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_KBRegistraRecibePalletP2Async(ByVal prmOS As String, ByVal prmPallet As String, ByVal prmLinea As String, ByVal prmUsuarioEntrega As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_KBRegistraRecibePalletP2Async(prmOS, prmPallet, prmLinea, prmUsuarioEntrega, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_KBRegistraRecibePalletP2Async(ByVal prmOS As String, ByVal prmPallet As String, ByVal prmLinea As String, ByVal prmUsuarioEntrega As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_KBRegistraRecibePalletP2OperationCompleted Is Nothing) Then
                Me.WM_KBRegistraRecibePalletP2OperationCompleted = AddressOf Me.OnWM_KBRegistraRecibePalletP2OperationCompleted
            End If
            Me.InvokeAsync("WM_KBRegistraRecibePalletP2", New Object() {prmOS, prmPallet, prmLinea, prmUsuarioEntrega, prmEstacion, prmUsuario}, Me.WM_KBRegistraRecibePalletP2OperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_KBRegistraRecibePalletP2OperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_KBRegistraRecibePalletP2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_KBRegistraRecibePalletP2Completed(Me, New WM_KBRegistraRecibePalletP2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_KBRegistraEntregaAnden", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_KBRegistraEntregaAnden(ByVal prmPallet As String, ByVal prmAnden As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_KBRegistraEntregaAnden", New Object() {prmPallet, prmAnden, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_KBRegistraEntregaAndenAsync(ByVal prmPallet As String, ByVal prmAnden As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_KBRegistraEntregaAndenAsync(prmPallet, prmAnden, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_KBRegistraEntregaAndenAsync(ByVal prmPallet As String, ByVal prmAnden As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_KBRegistraEntregaAndenOperationCompleted Is Nothing) Then
                Me.WM_KBRegistraEntregaAndenOperationCompleted = AddressOf Me.OnWM_KBRegistraEntregaAndenOperationCompleted
            End If
            Me.InvokeAsync("WM_KBRegistraEntregaAnden", New Object() {prmPallet, prmAnden, prmEstacion, prmUsuario}, Me.WM_KBRegistraEntregaAndenOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_KBRegistraEntregaAndenOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_KBRegistraEntregaAndenCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_KBRegistraEntregaAndenCompleted(Me, New WM_KBRegistraEntregaAndenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_KBRegistraEmbarqueAnden", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_KBRegistraEmbarqueAnden(ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_KBRegistraEmbarqueAnden", New Object() {prmPallet, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_KBRegistraEmbarqueAndenAsync(ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_KBRegistraEmbarqueAndenAsync(prmPallet, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_KBRegistraEmbarqueAndenAsync(ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_KBRegistraEmbarqueAndenOperationCompleted Is Nothing) Then
                Me.WM_KBRegistraEmbarqueAndenOperationCompleted = AddressOf Me.OnWM_KBRegistraEmbarqueAndenOperationCompleted
            End If
            Me.InvokeAsync("WM_KBRegistraEmbarqueAnden", New Object() {prmPallet, prmEstacion, prmUsuario}, Me.WM_KBRegistraEmbarqueAndenOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_KBRegistraEmbarqueAndenOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_KBRegistraEmbarqueAndenCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_KBRegistraEmbarqueAndenCompleted(Me, New WM_KBRegistraEmbarqueAndenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ListarOrdenesRecepcionLiberadas", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ListarOrdenesRecepcionLiberadas(ByVal prmOrdenCompra As String, ByVal prmEstacion As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ListarOrdenesRecepcionLiberadas", New Object() {prmOrdenCompra, prmEstacion})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ListarOrdenesRecepcionLiberadasAsync(ByVal prmOrdenCompra As String, ByVal prmEstacion As String)
            Me.WM_ListarOrdenesRecepcionLiberadasAsync(prmOrdenCompra, prmEstacion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ListarOrdenesRecepcionLiberadasAsync(ByVal prmOrdenCompra As String, ByVal prmEstacion As String, ByVal userState As Object)
            If (Me.WM_ListarOrdenesRecepcionLiberadasOperationCompleted Is Nothing) Then
                Me.WM_ListarOrdenesRecepcionLiberadasOperationCompleted = AddressOf Me.OnWM_ListarOrdenesRecepcionLiberadasOperationCompleted
            End If
            Me.InvokeAsync("WM_ListarOrdenesRecepcionLiberadas", New Object() {prmOrdenCompra, prmEstacion}, Me.WM_ListarOrdenesRecepcionLiberadasOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ListarOrdenesRecepcionLiberadasOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ListarOrdenesRecepcionLiberadasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ListarOrdenesRecepcionLiberadasCompleted(Me, New WM_ListarOrdenesRecepcionLiberadasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ListarPartidasORLiberadas", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ListarPartidasORLiberadas(ByVal prmOrdenRecepcion As String, ByVal prmEstacion As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ListarPartidasORLiberadas", New Object() {prmOrdenRecepcion, prmEstacion})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ListarPartidasORLiberadasAsync(ByVal prmOrdenRecepcion As String, ByVal prmEstacion As String)
            Me.WM_ListarPartidasORLiberadasAsync(prmOrdenRecepcion, prmEstacion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ListarPartidasORLiberadasAsync(ByVal prmOrdenRecepcion As String, ByVal prmEstacion As String, ByVal userState As Object)
            If (Me.WM_ListarPartidasORLiberadasOperationCompleted Is Nothing) Then
                Me.WM_ListarPartidasORLiberadasOperationCompleted = AddressOf Me.OnWM_ListarPartidasORLiberadasOperationCompleted
            End If
            Me.InvokeAsync("WM_ListarPartidasORLiberadas", New Object() {prmOrdenRecepcion, prmEstacion}, Me.WM_ListarPartidasORLiberadasOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ListarPartidasORLiberadasOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ListarPartidasORLiberadasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ListarPartidasORLiberadasCompleted(Me, New WM_ListarPartidasORLiberadasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ListarOrdenesRecepcionRecibidas", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ListarOrdenesRecepcionRecibidas(ByVal prmOrdenCompra As String, ByVal prmEstacion As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ListarOrdenesRecepcionRecibidas", New Object() {prmOrdenCompra, prmEstacion})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ListarOrdenesRecepcionRecibidasAsync(ByVal prmOrdenCompra As String, ByVal prmEstacion As String)
            Me.WM_ListarOrdenesRecepcionRecibidasAsync(prmOrdenCompra, prmEstacion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ListarOrdenesRecepcionRecibidasAsync(ByVal prmOrdenCompra As String, ByVal prmEstacion As String, ByVal userState As Object)
            If (Me.WM_ListarOrdenesRecepcionRecibidasOperationCompleted Is Nothing) Then
                Me.WM_ListarOrdenesRecepcionRecibidasOperationCompleted = AddressOf Me.OnWM_ListarOrdenesRecepcionRecibidasOperationCompleted
            End If
            Me.InvokeAsync("WM_ListarOrdenesRecepcionRecibidas", New Object() {prmOrdenCompra, prmEstacion}, Me.WM_ListarOrdenesRecepcionRecibidasOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ListarOrdenesRecepcionRecibidasOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ListarOrdenesRecepcionRecibidasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ListarOrdenesRecepcionRecibidasCompleted(Me, New WM_ListarOrdenesRecepcionRecibidasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultarEmpaque", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultarEmpaque(ByVal prmEmpaque As String) As CEmpaque
            Dim results() As Object = Me.Invoke("WM_ConsultarEmpaque", New Object() {prmEmpaque})
            Return CType(results(0),CEmpaque)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultarEmpaqueAsync(ByVal prmEmpaque As String)
            Me.WM_ConsultarEmpaqueAsync(prmEmpaque, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultarEmpaqueAsync(ByVal prmEmpaque As String, ByVal userState As Object)
            If (Me.WM_ConsultarEmpaqueOperationCompleted Is Nothing) Then
                Me.WM_ConsultarEmpaqueOperationCompleted = AddressOf Me.OnWM_ConsultarEmpaqueOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultarEmpaque", New Object() {prmEmpaque}, Me.WM_ConsultarEmpaqueOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultarEmpaqueOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultarEmpaqueCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultarEmpaqueCompleted(Me, New WM_ConsultarEmpaqueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaEmpaque", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaEmpaque(ByVal prmCodigoEmpaque As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaEmpaque", New Object() {prmCodigoEmpaque, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaEmpaqueAsync(ByVal prmCodigoEmpaque As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaEmpaqueAsync(prmCodigoEmpaque, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaEmpaqueAsync(ByVal prmCodigoEmpaque As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaEmpaqueOperationCompleted Is Nothing) Then
                Me.WM_ConsultaEmpaqueOperationCompleted = AddressOf Me.OnWM_ConsultaEmpaqueOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaEmpaque", New Object() {prmCodigoEmpaque, prmEstacion, prmUsuario}, Me.WM_ConsultaEmpaqueOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaEmpaqueOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaEmpaqueCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaEmpaqueCompleted(Me, New WM_ConsultaEmpaqueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaEmpaqueMP", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaEmpaqueMP(ByVal prmCodigoEmpaque As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaEmpaqueMP", New Object() {prmCodigoEmpaque, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaEmpaqueMPAsync(ByVal prmCodigoEmpaque As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaEmpaqueMPAsync(prmCodigoEmpaque, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaEmpaqueMPAsync(ByVal prmCodigoEmpaque As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaEmpaqueMPOperationCompleted Is Nothing) Then
                Me.WM_ConsultaEmpaqueMPOperationCompleted = AddressOf Me.OnWM_ConsultaEmpaqueMPOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaEmpaqueMP", New Object() {prmCodigoEmpaque, prmEstacion, prmUsuario}, Me.WM_ConsultaEmpaqueMPOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaEmpaqueMPOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaEmpaqueMPCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaEmpaqueMPCompleted(Me, New WM_ConsultaEmpaqueMPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaEmpaqueReabastece", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaEmpaqueReabastece(ByVal prmDocumento As String, ByVal prmCodigoEmpaque As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaEmpaqueReabastece", New Object() {prmDocumento, prmCodigoEmpaque, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaEmpaqueReabasteceAsync(ByVal prmDocumento As String, ByVal prmCodigoEmpaque As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaEmpaqueReabasteceAsync(prmDocumento, prmCodigoEmpaque, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaEmpaqueReabasteceAsync(ByVal prmDocumento As String, ByVal prmCodigoEmpaque As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaEmpaqueReabasteceOperationCompleted Is Nothing) Then
                Me.WM_ConsultaEmpaqueReabasteceOperationCompleted = AddressOf Me.OnWM_ConsultaEmpaqueReabasteceOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaEmpaqueReabastece", New Object() {prmDocumento, prmCodigoEmpaque, prmEstacion, prmUsuario}, Me.WM_ConsultaEmpaqueReabasteceOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaEmpaqueReabasteceOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaEmpaqueReabasteceCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaEmpaqueReabasteceCompleted(Me, New WM_ConsultaEmpaqueReabasteceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_BajaPiezasSA", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_BajaPiezasSA(ByVal prmCodigoEmpaque As String, ByVal prmAlmacen As String, ByVal prmCantidad As Double, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_BajaPiezasSA", New Object() {prmCodigoEmpaque, prmAlmacen, prmCantidad, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_BajaPiezasSAAsync(ByVal prmCodigoEmpaque As String, ByVal prmAlmacen As String, ByVal prmCantidad As Double, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_BajaPiezasSAAsync(prmCodigoEmpaque, prmAlmacen, prmCantidad, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_BajaPiezasSAAsync(ByVal prmCodigoEmpaque As String, ByVal prmAlmacen As String, ByVal prmCantidad As Double, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_BajaPiezasSAOperationCompleted Is Nothing) Then
                Me.WM_BajaPiezasSAOperationCompleted = AddressOf Me.OnWM_BajaPiezasSAOperationCompleted
            End If
            Me.InvokeAsync("WM_BajaPiezasSA", New Object() {prmCodigoEmpaque, prmAlmacen, prmCantidad, prmEstacion, prmUsuario}, Me.WM_BajaPiezasSAOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_BajaPiezasSAOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_BajaPiezasSACompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_BajaPiezasSACompleted(Me, New WM_BajaPiezasSACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_BajaEmpaqueSA", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_BajaEmpaqueSA(ByVal prmCodigoEmpaque As String, ByVal prmAlmacen As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_BajaEmpaqueSA", New Object() {prmCodigoEmpaque, prmAlmacen, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_BajaEmpaqueSAAsync(ByVal prmCodigoEmpaque As String, ByVal prmAlmacen As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_BajaEmpaqueSAAsync(prmCodigoEmpaque, prmAlmacen, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_BajaEmpaqueSAAsync(ByVal prmCodigoEmpaque As String, ByVal prmAlmacen As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_BajaEmpaqueSAOperationCompleted Is Nothing) Then
                Me.WM_BajaEmpaqueSAOperationCompleted = AddressOf Me.OnWM_BajaEmpaqueSAOperationCompleted
            End If
            Me.InvokeAsync("WM_BajaEmpaqueSA", New Object() {prmCodigoEmpaque, prmAlmacen, prmEstacion, prmUsuario}, Me.WM_BajaEmpaqueSAOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_BajaEmpaqueSAOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_BajaEmpaqueSACompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_BajaEmpaqueSACompleted(Me, New WM_BajaEmpaqueSACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_BajaPalletSA", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_BajaPalletSA(ByVal prmCodigoPallet As String, ByVal prmAlmacen As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_BajaPalletSA", New Object() {prmCodigoPallet, prmAlmacen, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_BajaPalletSAAsync(ByVal prmCodigoPallet As String, ByVal prmAlmacen As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_BajaPalletSAAsync(prmCodigoPallet, prmAlmacen, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_BajaPalletSAAsync(ByVal prmCodigoPallet As String, ByVal prmAlmacen As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_BajaPalletSAOperationCompleted Is Nothing) Then
                Me.WM_BajaPalletSAOperationCompleted = AddressOf Me.OnWM_BajaPalletSAOperationCompleted
            End If
            Me.InvokeAsync("WM_BajaPalletSA", New Object() {prmCodigoPallet, prmAlmacen, prmEstacion, prmUsuario}, Me.WM_BajaPalletSAOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_BajaPalletSAOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_BajaPalletSACompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_BajaPalletSACompleted(Me, New WM_BajaPalletSACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_RegistraEmpaqueSA", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_RegistraEmpaqueSA(ByVal prmCodigoEmpaque As String, ByVal prmNumParte As String, ByVal prmCantidad As Double, ByVal prmLote As String, ByVal prmFechaCaducidad As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_RegistraEmpaqueSA", New Object() {prmCodigoEmpaque, prmNumParte, prmCantidad, prmLote, prmFechaCaducidad, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_RegistraEmpaqueSAAsync(ByVal prmCodigoEmpaque As String, ByVal prmNumParte As String, ByVal prmCantidad As Double, ByVal prmLote As String, ByVal prmFechaCaducidad As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_RegistraEmpaqueSAAsync(prmCodigoEmpaque, prmNumParte, prmCantidad, prmLote, prmFechaCaducidad, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_RegistraEmpaqueSAAsync(ByVal prmCodigoEmpaque As String, ByVal prmNumParte As String, ByVal prmCantidad As Double, ByVal prmLote As String, ByVal prmFechaCaducidad As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_RegistraEmpaqueSAOperationCompleted Is Nothing) Then
                Me.WM_RegistraEmpaqueSAOperationCompleted = AddressOf Me.OnWM_RegistraEmpaqueSAOperationCompleted
            End If
            Me.InvokeAsync("WM_RegistraEmpaqueSA", New Object() {prmCodigoEmpaque, prmNumParte, prmCantidad, prmLote, prmFechaCaducidad, prmEstacion, prmUsuario}, Me.WM_RegistraEmpaqueSAOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_RegistraEmpaqueSAOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_RegistraEmpaqueSACompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_RegistraEmpaqueSACompleted(Me, New WM_RegistraEmpaqueSACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_RegistraEmpaqueKanbanSA", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_RegistraEmpaqueKanbanSA(ByVal prmPalletKanban As String, ByVal prmCodigoEmpaque As String, ByVal prmNumParte As String, ByVal prmCantidad As Double, ByVal prmRevision As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_RegistraEmpaqueKanbanSA", New Object() {prmPalletKanban, prmCodigoEmpaque, prmNumParte, prmCantidad, prmRevision, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_RegistraEmpaqueKanbanSAAsync(ByVal prmPalletKanban As String, ByVal prmCodigoEmpaque As String, ByVal prmNumParte As String, ByVal prmCantidad As Double, ByVal prmRevision As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_RegistraEmpaqueKanbanSAAsync(prmPalletKanban, prmCodigoEmpaque, prmNumParte, prmCantidad, prmRevision, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_RegistraEmpaqueKanbanSAAsync(ByVal prmPalletKanban As String, ByVal prmCodigoEmpaque As String, ByVal prmNumParte As String, ByVal prmCantidad As Double, ByVal prmRevision As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_RegistraEmpaqueKanbanSAOperationCompleted Is Nothing) Then
                Me.WM_RegistraEmpaqueKanbanSAOperationCompleted = AddressOf Me.OnWM_RegistraEmpaqueKanbanSAOperationCompleted
            End If
            Me.InvokeAsync("WM_RegistraEmpaqueKanbanSA", New Object() {prmPalletKanban, prmCodigoEmpaque, prmNumParte, prmCantidad, prmRevision, prmEstacion, prmUsuario}, Me.WM_RegistraEmpaqueKanbanSAOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_RegistraEmpaqueKanbanSAOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_RegistraEmpaqueKanbanSACompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_RegistraEmpaqueKanbanSACompleted(Me, New WM_RegistraEmpaqueKanbanSACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_CierraPalletSA", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_CierraPalletSA(ByVal prmCodigoEmpaque As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_CierraPalletSA", New Object() {prmCodigoEmpaque, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_CierraPalletSAAsync(ByVal prmCodigoEmpaque As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_CierraPalletSAAsync(prmCodigoEmpaque, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_CierraPalletSAAsync(ByVal prmCodigoEmpaque As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_CierraPalletSAOperationCompleted Is Nothing) Then
                Me.WM_CierraPalletSAOperationCompleted = AddressOf Me.OnWM_CierraPalletSAOperationCompleted
            End If
            Me.InvokeAsync("WM_CierraPalletSA", New Object() {prmCodigoEmpaque, prmEstacion, prmUsuario}, Me.WM_CierraPalletSAOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_CierraPalletSAOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_CierraPalletSACompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_CierraPalletSACompleted(Me, New WM_CierraPalletSACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_CancelaPalletSA", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_CancelaPalletSA(ByVal prmCodigoPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_CancelaPalletSA", New Object() {prmCodigoPallet, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_CancelaPalletSAAsync(ByVal prmCodigoPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_CancelaPalletSAAsync(prmCodigoPallet, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_CancelaPalletSAAsync(ByVal prmCodigoPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_CancelaPalletSAOperationCompleted Is Nothing) Then
                Me.WM_CancelaPalletSAOperationCompleted = AddressOf Me.OnWM_CancelaPalletSAOperationCompleted
            End If
            Me.InvokeAsync("WM_CancelaPalletSA", New Object() {prmCodigoPallet, prmEstacion, prmUsuario}, Me.WM_CancelaPalletSAOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_CancelaPalletSAOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_CancelaPalletSACompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_CancelaPalletSACompleted(Me, New WM_CancelaPalletSACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultarPalletAbiertoSinAfecta", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultarPalletAbiertoSinAfecta(ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultarPalletAbiertoSinAfecta", New Object() {prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultarPalletAbiertoSinAfectaAsync(ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultarPalletAbiertoSinAfectaAsync(prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultarPalletAbiertoSinAfectaAsync(ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultarPalletAbiertoSinAfectaOperationCompleted Is Nothing) Then
                Me.WM_ConsultarPalletAbiertoSinAfectaOperationCompleted = AddressOf Me.OnWM_ConsultarPalletAbiertoSinAfectaOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultarPalletAbiertoSinAfecta", New Object() {prmEstacion, prmUsuario}, Me.WM_ConsultarPalletAbiertoSinAfectaOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultarPalletAbiertoSinAfectaOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultarPalletAbiertoSinAfectaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultarPalletAbiertoSinAfectaCompleted(Me, New WM_ConsultarPalletAbiertoSinAfectaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaExisteNumParte", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaExisteNumParte(ByVal prmNumParte As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaExisteNumParte", New Object() {prmNumParte, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaExisteNumParteAsync(ByVal prmNumParte As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaExisteNumParteAsync(prmNumParte, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaExisteNumParteAsync(ByVal prmNumParte As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaExisteNumParteOperationCompleted Is Nothing) Then
                Me.WM_ConsultaExisteNumParteOperationCompleted = AddressOf Me.OnWM_ConsultaExisteNumParteOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaExisteNumParte", New Object() {prmNumParte, prmEstacion, prmUsuario}, Me.WM_ConsultaExisteNumParteOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaExisteNumParteOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaExisteNumParteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaExisteNumParteCompleted(Me, New WM_ConsultaExisteNumParteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaAlmacen", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaAlmacen(ByVal prmPlanta As String, ByVal prmAlmacen As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaAlmacen", New Object() {prmPlanta, prmAlmacen, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaAlmacenAsync(ByVal prmPlanta As String, ByVal prmAlmacen As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaAlmacenAsync(prmPlanta, prmAlmacen, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaAlmacenAsync(ByVal prmPlanta As String, ByVal prmAlmacen As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaAlmacenOperationCompleted Is Nothing) Then
                Me.WM_ConsultaAlmacenOperationCompleted = AddressOf Me.OnWM_ConsultaAlmacenOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaAlmacen", New Object() {prmPlanta, prmAlmacen, prmEstacion, prmUsuario}, Me.WM_ConsultaAlmacenOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaAlmacenOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaAlmacenCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaAlmacenCompleted(Me, New WM_ConsultaAlmacenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ReimprimeEmpaquePT", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ReimprimeEmpaquePT(ByVal prmEmpaque As String, ByVal prmImpresora As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ReimprimeEmpaquePT", New Object() {prmEmpaque, prmImpresora})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ReimprimeEmpaquePTAsync(ByVal prmEmpaque As String, ByVal prmImpresora As String)
            Me.WM_ReimprimeEmpaquePTAsync(prmEmpaque, prmImpresora, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ReimprimeEmpaquePTAsync(ByVal prmEmpaque As String, ByVal prmImpresora As String, ByVal userState As Object)
            If (Me.WM_ReimprimeEmpaquePTOperationCompleted Is Nothing) Then
                Me.WM_ReimprimeEmpaquePTOperationCompleted = AddressOf Me.OnWM_ReimprimeEmpaquePTOperationCompleted
            End If
            Me.InvokeAsync("WM_ReimprimeEmpaquePT", New Object() {prmEmpaque, prmImpresora}, Me.WM_ReimprimeEmpaquePTOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ReimprimeEmpaquePTOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ReimprimeEmpaquePTCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ReimprimeEmpaquePTCompleted(Me, New WM_ReimprimeEmpaquePTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ImprimeEtiquetaEmpaquesPallet", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ImprimeEtiquetaEmpaquesPallet(ByVal prmPallet As String, ByVal prmImpresora As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ImprimeEtiquetaEmpaquesPallet", New Object() {prmPallet, prmImpresora, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ImprimeEtiquetaEmpaquesPalletAsync(ByVal prmPallet As String, ByVal prmImpresora As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ImprimeEtiquetaEmpaquesPalletAsync(prmPallet, prmImpresora, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ImprimeEtiquetaEmpaquesPalletAsync(ByVal prmPallet As String, ByVal prmImpresora As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ImprimeEtiquetaEmpaquesPalletOperationCompleted Is Nothing) Then
                Me.WM_ImprimeEtiquetaEmpaquesPalletOperationCompleted = AddressOf Me.OnWM_ImprimeEtiquetaEmpaquesPalletOperationCompleted
            End If
            Me.InvokeAsync("WM_ImprimeEtiquetaEmpaquesPallet", New Object() {prmPallet, prmImpresora, prmEstacion, prmUsuario}, Me.WM_ImprimeEtiquetaEmpaquesPalletOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ImprimeEtiquetaEmpaquesPalletOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ImprimeEtiquetaEmpaquesPalletCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ImprimeEtiquetaEmpaquesPalletCompleted(Me, New WM_ImprimeEtiquetaEmpaquesPalletCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_OCImprimeEtiquetas", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_OCImprimeEtiquetas(ByVal prmOrden As String, ByVal prmNumParte As String, ByVal prmCantidad As Double, ByVal prmEtiquetas As Integer, ByVal prmRevision As String, ByVal prmLote As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_OCImprimeEtiquetas", New Object() {prmOrden, prmNumParte, prmCantidad, prmEtiquetas, prmRevision, prmLote, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_OCImprimeEtiquetasAsync(ByVal prmOrden As String, ByVal prmNumParte As String, ByVal prmCantidad As Double, ByVal prmEtiquetas As Integer, ByVal prmRevision As String, ByVal prmLote As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_OCImprimeEtiquetasAsync(prmOrden, prmNumParte, prmCantidad, prmEtiquetas, prmRevision, prmLote, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_OCImprimeEtiquetasAsync(ByVal prmOrden As String, ByVal prmNumParte As String, ByVal prmCantidad As Double, ByVal prmEtiquetas As Integer, ByVal prmRevision As String, ByVal prmLote As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_OCImprimeEtiquetasOperationCompleted Is Nothing) Then
                Me.WM_OCImprimeEtiquetasOperationCompleted = AddressOf Me.OnWM_OCImprimeEtiquetasOperationCompleted
            End If
            Me.InvokeAsync("WM_OCImprimeEtiquetas", New Object() {prmOrden, prmNumParte, prmCantidad, prmEtiquetas, prmRevision, prmLote, prmEstacion, prmUsuario}, Me.WM_OCImprimeEtiquetasOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_OCImprimeEtiquetasOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_OCImprimeEtiquetasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_OCImprimeEtiquetasCompleted(Me, New WM_OCImprimeEtiquetasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ImprimeEtiquetasPallet", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ImprimeEtiquetasPallet(ByVal prmOrden As String, ByVal prmNumParte As String, ByVal prmCantidad As Double, ByVal prmEtiquetas As Integer, ByVal prmRevision As String, ByVal prmLote As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ImprimeEtiquetasPallet", New Object() {prmOrden, prmNumParte, prmCantidad, prmEtiquetas, prmRevision, prmLote, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ImprimeEtiquetasPalletAsync(ByVal prmOrden As String, ByVal prmNumParte As String, ByVal prmCantidad As Double, ByVal prmEtiquetas As Integer, ByVal prmRevision As String, ByVal prmLote As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ImprimeEtiquetasPalletAsync(prmOrden, prmNumParte, prmCantidad, prmEtiquetas, prmRevision, prmLote, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ImprimeEtiquetasPalletAsync(ByVal prmOrden As String, ByVal prmNumParte As String, ByVal prmCantidad As Double, ByVal prmEtiquetas As Integer, ByVal prmRevision As String, ByVal prmLote As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ImprimeEtiquetasPalletOperationCompleted Is Nothing) Then
                Me.WM_ImprimeEtiquetasPalletOperationCompleted = AddressOf Me.OnWM_ImprimeEtiquetasPalletOperationCompleted
            End If
            Me.InvokeAsync("WM_ImprimeEtiquetasPallet", New Object() {prmOrden, prmNumParte, prmCantidad, prmEtiquetas, prmRevision, prmLote, prmEstacion, prmUsuario}, Me.WM_ImprimeEtiquetasPalletOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ImprimeEtiquetasPalletOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ImprimeEtiquetasPalletCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ImprimeEtiquetasPalletCompleted(Me, New WM_ImprimeEtiquetasPalletCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ImprimeCredencialUsuario", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ImprimeCredencialUsuario(ByVal prmUsuario As String, ByVal prmPass As String, ByVal prmImpresora As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ImprimeCredencialUsuario", New Object() {prmUsuario, prmPass, prmImpresora})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ImprimeCredencialUsuarioAsync(ByVal prmUsuario As String, ByVal prmPass As String, ByVal prmImpresora As String)
            Me.WM_ImprimeCredencialUsuarioAsync(prmUsuario, prmPass, prmImpresora, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ImprimeCredencialUsuarioAsync(ByVal prmUsuario As String, ByVal prmPass As String, ByVal prmImpresora As String, ByVal userState As Object)
            If (Me.WM_ImprimeCredencialUsuarioOperationCompleted Is Nothing) Then
                Me.WM_ImprimeCredencialUsuarioOperationCompleted = AddressOf Me.OnWM_ImprimeCredencialUsuarioOperationCompleted
            End If
            Me.InvokeAsync("WM_ImprimeCredencialUsuario", New Object() {prmUsuario, prmPass, prmImpresora}, Me.WM_ImprimeCredencialUsuarioOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ImprimeCredencialUsuarioOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ImprimeCredencialUsuarioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ImprimeCredencialUsuarioCompleted(Me, New WM_ImprimeCredencialUsuarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ImprimeEtiquetaPosicion", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ImprimeEtiquetaPosicion(ByVal prmPosicion1 As String, ByVal prmPosicion2 As String, ByVal prmImpresora As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ImprimeEtiquetaPosicion", New Object() {prmPosicion1, prmPosicion2, prmImpresora})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ImprimeEtiquetaPosicionAsync(ByVal prmPosicion1 As String, ByVal prmPosicion2 As String, ByVal prmImpresora As String)
            Me.WM_ImprimeEtiquetaPosicionAsync(prmPosicion1, prmPosicion2, prmImpresora, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ImprimeEtiquetaPosicionAsync(ByVal prmPosicion1 As String, ByVal prmPosicion2 As String, ByVal prmImpresora As String, ByVal userState As Object)
            If (Me.WM_ImprimeEtiquetaPosicionOperationCompleted Is Nothing) Then
                Me.WM_ImprimeEtiquetaPosicionOperationCompleted = AddressOf Me.OnWM_ImprimeEtiquetaPosicionOperationCompleted
            End If
            Me.InvokeAsync("WM_ImprimeEtiquetaPosicion", New Object() {prmPosicion1, prmPosicion2, prmImpresora}, Me.WM_ImprimeEtiquetaPosicionOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ImprimeEtiquetaPosicionOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ImprimeEtiquetaPosicionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ImprimeEtiquetaPosicionCompleted(Me, New WM_ImprimeEtiquetaPosicionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ImprimeEtiquetaLinea", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ImprimeEtiquetaLinea(ByVal prmLinea As String, ByVal prmImpresora As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ImprimeEtiquetaLinea", New Object() {prmLinea, prmImpresora})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ImprimeEtiquetaLineaAsync(ByVal prmLinea As String, ByVal prmImpresora As String)
            Me.WM_ImprimeEtiquetaLineaAsync(prmLinea, prmImpresora, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ImprimeEtiquetaLineaAsync(ByVal prmLinea As String, ByVal prmImpresora As String, ByVal userState As Object)
            If (Me.WM_ImprimeEtiquetaLineaOperationCompleted Is Nothing) Then
                Me.WM_ImprimeEtiquetaLineaOperationCompleted = AddressOf Me.OnWM_ImprimeEtiquetaLineaOperationCompleted
            End If
            Me.InvokeAsync("WM_ImprimeEtiquetaLinea", New Object() {prmLinea, prmImpresora}, Me.WM_ImprimeEtiquetaLineaOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ImprimeEtiquetaLineaOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ImprimeEtiquetaLineaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ImprimeEtiquetaLineaCompleted(Me, New WM_ImprimeEtiquetaLineaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ReimprimeEtiquetaEmpaque", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ReimprimeEtiquetaEmpaque(ByVal prmEmpaque1 As String, ByVal prmEmpaque2 As String, ByVal prmImpresora As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ReimprimeEtiquetaEmpaque", New Object() {prmEmpaque1, prmEmpaque2, prmImpresora})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ReimprimeEtiquetaEmpaqueAsync(ByVal prmEmpaque1 As String, ByVal prmEmpaque2 As String, ByVal prmImpresora As String)
            Me.WM_ReimprimeEtiquetaEmpaqueAsync(prmEmpaque1, prmEmpaque2, prmImpresora, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ReimprimeEtiquetaEmpaqueAsync(ByVal prmEmpaque1 As String, ByVal prmEmpaque2 As String, ByVal prmImpresora As String, ByVal userState As Object)
            If (Me.WM_ReimprimeEtiquetaEmpaqueOperationCompleted Is Nothing) Then
                Me.WM_ReimprimeEtiquetaEmpaqueOperationCompleted = AddressOf Me.OnWM_ReimprimeEtiquetaEmpaqueOperationCompleted
            End If
            Me.InvokeAsync("WM_ReimprimeEtiquetaEmpaque", New Object() {prmEmpaque1, prmEmpaque2, prmImpresora}, Me.WM_ReimprimeEtiquetaEmpaqueOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ReimprimeEtiquetaEmpaqueOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ReimprimeEtiquetaEmpaqueCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ReimprimeEtiquetaEmpaqueCompleted(Me, New WM_ReimprimeEtiquetaEmpaqueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ImprimeEtiquetaKanban", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ImprimeEtiquetaKanban(ByVal prmCodigoPallet As String, ByVal prmNumParte As String, ByVal prmImpresora As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ImprimeEtiquetaKanban", New Object() {prmCodigoPallet, prmNumParte, prmImpresora, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ImprimeEtiquetaKanbanAsync(ByVal prmCodigoPallet As String, ByVal prmNumParte As String, ByVal prmImpresora As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ImprimeEtiquetaKanbanAsync(prmCodigoPallet, prmNumParte, prmImpresora, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ImprimeEtiquetaKanbanAsync(ByVal prmCodigoPallet As String, ByVal prmNumParte As String, ByVal prmImpresora As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ImprimeEtiquetaKanbanOperationCompleted Is Nothing) Then
                Me.WM_ImprimeEtiquetaKanbanOperationCompleted = AddressOf Me.OnWM_ImprimeEtiquetaKanbanOperationCompleted
            End If
            Me.InvokeAsync("WM_ImprimeEtiquetaKanban", New Object() {prmCodigoPallet, prmNumParte, prmImpresora, prmEstacion, prmUsuario}, Me.WM_ImprimeEtiquetaKanbanOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ImprimeEtiquetaKanbanOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ImprimeEtiquetaKanbanCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ImprimeEtiquetaKanbanCompleted(Me, New WM_ImprimeEtiquetaKanbanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ReimprimeRempaque", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ReimprimeRempaque(ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal prmImpresora As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ReimprimeRempaque", New Object() {prmPallet, prmEstacion, prmUsuario, prmImpresora})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ReimprimeRempaqueAsync(ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal prmImpresora As String)
            Me.WM_ReimprimeRempaqueAsync(prmPallet, prmEstacion, prmUsuario, prmImpresora, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ReimprimeRempaqueAsync(ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal prmImpresora As String, ByVal userState As Object)
            If (Me.WM_ReimprimeRempaqueOperationCompleted Is Nothing) Then
                Me.WM_ReimprimeRempaqueOperationCompleted = AddressOf Me.OnWM_ReimprimeRempaqueOperationCompleted
            End If
            Me.InvokeAsync("WM_ReimprimeRempaque", New Object() {prmPallet, prmEstacion, prmUsuario, prmImpresora}, Me.WM_ReimprimeRempaqueOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ReimprimeRempaqueOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ReimprimeRempaqueCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ReimprimeRempaqueCompleted(Me, New WM_ReimprimeRempaqueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ReimprimePalletMP", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function WM_ReimprimePalletMP(
                    ByVal prmOrdenCompra As String,
                    ByVal prmReciboCompra As String,
                    ByVal prmLoteAXC As String,
                    ByVal prmLoteProveedor As String,
                    ByVal prmEstacion As String,
                    ByVal prmCodigoPallet As String,
                    ByVal prmNumParte As String,
                    ByVal prmDescripcion As String,
                    ByVal prmCajas As String,
                    ByVal prmCantidad As String,
                    ByVal prmRevision As String,
                    ByVal prmFecha As String,
                    ByVal prmFechaCaducidad As String,
                    ByVal prmImpresora As String,
                    ByVal prmDPI As String,
                    ByVal prmUsuario As String,
                    ByVal prmMaquina As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ReimprimePalletMP", New Object() {prmOrdenCompra, prmReciboCompra, prmLoteAXC, prmLoteProveedor, prmEstacion, prmCodigoPallet, prmNumParte, prmDescripcion, prmCajas, prmCantidad, prmRevision, prmFecha, prmFechaCaducidad, prmImpresora, prmDPI, prmUsuario, prmMaquina})
            Return CType(results(0), CResultado)
        End Function

        '''<remarks/>
        Public Overloads Sub WM_ReimprimePalletMPAsync( _
                    ByVal prmOrdenCompra As String,  _
                    ByVal prmReciboCompra As String,  _
                    ByVal prmLoteAXC As String,  _
                    ByVal prmLoteProveedor As String,  _
                    ByVal prmEstacion As String,  _
                    ByVal prmCodigoPallet As String,  _
                    ByVal prmNumParte As String,  _
                    ByVal prmDescripcion As String,  _
                    ByVal prmCajas As String,  _
                    ByVal prmCantidad As String,  _
                    ByVal prmRevision As String,  _
                    ByVal prmFecha As String,  _
                    ByVal prmFechaCaducidad As String,  _
                    ByVal prmImpresora As String,  _
                    ByVal prmDPI As String,  _
                    ByVal prmUsuario As String,  _
                    ByVal prmMercado As String,  _
                    ByVal prmMaquina As String)
            Me.WM_ReimprimePalletMPAsync(prmOrdenCompra, prmReciboCompra, prmLoteAXC, prmLoteProveedor, prmEstacion, prmCodigoPallet, prmNumParte, prmDescripcion, prmCajas, prmCantidad, prmRevision, prmFecha, prmFechaCaducidad, prmImpresora, prmDPI, prmUsuario, prmMercado, prmMaquina, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ReimprimePalletMPAsync( _
                    ByVal prmOrdenCompra As String,  _
                    ByVal prmReciboCompra As String,  _
                    ByVal prmLoteAXC As String,  _
                    ByVal prmLoteProveedor As String,  _
                    ByVal prmEstacion As String,  _
                    ByVal prmCodigoPallet As String,  _
                    ByVal prmNumParte As String,  _
                    ByVal prmDescripcion As String,  _
                    ByVal prmCajas As String,  _
                    ByVal prmCantidad As String,  _
                    ByVal prmRevision As String,  _
                    ByVal prmFecha As String,  _
                    ByVal prmFechaCaducidad As String,  _
                    ByVal prmImpresora As String,  _
                    ByVal prmDPI As String,  _
                    ByVal prmUsuario As String,  _
                    ByVal prmMercado As String,  _
                    ByVal prmMaquina As String,  _
                    ByVal userState As Object)
            If (Me.WM_ReimprimePalletMPOperationCompleted Is Nothing) Then
                Me.WM_ReimprimePalletMPOperationCompleted = AddressOf Me.OnWM_ReimprimePalletMPOperationCompleted
            End If
            Me.InvokeAsync("WM_ReimprimePalletMP", New Object() {prmOrdenCompra, prmReciboCompra, prmLoteAXC, prmLoteProveedor, prmEstacion, prmCodigoPallet, prmNumParte, prmDescripcion, prmCajas, prmCantidad, prmRevision, prmFecha, prmFechaCaducidad, prmImpresora, prmDPI, prmUsuario, prmMercado, prmMaquina}, Me.WM_ReimprimePalletMPOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ReimprimePalletMPOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ReimprimePalletMPCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ReimprimePalletMPCompleted(Me, New WM_ReimprimePalletMPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ImprimeEtiquetaInv", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ImprimeEtiquetaInv(ByVal prmNumEtiquetas As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ImprimeEtiquetaInv", New Object() {prmNumEtiquetas})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ImprimeEtiquetaInvAsync(ByVal prmNumEtiquetas As String)
            Me.WM_ImprimeEtiquetaInvAsync(prmNumEtiquetas, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ImprimeEtiquetaInvAsync(ByVal prmNumEtiquetas As String, ByVal userState As Object)
            If (Me.WM_ImprimeEtiquetaInvOperationCompleted Is Nothing) Then
                Me.WM_ImprimeEtiquetaInvOperationCompleted = AddressOf Me.OnWM_ImprimeEtiquetaInvOperationCompleted
            End If
            Me.InvokeAsync("WM_ImprimeEtiquetaInv", New Object() {prmNumEtiquetas}, Me.WM_ImprimeEtiquetaInvOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ImprimeEtiquetaInvOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ImprimeEtiquetaInvCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ImprimeEtiquetaInvCompleted(Me, New WM_ImprimeEtiquetaInvCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaEmpaquesPallet_Impresion", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaEmpaquesPallet_Impresion(ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaEmpaquesPallet_Impresion", New Object() {prmPallet, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaEmpaquesPallet_ImpresionAsync(ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaEmpaquesPallet_ImpresionAsync(prmPallet, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaEmpaquesPallet_ImpresionAsync(ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaEmpaquesPallet_ImpresionOperationCompleted Is Nothing) Then
                Me.WM_ConsultaEmpaquesPallet_ImpresionOperationCompleted = AddressOf Me.OnWM_ConsultaEmpaquesPallet_ImpresionOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaEmpaquesPallet_Impresion", New Object() {prmPallet, prmEstacion, prmUsuario}, Me.WM_ConsultaEmpaquesPallet_ImpresionOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaEmpaquesPallet_ImpresionOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaEmpaquesPallet_ImpresionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaEmpaquesPallet_ImpresionCompleted(Me, New WM_ConsultaEmpaquesPallet_ImpresionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_BuscarUbicacion", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_BuscarUbicacion(ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_BuscarUbicacion", New Object() {prmUbicacion, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_BuscarUbicacionAsync(ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_BuscarUbicacionAsync(prmUbicacion, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_BuscarUbicacionAsync(ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_BuscarUbicacionOperationCompleted Is Nothing) Then
                Me.WM_BuscarUbicacionOperationCompleted = AddressOf Me.OnWM_BuscarUbicacionOperationCompleted
            End If
            Me.InvokeAsync("WM_BuscarUbicacion", New Object() {prmUbicacion, prmEstacion, prmUsuario}, Me.WM_BuscarUbicacionOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_BuscarUbicacionOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_BuscarUbicacionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_BuscarUbicacionCompleted(Me, New WM_BuscarUbicacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaReferencia", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaReferencia(ByVal prmTexto As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaReferencia", New Object() {prmTexto, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaReferenciaAsync(ByVal prmTexto As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaReferenciaAsync(prmTexto, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaReferenciaAsync(ByVal prmTexto As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaReferenciaOperationCompleted Is Nothing) Then
                Me.WM_ConsultaReferenciaOperationCompleted = AddressOf Me.OnWM_ConsultaReferenciaOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaReferencia", New Object() {prmTexto, prmEstacion, prmUsuario}, Me.WM_ConsultaReferenciaOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaReferenciaOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaReferenciaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaReferenciaCompleted(Me, New WM_ConsultaReferenciaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_BuscaArticuloCI", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_BuscaArticuloCI(ByVal prmCodigoInterno As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_BuscaArticuloCI", New Object() {prmCodigoInterno})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_BuscaArticuloCIAsync(ByVal prmCodigoInterno As String)
            Me.WM_BuscaArticuloCIAsync(prmCodigoInterno, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_BuscaArticuloCIAsync(ByVal prmCodigoInterno As String, ByVal userState As Object)
            If (Me.WM_BuscaArticuloCIOperationCompleted Is Nothing) Then
                Me.WM_BuscaArticuloCIOperationCompleted = AddressOf Me.OnWM_BuscaArticuloCIOperationCompleted
            End If
            Me.InvokeAsync("WM_BuscaArticuloCI", New Object() {prmCodigoInterno}, Me.WM_BuscaArticuloCIOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_BuscaArticuloCIOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_BuscaArticuloCICompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_BuscaArticuloCICompleted(Me, New WM_BuscaArticuloCICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaCoincidenciaArticulo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaCoincidenciaArticulo(ByVal prmArticulo As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaCoincidenciaArticulo", New Object() {prmArticulo})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaCoincidenciaArticuloAsync(ByVal prmArticulo As String)
            Me.WM_ConsultaCoincidenciaArticuloAsync(prmArticulo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaCoincidenciaArticuloAsync(ByVal prmArticulo As String, ByVal userState As Object)
            If (Me.WM_ConsultaCoincidenciaArticuloOperationCompleted Is Nothing) Then
                Me.WM_ConsultaCoincidenciaArticuloOperationCompleted = AddressOf Me.OnWM_ConsultaCoincidenciaArticuloOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaCoincidenciaArticulo", New Object() {prmArticulo}, Me.WM_ConsultaCoincidenciaArticuloOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaCoincidenciaArticuloOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaCoincidenciaArticuloCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaCoincidenciaArticuloCompleted(Me, New WM_ConsultaCoincidenciaArticuloCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaPalletArticulo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaPalletArticulo(ByVal prmNumParte As String, ByVal prmRevision As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaPalletArticulo", New Object() {prmNumParte, prmRevision, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaPalletArticuloAsync(ByVal prmNumParte As String, ByVal prmRevision As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaPalletArticuloAsync(prmNumParte, prmRevision, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaPalletArticuloAsync(ByVal prmNumParte As String, ByVal prmRevision As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaPalletArticuloOperationCompleted Is Nothing) Then
                Me.WM_ConsultaPalletArticuloOperationCompleted = AddressOf Me.OnWM_ConsultaPalletArticuloOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaPalletArticulo", New Object() {prmNumParte, prmRevision, prmEstacion, prmUsuario}, Me.WM_ConsultaPalletArticuloOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaPalletArticuloOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaPalletArticuloCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaPalletArticuloCompleted(Me, New WM_ConsultaPalletArticuloCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ListaBloqueados", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ListaBloqueados(ByVal prmNumParte As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ListaBloqueados", New Object() {prmNumParte, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ListaBloqueadosAsync(ByVal prmNumParte As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ListaBloqueadosAsync(prmNumParte, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ListaBloqueadosAsync(ByVal prmNumParte As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ListaBloqueadosOperationCompleted Is Nothing) Then
                Me.WM_ListaBloqueadosOperationCompleted = AddressOf Me.OnWM_ListaBloqueadosOperationCompleted
            End If
            Me.InvokeAsync("WM_ListaBloqueados", New Object() {prmNumParte, prmEstacion, prmUsuario}, Me.WM_ListaBloqueadosOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ListaBloqueadosOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ListaBloqueadosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ListaBloqueadosCompleted(Me, New WM_ListaBloqueadosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultarPalletPK", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultarPalletPK(ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultarPalletPK", New Object() {prmPallet, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultarPalletPKAsync(ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultarPalletPKAsync(prmPallet, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultarPalletPKAsync(ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultarPalletPKOperationCompleted Is Nothing) Then
                Me.WM_ConsultarPalletPKOperationCompleted = AddressOf Me.OnWM_ConsultarPalletPKOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultarPalletPK", New Object() {prmPallet, prmEstacion, prmUsuario}, Me.WM_ConsultarPalletPKOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultarPalletPKOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultarPalletPKCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultarPalletPKCompleted(Me, New WM_ConsultarPalletPKCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_DevolucionDet", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_DevolucionDet(ByVal prmDevolucion As String, ByVal prmPartida As String, ByVal prmEstacion As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_DevolucionDet", New Object() {prmDevolucion, prmPartida, prmEstacion})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_DevolucionDetAsync(ByVal prmDevolucion As String, ByVal prmPartida As String, ByVal prmEstacion As String)
            Me.WM_DevolucionDetAsync(prmDevolucion, prmPartida, prmEstacion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_DevolucionDetAsync(ByVal prmDevolucion As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal userState As Object)
            If (Me.WM_DevolucionDetOperationCompleted Is Nothing) Then
                Me.WM_DevolucionDetOperationCompleted = AddressOf Me.OnWM_DevolucionDetOperationCompleted
            End If
            Me.InvokeAsync("WM_DevolucionDet", New Object() {prmDevolucion, prmPartida, prmEstacion}, Me.WM_DevolucionDetOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_DevolucionDetOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_DevolucionDetCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_DevolucionDetCompleted(Me, New WM_DevolucionDetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ListarPartidasDevolucion", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ListarPartidasDevolucion(ByVal prmDevolucion As String, ByVal prmEstacion As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ListarPartidasDevolucion", New Object() {prmDevolucion, prmEstacion})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ListarPartidasDevolucionAsync(ByVal prmDevolucion As String, ByVal prmEstacion As String)
            Me.WM_ListarPartidasDevolucionAsync(prmDevolucion, prmEstacion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ListarPartidasDevolucionAsync(ByVal prmDevolucion As String, ByVal prmEstacion As String, ByVal userState As Object)
            If (Me.WM_ListarPartidasDevolucionOperationCompleted Is Nothing) Then
                Me.WM_ListarPartidasDevolucionOperationCompleted = AddressOf Me.OnWM_ListarPartidasDevolucionOperationCompleted
            End If
            Me.InvokeAsync("WM_ListarPartidasDevolucion", New Object() {prmDevolucion, prmEstacion}, Me.WM_ListarPartidasDevolucionOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ListarPartidasDevolucionOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ListarPartidasDevolucionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ListarPartidasDevolucionCompleted(Me, New WM_ListarPartidasDevolucionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_OCRegistrarEmpaqueDevolucion", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_OCRegistrarEmpaqueDevolucion(ByVal prmOrdenDevolucion As String, ByVal prmPartida As String, ByVal prmCodigoEmpaque As String, ByVal prmLoteProveedor As String, ByVal prmCantidad As Double, ByVal prmEmpaques As Integer, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_OCRegistrarEmpaqueDevolucion", New Object() {prmOrdenDevolucion, prmPartida, prmCodigoEmpaque, prmLoteProveedor, prmCantidad, prmEmpaques, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_OCRegistrarEmpaqueDevolucionAsync(ByVal prmOrdenDevolucion As String, ByVal prmPartida As String, ByVal prmCodigoEmpaque As String, ByVal prmLoteProveedor As String, ByVal prmCantidad As Double, ByVal prmEmpaques As Integer, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_OCRegistrarEmpaqueDevolucionAsync(prmOrdenDevolucion, prmPartida, prmCodigoEmpaque, prmLoteProveedor, prmCantidad, prmEmpaques, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_OCRegistrarEmpaqueDevolucionAsync(ByVal prmOrdenDevolucion As String, ByVal prmPartida As String, ByVal prmCodigoEmpaque As String, ByVal prmLoteProveedor As String, ByVal prmCantidad As Double, ByVal prmEmpaques As Integer, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_OCRegistrarEmpaqueDevolucionOperationCompleted Is Nothing) Then
                Me.WM_OCRegistrarEmpaqueDevolucionOperationCompleted = AddressOf Me.OnWM_OCRegistrarEmpaqueDevolucionOperationCompleted
            End If
            Me.InvokeAsync("WM_OCRegistrarEmpaqueDevolucion", New Object() {prmOrdenDevolucion, prmPartida, prmCodigoEmpaque, prmLoteProveedor, prmCantidad, prmEmpaques, prmEstacion, prmUsuario}, Me.WM_OCRegistrarEmpaqueDevolucionOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_OCRegistrarEmpaqueDevolucionOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_OCRegistrarEmpaqueDevolucionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_OCRegistrarEmpaqueDevolucionCompleted(Me, New WM_OCRegistrarEmpaqueDevolucionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_PrimeraUltimaEmpaqueDev", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_PrimeraUltimaEmpaqueDev(ByVal prmOrdenDevolucion As String, ByVal prmPartida As String, ByVal prmLoteProveedor As String, ByVal prmCantidad As Double, ByVal prmEmpaques As Integer, ByVal prmPrimerEmpaque As String, ByVal prmUltimoEmpaque As String, ByVal prmCantidadEmpaques As Double, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_PrimeraUltimaEmpaqueDev", New Object() {prmOrdenDevolucion, prmPartida, prmLoteProveedor, prmCantidad, prmEmpaques, prmPrimerEmpaque, prmUltimoEmpaque, prmCantidadEmpaques, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_PrimeraUltimaEmpaqueDevAsync(ByVal prmOrdenDevolucion As String, ByVal prmPartida As String, ByVal prmLoteProveedor As String, ByVal prmCantidad As Double, ByVal prmEmpaques As Integer, ByVal prmPrimerEmpaque As String, ByVal prmUltimoEmpaque As String, ByVal prmCantidadEmpaques As Double, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_PrimeraUltimaEmpaqueDevAsync(prmOrdenDevolucion, prmPartida, prmLoteProveedor, prmCantidad, prmEmpaques, prmPrimerEmpaque, prmUltimoEmpaque, prmCantidadEmpaques, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_PrimeraUltimaEmpaqueDevAsync(ByVal prmOrdenDevolucion As String, ByVal prmPartida As String, ByVal prmLoteProveedor As String, ByVal prmCantidad As Double, ByVal prmEmpaques As Integer, ByVal prmPrimerEmpaque As String, ByVal prmUltimoEmpaque As String, ByVal prmCantidadEmpaques As Double, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_PrimeraUltimaEmpaqueDevOperationCompleted Is Nothing) Then
                Me.WM_PrimeraUltimaEmpaqueDevOperationCompleted = AddressOf Me.OnWM_PrimeraUltimaEmpaqueDevOperationCompleted
            End If
            Me.InvokeAsync("WM_PrimeraUltimaEmpaqueDev", New Object() {prmOrdenDevolucion, prmPartida, prmLoteProveedor, prmCantidad, prmEmpaques, prmPrimerEmpaque, prmUltimoEmpaque, prmCantidadEmpaques, prmEstacion, prmUsuario}, Me.WM_PrimeraUltimaEmpaqueDevOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_PrimeraUltimaEmpaqueDevOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_PrimeraUltimaEmpaqueDevCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_PrimeraUltimaEmpaqueDevCompleted(Me, New WM_PrimeraUltimaEmpaqueDevCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_OCRegistrarEmpaqueSEDevolucion", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_OCRegistrarEmpaqueSEDevolucion(ByVal prmOrdenDevolucion As String, ByVal prmPartida As String, ByVal prmLoteProveedor As String, ByVal prmCantidad As Double, ByVal prmEmpaques As Integer, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_OCRegistrarEmpaqueSEDevolucion", New Object() {prmOrdenDevolucion, prmPartida, prmLoteProveedor, prmCantidad, prmEmpaques, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_OCRegistrarEmpaqueSEDevolucionAsync(ByVal prmOrdenDevolucion As String, ByVal prmPartida As String, ByVal prmLoteProveedor As String, ByVal prmCantidad As Double, ByVal prmEmpaques As Integer, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_OCRegistrarEmpaqueSEDevolucionAsync(prmOrdenDevolucion, prmPartida, prmLoteProveedor, prmCantidad, prmEmpaques, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_OCRegistrarEmpaqueSEDevolucionAsync(ByVal prmOrdenDevolucion As String, ByVal prmPartida As String, ByVal prmLoteProveedor As String, ByVal prmCantidad As Double, ByVal prmEmpaques As Integer, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_OCRegistrarEmpaqueSEDevolucionOperationCompleted Is Nothing) Then
                Me.WM_OCRegistrarEmpaqueSEDevolucionOperationCompleted = AddressOf Me.OnWM_OCRegistrarEmpaqueSEDevolucionOperationCompleted
            End If
            Me.InvokeAsync("WM_OCRegistrarEmpaqueSEDevolucion", New Object() {prmOrdenDevolucion, prmPartida, prmLoteProveedor, prmCantidad, prmEmpaques, prmEstacion, prmUsuario}, Me.WM_OCRegistrarEmpaqueSEDevolucionOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_OCRegistrarEmpaqueSEDevolucionOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_OCRegistrarEmpaqueSEDevolucionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_OCRegistrarEmpaqueSEDevolucionCompleted(Me, New WM_OCRegistrarEmpaqueSEDevolucionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_OCCierraPalletDevolucion", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_OCCierraPalletDevolucion(ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_OCCierraPalletDevolucion", New Object() {prmPallet, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_OCCierraPalletDevolucionAsync(ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_OCCierraPalletDevolucionAsync(prmPallet, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_OCCierraPalletDevolucionAsync(ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_OCCierraPalletDevolucionOperationCompleted Is Nothing) Then
                Me.WM_OCCierraPalletDevolucionOperationCompleted = AddressOf Me.OnWM_OCCierraPalletDevolucionOperationCompleted
            End If
            Me.InvokeAsync("WM_OCCierraPalletDevolucion", New Object() {prmPallet, prmEstacion, prmUsuario}, Me.WM_OCCierraPalletDevolucionOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_OCCierraPalletDevolucionOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_OCCierraPalletDevolucionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_OCCierraPalletDevolucionCompleted(Me, New WM_OCCierraPalletDevolucionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultarPalletAbiertoDev", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultarPalletAbiertoDev(ByVal prmIdDevolucion As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultarPalletAbiertoDev", New Object() {prmIdDevolucion, prmPartida, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultarPalletAbiertoDevAsync(ByVal prmIdDevolucion As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultarPalletAbiertoDevAsync(prmIdDevolucion, prmPartida, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultarPalletAbiertoDevAsync(ByVal prmIdDevolucion As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultarPalletAbiertoDevOperationCompleted Is Nothing) Then
                Me.WM_ConsultarPalletAbiertoDevOperationCompleted = AddressOf Me.OnWM_ConsultarPalletAbiertoDevOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultarPalletAbiertoDev", New Object() {prmIdDevolucion, prmPartida, prmEstacion, prmUsuario}, Me.WM_ConsultarPalletAbiertoDevOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultarPalletAbiertoDevOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultarPalletAbiertoDevCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultarPalletAbiertoDevCompleted(Me, New WM_ConsultarPalletAbiertoDevCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ListarLotesDev", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ListarLotesDev(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmNumParte As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ListarLotesDev", New Object() {prmOrdenCompra, prmPartida, prmNumParte, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ListarLotesDevAsync(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmNumParte As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ListarLotesDevAsync(prmOrdenCompra, prmPartida, prmNumParte, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ListarLotesDevAsync(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmNumParte As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ListarLotesDevOperationCompleted Is Nothing) Then
                Me.WM_ListarLotesDevOperationCompleted = AddressOf Me.OnWM_ListarLotesDevOperationCompleted
            End If
            Me.InvokeAsync("WM_ListarLotesDev", New Object() {prmOrdenCompra, prmPartida, prmNumParte, prmEstacion, prmUsuario}, Me.WM_ListarLotesDevOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ListarLotesDevOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ListarLotesDevCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ListarLotesDevCompleted(Me, New WM_ListarLotesDevCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_CreaLoteRecepcionDev", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_CreaLoteRecepcionDev(ByVal prmOrdenDev As String, ByVal prmPartida As String, ByVal prmLote As String, ByVal prmGenerarLote As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_CreaLoteRecepcionDev", New Object() {prmOrdenDev, prmPartida, prmLote, prmGenerarLote, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_CreaLoteRecepcionDevAsync(ByVal prmOrdenDev As String, ByVal prmPartida As String, ByVal prmLote As String, ByVal prmGenerarLote As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_CreaLoteRecepcionDevAsync(prmOrdenDev, prmPartida, prmLote, prmGenerarLote, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_CreaLoteRecepcionDevAsync(ByVal prmOrdenDev As String, ByVal prmPartida As String, ByVal prmLote As String, ByVal prmGenerarLote As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_CreaLoteRecepcionDevOperationCompleted Is Nothing) Then
                Me.WM_CreaLoteRecepcionDevOperationCompleted = AddressOf Me.OnWM_CreaLoteRecepcionDevOperationCompleted
            End If
            Me.InvokeAsync("WM_CreaLoteRecepcionDev", New Object() {prmOrdenDev, prmPartida, prmLote, prmGenerarLote, prmEstacion, prmUsuario}, Me.WM_CreaLoteRecepcionDevOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_CreaLoteRecepcionDevOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_CreaLoteRecepcionDevCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_CreaLoteRecepcionDevCompleted(Me, New WM_CreaLoteRecepcionDevCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_RegistroINIEmbalaje", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_RegistroINIEmbalaje(ByVal prmNoParte As String, ByVal prmCantidad As Integer, ByVal prmNoSerie As String, ByVal prmProveedor As String, ByVal prmERPAlmacen As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_RegistroINIEmbalaje", New Object() {prmNoParte, prmCantidad, prmNoSerie, prmProveedor, prmERPAlmacen, prmUbicacion, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_RegistroINIEmbalajeAsync(ByVal prmNoParte As String, ByVal prmCantidad As Integer, ByVal prmNoSerie As String, ByVal prmProveedor As String, ByVal prmERPAlmacen As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_RegistroINIEmbalajeAsync(prmNoParte, prmCantidad, prmNoSerie, prmProveedor, prmERPAlmacen, prmUbicacion, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_RegistroINIEmbalajeAsync(ByVal prmNoParte As String, ByVal prmCantidad As Integer, ByVal prmNoSerie As String, ByVal prmProveedor As String, ByVal prmERPAlmacen As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_RegistroINIEmbalajeOperationCompleted Is Nothing) Then
                Me.WM_RegistroINIEmbalajeOperationCompleted = AddressOf Me.OnWM_RegistroINIEmbalajeOperationCompleted
            End If
            Me.InvokeAsync("WM_RegistroINIEmbalaje", New Object() {prmNoParte, prmCantidad, prmNoSerie, prmProveedor, prmERPAlmacen, prmUbicacion, prmEstacion, prmUsuario}, Me.WM_RegistroINIEmbalajeOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_RegistroINIEmbalajeOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_RegistroINIEmbalajeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_RegistroINIEmbalajeCompleted(Me, New WM_RegistroINIEmbalajeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_RegistraINIEmpaque", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_RegistraINIEmpaque(ByVal prmNoParte As String, ByVal prmCantidad As Integer, ByVal prmNoSerie As String, ByVal prmProveedor As String, ByVal prmEmbalaje As String, ByVal prmERPAlmacen As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_RegistraINIEmpaque", New Object() {prmNoParte, prmCantidad, prmNoSerie, prmProveedor, prmEmbalaje, prmERPAlmacen, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_RegistraINIEmpaqueAsync(ByVal prmNoParte As String, ByVal prmCantidad As Integer, ByVal prmNoSerie As String, ByVal prmProveedor As String, ByVal prmEmbalaje As String, ByVal prmERPAlmacen As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_RegistraINIEmpaqueAsync(prmNoParte, prmCantidad, prmNoSerie, prmProveedor, prmEmbalaje, prmERPAlmacen, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_RegistraINIEmpaqueAsync(ByVal prmNoParte As String, ByVal prmCantidad As Integer, ByVal prmNoSerie As String, ByVal prmProveedor As String, ByVal prmEmbalaje As String, ByVal prmERPAlmacen As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_RegistraINIEmpaqueOperationCompleted Is Nothing) Then
                Me.WM_RegistraINIEmpaqueOperationCompleted = AddressOf Me.OnWM_RegistraINIEmpaqueOperationCompleted
            End If
            Me.InvokeAsync("WM_RegistraINIEmpaque", New Object() {prmNoParte, prmCantidad, prmNoSerie, prmProveedor, prmEmbalaje, prmERPAlmacen, prmEstacion, prmUsuario}, Me.WM_RegistraINIEmpaqueOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_RegistraINIEmpaqueOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_RegistraINIEmpaqueCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_RegistraINIEmpaqueCompleted(Me, New WM_RegistraINIEmpaqueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_RegistroINIEtiquetaIndividual", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_RegistroINIEtiquetaIndividual(ByVal prmNoParte As String, ByVal prmCantidad As Integer, ByVal prmNoSerie As String, ByVal prmProveedor As String, ByVal prmERPAlmacen As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_RegistroINIEtiquetaIndividual", New Object() {prmNoParte, prmCantidad, prmNoSerie, prmProveedor, prmERPAlmacen, prmUbicacion, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_RegistroINIEtiquetaIndividualAsync(ByVal prmNoParte As String, ByVal prmCantidad As Integer, ByVal prmNoSerie As String, ByVal prmProveedor As String, ByVal prmERPAlmacen As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_RegistroINIEtiquetaIndividualAsync(prmNoParte, prmCantidad, prmNoSerie, prmProveedor, prmERPAlmacen, prmUbicacion, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_RegistroINIEtiquetaIndividualAsync(ByVal prmNoParte As String, ByVal prmCantidad As Integer, ByVal prmNoSerie As String, ByVal prmProveedor As String, ByVal prmERPAlmacen As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_RegistroINIEtiquetaIndividualOperationCompleted Is Nothing) Then
                Me.WM_RegistroINIEtiquetaIndividualOperationCompleted = AddressOf Me.OnWM_RegistroINIEtiquetaIndividualOperationCompleted
            End If
            Me.InvokeAsync("WM_RegistroINIEtiquetaIndividual", New Object() {prmNoParte, prmCantidad, prmNoSerie, prmProveedor, prmERPAlmacen, prmUbicacion, prmEstacion, prmUsuario}, Me.WM_RegistroINIEtiquetaIndividualOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_RegistroINIEtiquetaIndividualOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_RegistroINIEtiquetaIndividualCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_RegistroINIEtiquetaIndividualCompleted(Me, New WM_RegistroINIEtiquetaIndividualCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_BajaInventarioPallet", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_BajaInventarioPallet(ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_BajaInventarioPallet", New Object() {prmPallet, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_BajaInventarioPalletAsync(ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_BajaInventarioPalletAsync(prmPallet, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_BajaInventarioPalletAsync(ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_BajaInventarioPalletOperationCompleted Is Nothing) Then
                Me.WM_BajaInventarioPalletOperationCompleted = AddressOf Me.OnWM_BajaInventarioPalletOperationCompleted
            End If
            Me.InvokeAsync("WM_BajaInventarioPallet", New Object() {prmPallet, prmEstacion, prmUsuario}, Me.WM_BajaInventarioPalletOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_BajaInventarioPalletOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_BajaInventarioPalletCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_BajaInventarioPalletCompleted(Me, New WM_BajaInventarioPalletCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_BajaInventarioEmpaque", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_BajaInventarioEmpaque(ByVal prmCaja As String, ByVal prmCantidad As Integer, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_BajaInventarioEmpaque", New Object() {prmCaja, prmCantidad, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_BajaInventarioEmpaqueAsync(ByVal prmCaja As String, ByVal prmCantidad As Integer, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_BajaInventarioEmpaqueAsync(prmCaja, prmCantidad, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_BajaInventarioEmpaqueAsync(ByVal prmCaja As String, ByVal prmCantidad As Integer, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_BajaInventarioEmpaqueOperationCompleted Is Nothing) Then
                Me.WM_BajaInventarioEmpaqueOperationCompleted = AddressOf Me.OnWM_BajaInventarioEmpaqueOperationCompleted
            End If
            Me.InvokeAsync("WM_BajaInventarioEmpaque", New Object() {prmCaja, prmCantidad, prmEstacion, prmUsuario}, Me.WM_BajaInventarioEmpaqueOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_BajaInventarioEmpaqueOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_BajaInventarioEmpaqueCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_BajaInventarioEmpaqueCompleted(Me, New WM_BajaInventarioEmpaqueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_CierraEntregaParcial", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_CierraEntregaParcial(ByVal prmOrden As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_CierraEntregaParcial", New Object() {prmOrden, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_CierraEntregaParcialAsync(ByVal prmOrden As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_CierraEntregaParcialAsync(prmOrden, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_CierraEntregaParcialAsync(ByVal prmOrden As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_CierraEntregaParcialOperationCompleted Is Nothing) Then
                Me.WM_CierraEntregaParcialOperationCompleted = AddressOf Me.OnWM_CierraEntregaParcialOperationCompleted
            End If
            Me.InvokeAsync("WM_CierraEntregaParcial", New Object() {prmOrden, prmEstacion, prmUsuario}, Me.WM_CierraEntregaParcialOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_CierraEntregaParcialOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_CierraEntregaParcialCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_CierraEntregaParcialCompleted(Me, New WM_CierraEntregaParcialCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ListarTransfersLiberados", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ListarTransfersLiberados(ByVal prmEstacion As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ListarTransfersLiberados", New Object() {prmEstacion})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ListarTransfersLiberadosAsync(ByVal prmEstacion As String)
            Me.WM_ListarTransfersLiberadosAsync(prmEstacion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ListarTransfersLiberadosAsync(ByVal prmEstacion As String, ByVal userState As Object)
            If (Me.WM_ListarTransfersLiberadosOperationCompleted Is Nothing) Then
                Me.WM_ListarTransfersLiberadosOperationCompleted = AddressOf Me.OnWM_ListarTransfersLiberadosOperationCompleted
            End If
            Me.InvokeAsync("WM_ListarTransfersLiberados", New Object() {prmEstacion}, Me.WM_ListarTransfersLiberadosOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ListarTransfersLiberadosOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ListarTransfersLiberadosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ListarTransfersLiberadosCompleted(Me, New WM_ListarTransfersLiberadosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ListarPartidasInterorgSalidaLiberado", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ListarPartidasInterorgSalidaLiberado(ByVal prmInterorg As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ListarPartidasInterorgSalidaLiberado", New Object() {prmInterorg})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ListarPartidasInterorgSalidaLiberadoAsync(ByVal prmInterorg As String)
            Me.WM_ListarPartidasInterorgSalidaLiberadoAsync(prmInterorg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ListarPartidasInterorgSalidaLiberadoAsync(ByVal prmInterorg As String, ByVal userState As Object)
            If (Me.WM_ListarPartidasInterorgSalidaLiberadoOperationCompleted Is Nothing) Then
                Me.WM_ListarPartidasInterorgSalidaLiberadoOperationCompleted = AddressOf Me.OnWM_ListarPartidasInterorgSalidaLiberadoOperationCompleted
            End If
            Me.InvokeAsync("WM_ListarPartidasInterorgSalidaLiberado", New Object() {prmInterorg}, Me.WM_ListarPartidasInterorgSalidaLiberadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ListarPartidasInterorgSalidaLiberadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ListarPartidasInterorgSalidaLiberadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ListarPartidasInterorgSalidaLiberadoCompleted(Me, New WM_ListarPartidasInterorgSalidaLiberadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_RegistraPalletInterorgSalida", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_RegistraPalletInterorgSalida(ByVal prmInterorg As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_RegistraPalletInterorgSalida", New Object() {prmInterorg, prmPallet, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_RegistraPalletInterorgSalidaAsync(ByVal prmInterorg As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_RegistraPalletInterorgSalidaAsync(prmInterorg, prmPallet, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_RegistraPalletInterorgSalidaAsync(ByVal prmInterorg As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_RegistraPalletInterorgSalidaOperationCompleted Is Nothing) Then
                Me.WM_RegistraPalletInterorgSalidaOperationCompleted = AddressOf Me.OnWM_RegistraPalletInterorgSalidaOperationCompleted
            End If
            Me.InvokeAsync("WM_RegistraPalletInterorgSalida", New Object() {prmInterorg, prmPallet, prmEstacion, prmUsuario}, Me.WM_RegistraPalletInterorgSalidaOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_RegistraPalletInterorgSalidaOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_RegistraPalletInterorgSalidaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_RegistraPalletInterorgSalidaCompleted(Me, New WM_RegistraPalletInterorgSalidaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_RegistraEmpaqueInterorgSalida", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_RegistraEmpaqueInterorgSalida(ByVal prmInterorg As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_RegistraEmpaqueInterorgSalida", New Object() {prmInterorg, prmPallet, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_RegistraEmpaqueInterorgSalidaAsync(ByVal prmInterorg As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_RegistraEmpaqueInterorgSalidaAsync(prmInterorg, prmPallet, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_RegistraEmpaqueInterorgSalidaAsync(ByVal prmInterorg As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_RegistraEmpaqueInterorgSalidaOperationCompleted Is Nothing) Then
                Me.WM_RegistraEmpaqueInterorgSalidaOperationCompleted = AddressOf Me.OnWM_RegistraEmpaqueInterorgSalidaOperationCompleted
            End If
            Me.InvokeAsync("WM_RegistraEmpaqueInterorgSalida", New Object() {prmInterorg, prmPallet, prmEstacion, prmUsuario}, Me.WM_RegistraEmpaqueInterorgSalidaOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_RegistraEmpaqueInterorgSalidaOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_RegistraEmpaqueInterorgSalidaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_RegistraEmpaqueInterorgSalidaCompleted(Me, New WM_RegistraEmpaqueInterorgSalidaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ListarTransfersARecibir", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ListarTransfersARecibir(ByVal prmEstacion As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ListarTransfersARecibir", New Object() {prmEstacion})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ListarTransfersARecibirAsync(ByVal prmEstacion As String)
            Me.WM_ListarTransfersARecibirAsync(prmEstacion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ListarTransfersARecibirAsync(ByVal prmEstacion As String, ByVal userState As Object)
            If (Me.WM_ListarTransfersARecibirOperationCompleted Is Nothing) Then
                Me.WM_ListarTransfersARecibirOperationCompleted = AddressOf Me.OnWM_ListarTransfersARecibirOperationCompleted
            End If
            Me.InvokeAsync("WM_ListarTransfersARecibir", New Object() {prmEstacion}, Me.WM_ListarTransfersARecibirOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ListarTransfersARecibirOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ListarTransfersARecibirCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ListarTransfersARecibirCompleted(Me, New WM_ListarTransfersARecibirCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ListarPartidasLiberadas", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ListarPartidasLiberadas(ByVal prmInterorg As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ListarPartidasLiberadas", New Object() {prmInterorg})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ListarPartidasLiberadasAsync(ByVal prmInterorg As String)
            Me.WM_ListarPartidasLiberadasAsync(prmInterorg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ListarPartidasLiberadasAsync(ByVal prmInterorg As String, ByVal userState As Object)
            If (Me.WM_ListarPartidasLiberadasOperationCompleted Is Nothing) Then
                Me.WM_ListarPartidasLiberadasOperationCompleted = AddressOf Me.OnWM_ListarPartidasLiberadasOperationCompleted
            End If
            Me.InvokeAsync("WM_ListarPartidasLiberadas", New Object() {prmInterorg}, Me.WM_ListarPartidasLiberadasOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ListarPartidasLiberadasOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ListarPartidasLiberadasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ListarPartidasLiberadasCompleted(Me, New WM_ListarPartidasLiberadasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_RecibePalletTransfer", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_RecibePalletTransfer(ByVal prmInterorg As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_RecibePalletTransfer", New Object() {prmInterorg, prmPallet, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_RecibePalletTransferAsync(ByVal prmInterorg As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_RecibePalletTransferAsync(prmInterorg, prmPallet, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_RecibePalletTransferAsync(ByVal prmInterorg As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_RecibePalletTransferOperationCompleted Is Nothing) Then
                Me.WM_RecibePalletTransferOperationCompleted = AddressOf Me.OnWM_RecibePalletTransferOperationCompleted
            End If
            Me.InvokeAsync("WM_RecibePalletTransfer", New Object() {prmInterorg, prmPallet, prmEstacion, prmUsuario}, Me.WM_RecibePalletTransferOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_RecibePalletTransferOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_RecibePalletTransferCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_RecibePalletTransferCompleted(Me, New WM_RecibePalletTransferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaPalletsTransfer", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaPalletsTransfer(ByVal prmTransfer As String, ByVal prmEstacion As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaPalletsTransfer", New Object() {prmTransfer, prmEstacion})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaPalletsTransferAsync(ByVal prmTransfer As String, ByVal prmEstacion As String)
            Me.WM_ConsultaPalletsTransferAsync(prmTransfer, prmEstacion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaPalletsTransferAsync(ByVal prmTransfer As String, ByVal prmEstacion As String, ByVal userState As Object)
            If (Me.WM_ConsultaPalletsTransferOperationCompleted Is Nothing) Then
                Me.WM_ConsultaPalletsTransferOperationCompleted = AddressOf Me.OnWM_ConsultaPalletsTransferOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaPalletsTransfer", New Object() {prmTransfer, prmEstacion}, Me.WM_ConsultaPalletsTransferOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaPalletsTransferOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaPalletsTransferCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaPalletsTransferCompleted(Me, New WM_ConsultaPalletsTransferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaInvFisico", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaInvFisico(ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal prmIdAlmacen As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaInvFisico", New Object() {prmEstacion, prmUsuario, prmIdAlmacen})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaInvFisicoAsync(ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal prmIdAlmacen As String)
            Me.WM_ConsultaInvFisicoAsync(prmEstacion, prmUsuario, prmIdAlmacen, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaInvFisicoAsync(ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal prmIdAlmacen As String, ByVal userState As Object)
            If (Me.WM_ConsultaInvFisicoOperationCompleted Is Nothing) Then
                Me.WM_ConsultaInvFisicoOperationCompleted = AddressOf Me.OnWM_ConsultaInvFisicoOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaInvFisico", New Object() {prmEstacion, prmUsuario, prmIdAlmacen}, Me.WM_ConsultaInvFisicoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaInvFisicoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaInvFisicoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaInvFisicoCompleted(Me, New WM_ConsultaInvFisicoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaInvCiclicoNumParte", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaInvCiclicoNumParte(ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal prmIdAlmacen As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaInvCiclicoNumParte", New Object() {prmEstacion, prmUsuario, prmIdAlmacen})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaInvCiclicoNumParteAsync(ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal prmIdAlmacen As String)
            Me.WM_ConsultaInvCiclicoNumParteAsync(prmEstacion, prmUsuario, prmIdAlmacen, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaInvCiclicoNumParteAsync(ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal prmIdAlmacen As String, ByVal userState As Object)
            If (Me.WM_ConsultaInvCiclicoNumParteOperationCompleted Is Nothing) Then
                Me.WM_ConsultaInvCiclicoNumParteOperationCompleted = AddressOf Me.OnWM_ConsultaInvCiclicoNumParteOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaInvCiclicoNumParte", New Object() {prmEstacion, prmUsuario, prmIdAlmacen}, Me.WM_ConsultaInvCiclicoNumParteOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaInvCiclicoNumParteOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaInvCiclicoNumParteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaInvCiclicoNumParteCompleted(Me, New WM_ConsultaInvCiclicoNumParteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaInvCiclicoPosicion", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaInvCiclicoPosicion(ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal prmIdAlmacen As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaInvCiclicoPosicion", New Object() {prmEstacion, prmUsuario, prmIdAlmacen})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaInvCiclicoPosicionAsync(ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal prmIdAlmacen As String)
            Me.WM_ConsultaInvCiclicoPosicionAsync(prmEstacion, prmUsuario, prmIdAlmacen, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaInvCiclicoPosicionAsync(ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal prmIdAlmacen As String, ByVal userState As Object)
            If (Me.WM_ConsultaInvCiclicoPosicionOperationCompleted Is Nothing) Then
                Me.WM_ConsultaInvCiclicoPosicionOperationCompleted = AddressOf Me.OnWM_ConsultaInvCiclicoPosicionOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaInvCiclicoPosicion", New Object() {prmEstacion, prmUsuario, prmIdAlmacen}, Me.WM_ConsultaInvCiclicoPosicionOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaInvCiclicoPosicionOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaInvCiclicoPosicionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaInvCiclicoPosicionCompleted(Me, New WM_ConsultaInvCiclicoPosicionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaInvCiclicoPorLote", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaInvCiclicoPorLote(ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal prmIdAlmacen As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaInvCiclicoPorLote", New Object() {prmEstacion, prmUsuario, prmIdAlmacen})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaInvCiclicoPorLoteAsync(ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal prmIdAlmacen As String)
            Me.WM_ConsultaInvCiclicoPorLoteAsync(prmEstacion, prmUsuario, prmIdAlmacen, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaInvCiclicoPorLoteAsync(ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal prmIdAlmacen As String, ByVal userState As Object)
            If (Me.WM_ConsultaInvCiclicoPorLoteOperationCompleted Is Nothing) Then
                Me.WM_ConsultaInvCiclicoPorLoteOperationCompleted = AddressOf Me.OnWM_ConsultaInvCiclicoPorLoteOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaInvCiclicoPorLote", New Object() {prmEstacion, prmUsuario, prmIdAlmacen}, Me.WM_ConsultaInvCiclicoPorLoteOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaInvCiclicoPorLoteOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaInvCiclicoPorLoteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaInvCiclicoPorLoteCompleted(Me, New WM_ConsultaInvCiclicoPorLoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaInventarioNumParte", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaInventarioNumParte(ByVal pIdInventario As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaInventarioNumParte", New Object() {pIdInventario, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaInventarioNumParteAsync(ByVal pIdInventario As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaInventarioNumParteAsync(pIdInventario, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaInventarioNumParteAsync(ByVal pIdInventario As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaInventarioNumParteOperationCompleted Is Nothing) Then
                Me.WM_ConsultaInventarioNumParteOperationCompleted = AddressOf Me.OnWM_ConsultaInventarioNumParteOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaInventarioNumParte", New Object() {pIdInventario, prmEstacion, prmUsuario}, Me.WM_ConsultaInventarioNumParteOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaInventarioNumParteOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaInventarioNumParteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaInventarioNumParteCompleted(Me, New WM_ConsultaInventarioNumParteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaInventarioPosicion", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaInventarioPosicion(ByVal pIdInventario As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaInventarioPosicion", New Object() {pIdInventario, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaInventarioPosicionAsync(ByVal pIdInventario As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaInventarioPosicionAsync(pIdInventario, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaInventarioPosicionAsync(ByVal pIdInventario As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaInventarioPosicionOperationCompleted Is Nothing) Then
                Me.WM_ConsultaInventarioPosicionOperationCompleted = AddressOf Me.OnWM_ConsultaInventarioPosicionOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaInventarioPosicion", New Object() {pIdInventario, prmEstacion, prmUsuario}, Me.WM_ConsultaInventarioPosicionOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaInventarioPosicionOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaInventarioPosicionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaInventarioPosicionCompleted(Me, New WM_ConsultaInventarioPosicionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_INVConsultaUbicacion", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_INVConsultaUbicacion(ByVal prmIdInventario As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_INVConsultaUbicacion", New Object() {prmIdInventario, prmUbicacion, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_INVConsultaUbicacionAsync(ByVal prmIdInventario As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_INVConsultaUbicacionAsync(prmIdInventario, prmUbicacion, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_INVConsultaUbicacionAsync(ByVal prmIdInventario As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_INVConsultaUbicacionOperationCompleted Is Nothing) Then
                Me.WM_INVConsultaUbicacionOperationCompleted = AddressOf Me.OnWM_INVConsultaUbicacionOperationCompleted
            End If
            Me.InvokeAsync("WM_INVConsultaUbicacion", New Object() {prmIdInventario, prmUbicacion, prmEstacion, prmUsuario}, Me.WM_INVConsultaUbicacionOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_INVConsultaUbicacionOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_INVConsultaUbicacionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_INVConsultaUbicacionCompleted(Me, New WM_INVConsultaUbicacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_EmpaquesPorPisoInventario", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_EmpaquesPorPisoInventario(ByVal prmIdInventario As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_EmpaquesPorPisoInventario", New Object() {prmIdInventario, prmUbicacion, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_EmpaquesPorPisoInventarioAsync(ByVal prmIdInventario As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_EmpaquesPorPisoInventarioAsync(prmIdInventario, prmUbicacion, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_EmpaquesPorPisoInventarioAsync(ByVal prmIdInventario As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_EmpaquesPorPisoInventarioOperationCompleted Is Nothing) Then
                Me.WM_EmpaquesPorPisoInventarioOperationCompleted = AddressOf Me.OnWM_EmpaquesPorPisoInventarioOperationCompleted
            End If
            Me.InvokeAsync("WM_EmpaquesPorPisoInventario", New Object() {prmIdInventario, prmUbicacion, prmEstacion, prmUsuario}, Me.WM_EmpaquesPorPisoInventarioOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_EmpaquesPorPisoInventarioOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_EmpaquesPorPisoInventarioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_EmpaquesPorPisoInventarioCompleted(Me, New WM_EmpaquesPorPisoInventarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaPalletInventario", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaPalletInventario(ByVal prmIdInventario As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaPalletInventario", New Object() {prmIdInventario, prmPallet, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaPalletInventarioAsync(ByVal prmIdInventario As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaPalletInventarioAsync(prmIdInventario, prmPallet, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaPalletInventarioAsync(ByVal prmIdInventario As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaPalletInventarioOperationCompleted Is Nothing) Then
                Me.WM_ConsultaPalletInventarioOperationCompleted = AddressOf Me.OnWM_ConsultaPalletInventarioOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaPalletInventario", New Object() {prmIdInventario, prmPallet, prmEstacion, prmUsuario}, Me.WM_ConsultaPalletInventarioOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaPalletInventarioOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaPalletInventarioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaPalletInventarioCompleted(Me, New WM_ConsultaPalletInventarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaEmpaquesPorPalletInventario", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaEmpaquesPorPalletInventario(ByVal prmIdInventario As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaEmpaquesPorPalletInventario", New Object() {prmIdInventario, prmPallet, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaEmpaquesPorPalletInventarioAsync(ByVal prmIdInventario As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaEmpaquesPorPalletInventarioAsync(prmIdInventario, prmPallet, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaEmpaquesPorPalletInventarioAsync(ByVal prmIdInventario As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaEmpaquesPorPalletInventarioOperationCompleted Is Nothing) Then
                Me.WM_ConsultaEmpaquesPorPalletInventarioOperationCompleted = AddressOf Me.OnWM_ConsultaEmpaquesPorPalletInventarioOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaEmpaquesPorPalletInventario", New Object() {prmIdInventario, prmPallet, prmEstacion, prmUsuario}, Me.WM_ConsultaEmpaquesPorPalletInventarioOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaEmpaquesPorPalletInventarioOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaEmpaquesPorPalletInventarioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaEmpaquesPorPalletInventarioCompleted(Me, New WM_ConsultaEmpaquesPorPalletInventarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaEmpaquesPosicionPickingInv", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaEmpaquesPosicionPickingInv(ByVal prmIdInventario As String, ByVal prmPosicion As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaEmpaquesPosicionPickingInv", New Object() {prmIdInventario, prmPosicion, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaEmpaquesPosicionPickingInvAsync(ByVal prmIdInventario As String, ByVal prmPosicion As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaEmpaquesPosicionPickingInvAsync(prmIdInventario, prmPosicion, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaEmpaquesPosicionPickingInvAsync(ByVal prmIdInventario As String, ByVal prmPosicion As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaEmpaquesPosicionPickingInvOperationCompleted Is Nothing) Then
                Me.WM_ConsultaEmpaquesPosicionPickingInvOperationCompleted = AddressOf Me.OnWM_ConsultaEmpaquesPosicionPickingInvOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaEmpaquesPosicionPickingInv", New Object() {prmIdInventario, prmPosicion, prmEstacion, prmUsuario}, Me.WM_ConsultaEmpaquesPosicionPickingInvOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaEmpaquesPosicionPickingInvOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaEmpaquesPosicionPickingInvCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaEmpaquesPosicionPickingInvCompleted(Me, New WM_ConsultaEmpaquesPosicionPickingInvCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_DetallePedimentos", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_DetallePedimentos(ByVal prmContenedor As String, ByVal prmPedimento As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_DetallePedimentos", New Object() {prmContenedor, prmPedimento, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_DetallePedimentosAsync(ByVal prmContenedor As String, ByVal prmPedimento As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_DetallePedimentosAsync(prmContenedor, prmPedimento, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_DetallePedimentosAsync(ByVal prmContenedor As String, ByVal prmPedimento As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_DetallePedimentosOperationCompleted Is Nothing) Then
                Me.WM_DetallePedimentosOperationCompleted = AddressOf Me.OnWM_DetallePedimentosOperationCompleted
            End If
            Me.InvokeAsync("WM_DetallePedimentos", New Object() {prmContenedor, prmPedimento, prmEstacion, prmUsuario}, Me.WM_DetallePedimentosOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_DetallePedimentosOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_DetallePedimentosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_DetallePedimentosCompleted(Me, New WM_DetallePedimentosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function HelloWorld() As String
            Dim results() As Object = Me.Invoke("HelloWorld", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub HelloWorldAsync()
            Me.HelloWorldAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub HelloWorldAsync(ByVal userState As Object)
            If (Me.HelloWorldOperationCompleted Is Nothing) Then
                Me.HelloWorldOperationCompleted = AddressOf Me.OnHelloWorldOperationCompleted
            End If
            Me.InvokeAsync("HelloWorld", New Object(-1) {}, Me.HelloWorldOperationCompleted, userState)
        End Sub
        
        Private Sub OnHelloWorldOperationCompleted(ByVal arg As Object)
            If (Not (Me.HelloWorldCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent HelloWorldCompleted(Me, New HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ComprobacionBD", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ComprobacionBD() As Boolean
            Dim results() As Object = Me.Invoke("WM_ComprobacionBD", New Object(-1) {})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ComprobacionBDAsync()
            Me.WM_ComprobacionBDAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ComprobacionBDAsync(ByVal userState As Object)
            If (Me.WM_ComprobacionBDOperationCompleted Is Nothing) Then
                Me.WM_ComprobacionBDOperationCompleted = AddressOf Me.OnWM_ComprobacionBDOperationCompleted
            End If
            Me.InvokeAsync("WM_ComprobacionBD", New Object(-1) {}, Me.WM_ComprobacionBDOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ComprobacionBDOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ComprobacionBDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ComprobacionBDCompleted(Me, New WM_ComprobacionBDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ListaImpresoras", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ListaImpresoras() As CResultado
            Dim results() As Object = Me.Invoke("WM_ListaImpresoras", New Object(-1) {})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ListaImpresorasAsync()
            Me.WM_ListaImpresorasAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ListaImpresorasAsync(ByVal userState As Object)
            If (Me.WM_ListaImpresorasOperationCompleted Is Nothing) Then
                Me.WM_ListaImpresorasOperationCompleted = AddressOf Me.OnWM_ListaImpresorasOperationCompleted
            End If
            Me.InvokeAsync("WM_ListaImpresoras", New Object(-1) {}, Me.WM_ListaImpresorasOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ListaImpresorasOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ListaImpresorasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ListaImpresorasCompleted(Me, New WM_ListaImpresorasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ImprimePK", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub WM_ImprimePK(ByVal prmSerie As String, ByVal prmProveedor As String, ByVal prmEstacion As String, ByVal prmImpresora As String)
            Me.Invoke("WM_ImprimePK", New Object() {prmSerie, prmProveedor, prmEstacion, prmImpresora})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ImprimePKAsync(ByVal prmSerie As String, ByVal prmProveedor As String, ByVal prmEstacion As String, ByVal prmImpresora As String)
            Me.WM_ImprimePKAsync(prmSerie, prmProveedor, prmEstacion, prmImpresora, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ImprimePKAsync(ByVal prmSerie As String, ByVal prmProveedor As String, ByVal prmEstacion As String, ByVal prmImpresora As String, ByVal userState As Object)
            If (Me.WM_ImprimePKOperationCompleted Is Nothing) Then
                Me.WM_ImprimePKOperationCompleted = AddressOf Me.OnWM_ImprimePKOperationCompleted
            End If
            Me.InvokeAsync("WM_ImprimePK", New Object() {prmSerie, prmProveedor, prmEstacion, prmImpresora}, Me.WM_ImprimePKOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ImprimePKOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ImprimePKCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ImprimePKCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ReImprimePK", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ReImprimePK(ByVal prmPicking As String, ByVal prmEstacion As String, ByVal prmImpresora As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ReImprimePK", New Object() {prmPicking, prmEstacion, prmImpresora, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ReImprimePKAsync(ByVal prmPicking As String, ByVal prmEstacion As String, ByVal prmImpresora As String, ByVal prmUsuario As String)
            Me.WM_ReImprimePKAsync(prmPicking, prmEstacion, prmImpresora, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ReImprimePKAsync(ByVal prmPicking As String, ByVal prmEstacion As String, ByVal prmImpresora As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ReImprimePKOperationCompleted Is Nothing) Then
                Me.WM_ReImprimePKOperationCompleted = AddressOf Me.OnWM_ReImprimePKOperationCompleted
            End If
            Me.InvokeAsync("WM_ReImprimePK", New Object() {prmPicking, prmEstacion, prmImpresora, prmUsuario}, Me.WM_ReImprimePKOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ReImprimePKOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ReImprimePKCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ReImprimePKCompleted(Me, New WM_ReImprimePKCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_CapturaEmpaque", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_CapturaEmpaque(ByVal prmEmpaque As String, ByVal prmEstacion As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_CapturaEmpaque", New Object() {prmEmpaque, prmEstacion})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_CapturaEmpaqueAsync(ByVal prmEmpaque As String, ByVal prmEstacion As String)
            Me.WM_CapturaEmpaqueAsync(prmEmpaque, prmEstacion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_CapturaEmpaqueAsync(ByVal prmEmpaque As String, ByVal prmEstacion As String, ByVal userState As Object)
            If (Me.WM_CapturaEmpaqueOperationCompleted Is Nothing) Then
                Me.WM_CapturaEmpaqueOperationCompleted = AddressOf Me.OnWM_CapturaEmpaqueOperationCompleted
            End If
            Me.InvokeAsync("WM_CapturaEmpaque", New Object() {prmEmpaque, prmEstacion}, Me.WM_CapturaEmpaqueOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_CapturaEmpaqueOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_CapturaEmpaqueCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_CapturaEmpaqueCompleted(Me, New WM_CapturaEmpaqueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ReImprimeSubensamble", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ReImprimeSubensamble(ByVal prmNoParte As String, ByVal prmSerie As String, ByVal prmCantidadEtiquetas As Integer, ByVal prmCantidad As Double, ByVal prmImpresora As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ReImprimeSubensamble", New Object() {prmNoParte, prmSerie, prmCantidadEtiquetas, prmCantidad, prmImpresora})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ReImprimeSubensambleAsync(ByVal prmNoParte As String, ByVal prmSerie As String, ByVal prmCantidadEtiquetas As Integer, ByVal prmCantidad As Double, ByVal prmImpresora As String)
            Me.WM_ReImprimeSubensambleAsync(prmNoParte, prmSerie, prmCantidadEtiquetas, prmCantidad, prmImpresora, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ReImprimeSubensambleAsync(ByVal prmNoParte As String, ByVal prmSerie As String, ByVal prmCantidadEtiquetas As Integer, ByVal prmCantidad As Double, ByVal prmImpresora As String, ByVal userState As Object)
            If (Me.WM_ReImprimeSubensambleOperationCompleted Is Nothing) Then
                Me.WM_ReImprimeSubensambleOperationCompleted = AddressOf Me.OnWM_ReImprimeSubensambleOperationCompleted
            End If
            Me.InvokeAsync("WM_ReImprimeSubensamble", New Object() {prmNoParte, prmSerie, prmCantidadEtiquetas, prmCantidad, prmImpresora}, Me.WM_ReImprimeSubensambleOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ReImprimeSubensambleOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ReImprimeSubensambleCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ReImprimeSubensambleCompleted(Me, New WM_ReImprimeSubensambleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaLinea", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaLinea(ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaLinea", New Object() {prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaLineaAsync(ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaLineaAsync(prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaLineaAsync(ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaLineaOperationCompleted Is Nothing) Then
                Me.WM_ConsultaLineaOperationCompleted = AddressOf Me.OnWM_ConsultaLineaOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaLinea", New Object() {prmEstacion, prmUsuario}, Me.WM_ConsultaLineaOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaLineaOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaLineaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaLineaCompleted(Me, New WM_ConsultaLineaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ListaMercados", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ListaMercados(ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ListaMercados", New Object() {prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ListaMercadosAsync(ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ListaMercadosAsync(prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ListaMercadosAsync(ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ListaMercadosOperationCompleted Is Nothing) Then
                Me.WM_ListaMercadosOperationCompleted = AddressOf Me.OnWM_ListaMercadosOperationCompleted
            End If
            Me.InvokeAsync("WM_ListaMercados", New Object() {prmEstacion, prmUsuario}, Me.WM_ListaMercadosOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ListaMercadosOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ListaMercadosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ListaMercadosCompleted(Me, New WM_ListaMercadosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_CambiaMercado", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_CambiaMercado(ByVal prmCodigoPallet As String, ByVal prmMercado As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_CambiaMercado", New Object() {prmCodigoPallet, prmMercado, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_CambiaMercadoAsync(ByVal prmCodigoPallet As String, ByVal prmMercado As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_CambiaMercadoAsync(prmCodigoPallet, prmMercado, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_CambiaMercadoAsync(ByVal prmCodigoPallet As String, ByVal prmMercado As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_CambiaMercadoOperationCompleted Is Nothing) Then
                Me.WM_CambiaMercadoOperationCompleted = AddressOf Me.OnWM_CambiaMercadoOperationCompleted
            End If
            Me.InvokeAsync("WM_CambiaMercado", New Object() {prmCodigoPallet, prmMercado, prmEstacion, prmUsuario}, Me.WM_CambiaMercadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_CambiaMercadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_CambiaMercadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_CambiaMercadoCompleted(Me, New WM_CambiaMercadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ReimprimirEtiquetasMercado", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ReimprimirEtiquetasMercado(ByVal prmCodigoPallet As String, ByVal prmImpresora As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ReimprimirEtiquetasMercado", New Object() {prmCodigoPallet, prmImpresora, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ReimprimirEtiquetasMercadoAsync(ByVal prmCodigoPallet As String, ByVal prmImpresora As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ReimprimirEtiquetasMercadoAsync(prmCodigoPallet, prmImpresora, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ReimprimirEtiquetasMercadoAsync(ByVal prmCodigoPallet As String, ByVal prmImpresora As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ReimprimirEtiquetasMercadoOperationCompleted Is Nothing) Then
                Me.WM_ReimprimirEtiquetasMercadoOperationCompleted = AddressOf Me.OnWM_ReimprimirEtiquetasMercadoOperationCompleted
            End If
            Me.InvokeAsync("WM_ReimprimirEtiquetasMercado", New Object() {prmCodigoPallet, prmImpresora, prmEstacion, prmUsuario}, Me.WM_ReimprimirEtiquetasMercadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ReimprimirEtiquetasMercadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ReimprimirEtiquetasMercadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ReimprimirEtiquetasMercadoCompleted(Me, New WM_ReimprimirEtiquetasMercadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_Login", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_Login(ByVal prmUsuario As String, ByVal prmPassword As String, ByVal prmEstacion As String, ByVal prmAutorizacion As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_Login", New Object() {prmUsuario, prmPassword, prmEstacion, prmAutorizacion})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_LoginAsync(ByVal prmUsuario As String, ByVal prmPassword As String, ByVal prmEstacion As String, ByVal prmAutorizacion As String)
            Me.WM_LoginAsync(prmUsuario, prmPassword, prmEstacion, prmAutorizacion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_LoginAsync(ByVal prmUsuario As String, ByVal prmPassword As String, ByVal prmEstacion As String, ByVal prmAutorizacion As String, ByVal userState As Object)
            If (Me.WM_LoginOperationCompleted Is Nothing) Then
                Me.WM_LoginOperationCompleted = AddressOf Me.OnWM_LoginOperationCompleted
            End If
            Me.InvokeAsync("WM_Login", New Object() {prmUsuario, prmPassword, prmEstacion, prmAutorizacion}, Me.WM_LoginOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_LoginOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_LoginCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_LoginCompleted(Me, New WM_LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaAreas", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaAreas(ByVal prmEstacion As String, ByVal prmVersion As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaAreas", New Object() {prmEstacion, prmVersion})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaAreasAsync(ByVal prmEstacion As String, ByVal prmVersion As String)
            Me.WM_ConsultaAreasAsync(prmEstacion, prmVersion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaAreasAsync(ByVal prmEstacion As String, ByVal prmVersion As String, ByVal userState As Object)
            If (Me.WM_ConsultaAreasOperationCompleted Is Nothing) Then
                Me.WM_ConsultaAreasOperationCompleted = AddressOf Me.OnWM_ConsultaAreasOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaAreas", New Object() {prmEstacion, prmVersion}, Me.WM_ConsultaAreasOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaAreasOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaAreasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaAreasCompleted(Me, New WM_ConsultaAreasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ActualizaArea", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ActualizaArea(ByVal prmArea As String, ByVal prmEstacion As String, ByVal prmVersion As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ActualizaArea", New Object() {prmArea, prmEstacion, prmVersion})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ActualizaAreaAsync(ByVal prmArea As String, ByVal prmEstacion As String, ByVal prmVersion As String)
            Me.WM_ActualizaAreaAsync(prmArea, prmEstacion, prmVersion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ActualizaAreaAsync(ByVal prmArea As String, ByVal prmEstacion As String, ByVal prmVersion As String, ByVal userState As Object)
            If (Me.WM_ActualizaAreaOperationCompleted Is Nothing) Then
                Me.WM_ActualizaAreaOperationCompleted = AddressOf Me.OnWM_ActualizaAreaOperationCompleted
            End If
            Me.InvokeAsync("WM_ActualizaArea", New Object() {prmArea, prmEstacion, prmVersion}, Me.WM_ActualizaAreaOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ActualizaAreaOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ActualizaAreaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ActualizaAreaCompleted(Me, New WM_ActualizaAreaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaVersion", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaVersion(ByVal prmUsuario As String, ByVal prmEstacion As String, ByVal prmVersion As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaVersion", New Object() {prmUsuario, prmEstacion, prmVersion})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaVersionAsync(ByVal prmUsuario As String, ByVal prmEstacion As String, ByVal prmVersion As String)
            Me.WM_ConsultaVersionAsync(prmUsuario, prmEstacion, prmVersion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaVersionAsync(ByVal prmUsuario As String, ByVal prmEstacion As String, ByVal prmVersion As String, ByVal userState As Object)
            If (Me.WM_ConsultaVersionOperationCompleted Is Nothing) Then
                Me.WM_ConsultaVersionOperationCompleted = AddressOf Me.OnWM_ConsultaVersionOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaVersion", New Object() {prmUsuario, prmEstacion, prmVersion}, Me.WM_ConsultaVersionOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaVersionOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaVersionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaVersionCompleted(Me, New WM_ConsultaVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultarNotificaciones", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultarNotificaciones(ByVal prmId As String, ByVal prmEstacion As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultarNotificaciones", New Object() {prmId, prmEstacion})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultarNotificacionesAsync(ByVal prmId As String, ByVal prmEstacion As String)
            Me.WM_ConsultarNotificacionesAsync(prmId, prmEstacion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultarNotificacionesAsync(ByVal prmId As String, ByVal prmEstacion As String, ByVal userState As Object)
            If (Me.WM_ConsultarNotificacionesOperationCompleted Is Nothing) Then
                Me.WM_ConsultarNotificacionesOperationCompleted = AddressOf Me.OnWM_ConsultarNotificacionesOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultarNotificaciones", New Object() {prmId, prmEstacion}, Me.WM_ConsultarNotificacionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultarNotificacionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultarNotificacionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultarNotificacionesCompleted(Me, New WM_ConsultarNotificacionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ImprimeCredenciales", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ImprimeCredenciales(ByVal prmUsuario As String, ByVal prmPassword As String, ByVal prmImpresora As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ImprimeCredenciales", New Object() {prmUsuario, prmPassword, prmImpresora})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ImprimeCredencialesAsync(ByVal prmUsuario As String, ByVal prmPassword As String, ByVal prmImpresora As String)
            Me.WM_ImprimeCredencialesAsync(prmUsuario, prmPassword, prmImpresora, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ImprimeCredencialesAsync(ByVal prmUsuario As String, ByVal prmPassword As String, ByVal prmImpresora As String, ByVal userState As Object)
            If (Me.WM_ImprimeCredencialesOperationCompleted Is Nothing) Then
                Me.WM_ImprimeCredencialesOperationCompleted = AddressOf Me.OnWM_ImprimeCredencialesOperationCompleted
            End If
            Me.InvokeAsync("WM_ImprimeCredenciales", New Object() {prmUsuario, prmPassword, prmImpresora}, Me.WM_ImprimeCredencialesOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ImprimeCredencialesOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ImprimeCredencialesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ImprimeCredencialesCompleted(Me, New WM_ImprimeCredencialesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_OCRegistrarEmpaqueDaP", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_OCRegistrarEmpaqueDaP(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmCodigoEmpaque As String, ByVal prmLoteProveedor As String, ByVal prmCantidad As Double, ByVal prmEmpaques As Integer, ByVal prmPosicionPiso As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_OCRegistrarEmpaqueDaP", New Object() {prmOrdenCompra, prmPartida, prmCodigoEmpaque, prmLoteProveedor, prmCantidad, prmEmpaques, prmPosicionPiso, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_OCRegistrarEmpaqueDaPAsync(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmCodigoEmpaque As String, ByVal prmLoteProveedor As String, ByVal prmCantidad As Double, ByVal prmEmpaques As Integer, ByVal prmPosicionPiso As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_OCRegistrarEmpaqueDaPAsync(prmOrdenCompra, prmPartida, prmCodigoEmpaque, prmLoteProveedor, prmCantidad, prmEmpaques, prmPosicionPiso, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_OCRegistrarEmpaqueDaPAsync(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmCodigoEmpaque As String, ByVal prmLoteProveedor As String, ByVal prmCantidad As Double, ByVal prmEmpaques As Integer, ByVal prmPosicionPiso As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_OCRegistrarEmpaqueDaPOperationCompleted Is Nothing) Then
                Me.WM_OCRegistrarEmpaqueDaPOperationCompleted = AddressOf Me.OnWM_OCRegistrarEmpaqueDaPOperationCompleted
            End If
            Me.InvokeAsync("WM_OCRegistrarEmpaqueDaP", New Object() {prmOrdenCompra, prmPartida, prmCodigoEmpaque, prmLoteProveedor, prmCantidad, prmEmpaques, prmPosicionPiso, prmEstacion, prmUsuario}, Me.WM_OCRegistrarEmpaqueDaPOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_OCRegistrarEmpaqueDaPOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_OCRegistrarEmpaqueDaPCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_OCRegistrarEmpaqueDaPCompleted(Me, New WM_OCRegistrarEmpaqueDaPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_OrdenCompraLiberada", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_OrdenCompraLiberada(ByVal prmOrdenCompra As String) As COrdenesCompra
            Dim results() As Object = Me.Invoke("WM_OrdenCompraLiberada", New Object() {prmOrdenCompra})
            Return CType(results(0),COrdenesCompra)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_OrdenCompraLiberadaAsync(ByVal prmOrdenCompra As String)
            Me.WM_OrdenCompraLiberadaAsync(prmOrdenCompra, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_OrdenCompraLiberadaAsync(ByVal prmOrdenCompra As String, ByVal userState As Object)
            If (Me.WM_OrdenCompraLiberadaOperationCompleted Is Nothing) Then
                Me.WM_OrdenCompraLiberadaOperationCompleted = AddressOf Me.OnWM_OrdenCompraLiberadaOperationCompleted
            End If
            Me.InvokeAsync("WM_OrdenCompraLiberada", New Object() {prmOrdenCompra}, Me.WM_OrdenCompraLiberadaOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_OrdenCompraLiberadaOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_OrdenCompraLiberadaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_OrdenCompraLiberadaCompleted(Me, New WM_OrdenCompraLiberadaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ListarPartidasOCLiberadas", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ListarPartidasOCLiberadas(ByVal prmOrdenCompra As String, ByVal prmEstacion As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ListarPartidasOCLiberadas", New Object() {prmOrdenCompra, prmEstacion})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ListarPartidasOCLiberadasAsync(ByVal prmOrdenCompra As String, ByVal prmEstacion As String)
            Me.WM_ListarPartidasOCLiberadasAsync(prmOrdenCompra, prmEstacion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ListarPartidasOCLiberadasAsync(ByVal prmOrdenCompra As String, ByVal prmEstacion As String, ByVal userState As Object)
            If (Me.WM_ListarPartidasOCLiberadasOperationCompleted Is Nothing) Then
                Me.WM_ListarPartidasOCLiberadasOperationCompleted = AddressOf Me.OnWM_ListarPartidasOCLiberadasOperationCompleted
            End If
            Me.InvokeAsync("WM_ListarPartidasOCLiberadas", New Object() {prmOrdenCompra, prmEstacion}, Me.WM_ListarPartidasOCLiberadasOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ListarPartidasOCLiberadasOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ListarPartidasOCLiberadasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ListarPartidasOCLiberadasCompleted(Me, New WM_ListarPartidasOCLiberadasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ListarPartidasOCEnProceso", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ListarPartidasOCEnProceso(ByVal prmOrdenCompra As String, ByVal prmEstacion As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ListarPartidasOCEnProceso", New Object() {prmOrdenCompra, prmEstacion})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ListarPartidasOCEnProcesoAsync(ByVal prmOrdenCompra As String, ByVal prmEstacion As String)
            Me.WM_ListarPartidasOCEnProcesoAsync(prmOrdenCompra, prmEstacion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ListarPartidasOCEnProcesoAsync(ByVal prmOrdenCompra As String, ByVal prmEstacion As String, ByVal userState As Object)
            If (Me.WM_ListarPartidasOCEnProcesoOperationCompleted Is Nothing) Then
                Me.WM_ListarPartidasOCEnProcesoOperationCompleted = AddressOf Me.OnWM_ListarPartidasOCEnProcesoOperationCompleted
            End If
            Me.InvokeAsync("WM_ListarPartidasOCEnProceso", New Object() {prmOrdenCompra, prmEstacion}, Me.WM_ListarPartidasOCEnProcesoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ListarPartidasOCEnProcesoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ListarPartidasOCEnProcesoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ListarPartidasOCEnProcesoCompleted(Me, New WM_ListarPartidasOCEnProcesoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_DetalleReciboPartida", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_DetalleReciboPartida(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_DetalleReciboPartida", New Object() {prmOrdenCompra, prmPartida, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_DetalleReciboPartidaAsync(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_DetalleReciboPartidaAsync(prmOrdenCompra, prmPartida, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_DetalleReciboPartidaAsync(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_DetalleReciboPartidaOperationCompleted Is Nothing) Then
                Me.WM_DetalleReciboPartidaOperationCompleted = AddressOf Me.OnWM_DetalleReciboPartidaOperationCompleted
            End If
            Me.InvokeAsync("WM_DetalleReciboPartida", New Object() {prmOrdenCompra, prmPartida, prmEstacion, prmUsuario}, Me.WM_DetalleReciboPartidaOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_DetalleReciboPartidaOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_DetalleReciboPartidaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_DetalleReciboPartidaCompleted(Me, New WM_DetalleReciboPartidaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ListarOrdenesCompraLiberadas", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ListarOrdenesCompraLiberadas(ByVal prmEstacion As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ListarOrdenesCompraLiberadas", New Object() {prmEstacion})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ListarOrdenesCompraLiberadasAsync(ByVal prmEstacion As String)
            Me.WM_ListarOrdenesCompraLiberadasAsync(prmEstacion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ListarOrdenesCompraLiberadasAsync(ByVal prmEstacion As String, ByVal userState As Object)
            If (Me.WM_ListarOrdenesCompraLiberadasOperationCompleted Is Nothing) Then
                Me.WM_ListarOrdenesCompraLiberadasOperationCompleted = AddressOf Me.OnWM_ListarOrdenesCompraLiberadasOperationCompleted
            End If
            Me.InvokeAsync("WM_ListarOrdenesCompraLiberadas", New Object() {prmEstacion}, Me.WM_ListarOrdenesCompraLiberadasOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ListarOrdenesCompraLiberadasOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ListarOrdenesCompraLiberadasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ListarOrdenesCompraLiberadasCompleted(Me, New WM_ListarOrdenesCompraLiberadasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ListarLotesOC", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ListarLotesOC(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmNumParte As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ListarLotesOC", New Object() {prmOrdenCompra, prmPartida, prmNumParte, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ListarLotesOCAsync(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmNumParte As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ListarLotesOCAsync(prmOrdenCompra, prmPartida, prmNumParte, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ListarLotesOCAsync(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmNumParte As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ListarLotesOCOperationCompleted Is Nothing) Then
                Me.WM_ListarLotesOCOperationCompleted = AddressOf Me.OnWM_ListarLotesOCOperationCompleted
            End If
            Me.InvokeAsync("WM_ListarLotesOC", New Object() {prmOrdenCompra, prmPartida, prmNumParte, prmEstacion, prmUsuario}, Me.WM_ListarLotesOCOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ListarLotesOCOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ListarLotesOCCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ListarLotesOCCompleted(Me, New WM_ListarLotesOCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_OCRegistrarEmpaqueCompra", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_OCRegistrarEmpaqueCompra(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmCodigoEmpaque As String, ByVal prmLoteProveedor As String, ByVal prmCantidad As Double, ByVal prmEmpaques As Integer, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_OCRegistrarEmpaqueCompra", New Object() {prmOrdenCompra, prmPartida, prmCodigoEmpaque, prmLoteProveedor, prmCantidad, prmEmpaques, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_OCRegistrarEmpaqueCompraAsync(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmCodigoEmpaque As String, ByVal prmLoteProveedor As String, ByVal prmCantidad As Double, ByVal prmEmpaques As Integer, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_OCRegistrarEmpaqueCompraAsync(prmOrdenCompra, prmPartida, prmCodigoEmpaque, prmLoteProveedor, prmCantidad, prmEmpaques, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_OCRegistrarEmpaqueCompraAsync(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmCodigoEmpaque As String, ByVal prmLoteProveedor As String, ByVal prmCantidad As Double, ByVal prmEmpaques As Integer, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_OCRegistrarEmpaqueCompraOperationCompleted Is Nothing) Then
                Me.WM_OCRegistrarEmpaqueCompraOperationCompleted = AddressOf Me.OnWM_OCRegistrarEmpaqueCompraOperationCompleted
            End If
            Me.InvokeAsync("WM_OCRegistrarEmpaqueCompra", New Object() {prmOrdenCompra, prmPartida, prmCodigoEmpaque, prmLoteProveedor, prmCantidad, prmEmpaques, prmEstacion, prmUsuario}, Me.WM_OCRegistrarEmpaqueCompraOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_OCRegistrarEmpaqueCompraOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_OCRegistrarEmpaqueCompraCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_OCRegistrarEmpaqueCompraCompleted(Me, New WM_OCRegistrarEmpaqueCompraCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_OCRegistrarPalletCompra_NE", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_OCRegistrarPalletCompra_NE(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmLoteProveedor As String, ByVal prmCantidad As Double, ByVal prmEmpaques As Integer, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_OCRegistrarPalletCompra_NE", New Object() {prmOrdenCompra, prmPartida, prmLoteProveedor, prmCantidad, prmEmpaques, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_OCRegistrarPalletCompra_NEAsync(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmLoteProveedor As String, ByVal prmCantidad As Double, ByVal prmEmpaques As Integer, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_OCRegistrarPalletCompra_NEAsync(prmOrdenCompra, prmPartida, prmLoteProveedor, prmCantidad, prmEmpaques, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_OCRegistrarPalletCompra_NEAsync(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmLoteProveedor As String, ByVal prmCantidad As Double, ByVal prmEmpaques As Integer, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_OCRegistrarPalletCompra_NEOperationCompleted Is Nothing) Then
                Me.WM_OCRegistrarPalletCompra_NEOperationCompleted = AddressOf Me.OnWM_OCRegistrarPalletCompra_NEOperationCompleted
            End If
            Me.InvokeAsync("WM_OCRegistrarPalletCompra_NE", New Object() {prmOrdenCompra, prmPartida, prmLoteProveedor, prmCantidad, prmEmpaques, prmEstacion, prmUsuario}, Me.WM_OCRegistrarPalletCompra_NEOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_OCRegistrarPalletCompra_NEOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_OCRegistrarPalletCompra_NECompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_OCRegistrarPalletCompra_NECompleted(Me, New WM_OCRegistrarPalletCompra_NECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_RegistrarRefaccionesSKU", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_RegistrarRefaccionesSKU(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmCantidad As Integer, ByVal prmSKU As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_RegistrarRefaccionesSKU", New Object() {prmOrdenCompra, prmPartida, prmCantidad, prmSKU, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_RegistrarRefaccionesSKUAsync(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmCantidad As Integer, ByVal prmSKU As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_RegistrarRefaccionesSKUAsync(prmOrdenCompra, prmPartida, prmCantidad, prmSKU, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_RegistrarRefaccionesSKUAsync(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmCantidad As Integer, ByVal prmSKU As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_RegistrarRefaccionesSKUOperationCompleted Is Nothing) Then
                Me.WM_RegistrarRefaccionesSKUOperationCompleted = AddressOf Me.OnWM_RegistrarRefaccionesSKUOperationCompleted
            End If
            Me.InvokeAsync("WM_RegistrarRefaccionesSKU", New Object() {prmOrdenCompra, prmPartida, prmCantidad, prmSKU, prmEstacion, prmUsuario}, Me.WM_RegistrarRefaccionesSKUOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_RegistrarRefaccionesSKUOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_RegistrarRefaccionesSKUCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_RegistrarRefaccionesSKUCompleted(Me, New WM_RegistrarRefaccionesSKUCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_RegistrarRefaccionesSKUPiezas", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_RegistrarRefaccionesSKUPiezas(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmCantidad As Double, ByVal prmSKU As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_RegistrarRefaccionesSKUPiezas", New Object() {prmOrdenCompra, prmPartida, prmCantidad, prmSKU, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_RegistrarRefaccionesSKUPiezasAsync(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmCantidad As Double, ByVal prmSKU As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_RegistrarRefaccionesSKUPiezasAsync(prmOrdenCompra, prmPartida, prmCantidad, prmSKU, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_RegistrarRefaccionesSKUPiezasAsync(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmCantidad As Double, ByVal prmSKU As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_RegistrarRefaccionesSKUPiezasOperationCompleted Is Nothing) Then
                Me.WM_RegistrarRefaccionesSKUPiezasOperationCompleted = AddressOf Me.OnWM_RegistrarRefaccionesSKUPiezasOperationCompleted
            End If
            Me.InvokeAsync("WM_RegistrarRefaccionesSKUPiezas", New Object() {prmOrdenCompra, prmPartida, prmCantidad, prmSKU, prmEstacion, prmUsuario}, Me.WM_RegistrarRefaccionesSKUPiezasOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_RegistrarRefaccionesSKUPiezasOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_RegistrarRefaccionesSKUPiezasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_RegistrarRefaccionesSKUPiezasCompleted(Me, New WM_RegistrarRefaccionesSKUPiezasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_RegistrarPalletGranel", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_RegistrarPalletGranel(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmLoteProveedor As String, ByVal prmCantidad As Double, ByVal prmEmpaques As Integer, ByVal prmPosicion As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_RegistrarPalletGranel", New Object() {prmOrdenCompra, prmPartida, prmLoteProveedor, prmCantidad, prmEmpaques, prmPosicion, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_RegistrarPalletGranelAsync(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmLoteProveedor As String, ByVal prmCantidad As Double, ByVal prmEmpaques As Integer, ByVal prmPosicion As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_RegistrarPalletGranelAsync(prmOrdenCompra, prmPartida, prmLoteProveedor, prmCantidad, prmEmpaques, prmPosicion, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_RegistrarPalletGranelAsync(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmLoteProveedor As String, ByVal prmCantidad As Double, ByVal prmEmpaques As Integer, ByVal prmPosicion As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_RegistrarPalletGranelOperationCompleted Is Nothing) Then
                Me.WM_RegistrarPalletGranelOperationCompleted = AddressOf Me.OnWM_RegistrarPalletGranelOperationCompleted
            End If
            Me.InvokeAsync("WM_RegistrarPalletGranel", New Object() {prmOrdenCompra, prmPartida, prmLoteProveedor, prmCantidad, prmEmpaques, prmPosicion, prmEstacion, prmUsuario}, Me.WM_RegistrarPalletGranelOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_RegistrarPalletGranelOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_RegistrarPalletGranelCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_RegistrarPalletGranelCompleted(Me, New WM_RegistrarPalletGranelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_OCRegistrarEmpaqueCompra_Mercado", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_OCRegistrarEmpaqueCompra_Mercado(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmCodigoEmpaque As String, ByVal prmLoteProveedor As String, ByVal prmCantidad As Double, ByVal prmEmpaques As Integer, ByVal prmMercado As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_OCRegistrarEmpaqueCompra_Mercado", New Object() {prmOrdenCompra, prmPartida, prmCodigoEmpaque, prmLoteProveedor, prmCantidad, prmEmpaques, prmMercado, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_OCRegistrarEmpaqueCompra_MercadoAsync(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmCodigoEmpaque As String, ByVal prmLoteProveedor As String, ByVal prmCantidad As Double, ByVal prmEmpaques As Integer, ByVal prmMercado As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_OCRegistrarEmpaqueCompra_MercadoAsync(prmOrdenCompra, prmPartida, prmCodigoEmpaque, prmLoteProveedor, prmCantidad, prmEmpaques, prmMercado, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_OCRegistrarEmpaqueCompra_MercadoAsync(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmCodigoEmpaque As String, ByVal prmLoteProveedor As String, ByVal prmCantidad As Double, ByVal prmEmpaques As Integer, ByVal prmMercado As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_OCRegistrarEmpaqueCompra_MercadoOperationCompleted Is Nothing) Then
                Me.WM_OCRegistrarEmpaqueCompra_MercadoOperationCompleted = AddressOf Me.OnWM_OCRegistrarEmpaqueCompra_MercadoOperationCompleted
            End If
            Me.InvokeAsync("WM_OCRegistrarEmpaqueCompra_Mercado", New Object() {prmOrdenCompra, prmPartida, prmCodigoEmpaque, prmLoteProveedor, prmCantidad, prmEmpaques, prmMercado, prmEstacion, prmUsuario}, Me.WM_OCRegistrarEmpaqueCompra_MercadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_OCRegistrarEmpaqueCompra_MercadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_OCRegistrarEmpaqueCompra_MercadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_OCRegistrarEmpaqueCompra_MercadoCompleted(Me, New WM_OCRegistrarEmpaqueCompra_MercadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_RegistrarPalletGranel_Mercado", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_RegistrarPalletGranel_Mercado(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmLoteProveedor As String, ByVal prmCantidad As Double, ByVal prmEmpaques As Integer, ByVal prmPosicion As String, ByVal prmMercado As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_RegistrarPalletGranel_Mercado", New Object() {prmOrdenCompra, prmPartida, prmLoteProveedor, prmCantidad, prmEmpaques, prmPosicion, prmMercado, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_RegistrarPalletGranel_MercadoAsync(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmLoteProveedor As String, ByVal prmCantidad As Double, ByVal prmEmpaques As Integer, ByVal prmPosicion As String, ByVal prmMercado As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_RegistrarPalletGranel_MercadoAsync(prmOrdenCompra, prmPartida, prmLoteProveedor, prmCantidad, prmEmpaques, prmPosicion, prmMercado, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_RegistrarPalletGranel_MercadoAsync(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmLoteProveedor As String, ByVal prmCantidad As Double, ByVal prmEmpaques As Integer, ByVal prmPosicion As String, ByVal prmMercado As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_RegistrarPalletGranel_MercadoOperationCompleted Is Nothing) Then
                Me.WM_RegistrarPalletGranel_MercadoOperationCompleted = AddressOf Me.OnWM_RegistrarPalletGranel_MercadoOperationCompleted
            End If
            Me.InvokeAsync("WM_RegistrarPalletGranel_Mercado", New Object() {prmOrdenCompra, prmPartida, prmLoteProveedor, prmCantidad, prmEmpaques, prmPosicion, prmMercado, prmEstacion, prmUsuario}, Me.WM_RegistrarPalletGranel_MercadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_RegistrarPalletGranel_MercadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_RegistrarPalletGranel_MercadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_RegistrarPalletGranel_MercadoCompleted(Me, New WM_RegistrarPalletGranel_MercadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_OCRegistrarPalletCompra_NE_Mercado", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_OCRegistrarPalletCompra_NE_Mercado(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmLoteProveedor As String, ByVal prmCantidad As Double, ByVal prmEmpaques As Integer, ByVal prmMercado As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_OCRegistrarPalletCompra_NE_Mercado", New Object() {prmOrdenCompra, prmPartida, prmLoteProveedor, prmCantidad, prmEmpaques, prmMercado, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_OCRegistrarPalletCompra_NE_MercadoAsync(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmLoteProveedor As String, ByVal prmCantidad As Double, ByVal prmEmpaques As Integer, ByVal prmMercado As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_OCRegistrarPalletCompra_NE_MercadoAsync(prmOrdenCompra, prmPartida, prmLoteProveedor, prmCantidad, prmEmpaques, prmMercado, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_OCRegistrarPalletCompra_NE_MercadoAsync(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmLoteProveedor As String, ByVal prmCantidad As Double, ByVal prmEmpaques As Integer, ByVal prmMercado As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_OCRegistrarPalletCompra_NE_MercadoOperationCompleted Is Nothing) Then
                Me.WM_OCRegistrarPalletCompra_NE_MercadoOperationCompleted = AddressOf Me.OnWM_OCRegistrarPalletCompra_NE_MercadoOperationCompleted
            End If
            Me.InvokeAsync("WM_OCRegistrarPalletCompra_NE_Mercado", New Object() {prmOrdenCompra, prmPartida, prmLoteProveedor, prmCantidad, prmEmpaques, prmMercado, prmEstacion, prmUsuario}, Me.WM_OCRegistrarPalletCompra_NE_MercadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_OCRegistrarPalletCompra_NE_MercadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_OCRegistrarPalletCompra_NE_MercadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_OCRegistrarPalletCompra_NE_MercadoCompleted(Me, New WM_OCRegistrarPalletCompra_NE_MercadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_OCCreaPalletMPPrimeraUltima_Mercado", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_OCCreaPalletMPPrimeraUltima_Mercado(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmLoteProveedor As String, ByVal prmCantidad As Double, ByVal prmEmpaques As Integer, ByVal prmPrimera As String, ByVal prmUltima As String, ByVal prmCantidadEmpaques As Integer, ByVal prmMercado As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_OCCreaPalletMPPrimeraUltima_Mercado", New Object() {prmOrdenCompra, prmPartida, prmLoteProveedor, prmCantidad, prmEmpaques, prmPrimera, prmUltima, prmCantidadEmpaques, prmMercado, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_OCCreaPalletMPPrimeraUltima_MercadoAsync(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmLoteProveedor As String, ByVal prmCantidad As Double, ByVal prmEmpaques As Integer, ByVal prmPrimera As String, ByVal prmUltima As String, ByVal prmCantidadEmpaques As Integer, ByVal prmMercado As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_OCCreaPalletMPPrimeraUltima_MercadoAsync(prmOrdenCompra, prmPartida, prmLoteProveedor, prmCantidad, prmEmpaques, prmPrimera, prmUltima, prmCantidadEmpaques, prmMercado, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_OCCreaPalletMPPrimeraUltima_MercadoAsync(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmLoteProveedor As String, ByVal prmCantidad As Double, ByVal prmEmpaques As Integer, ByVal prmPrimera As String, ByVal prmUltima As String, ByVal prmCantidadEmpaques As Integer, ByVal prmMercado As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_OCCreaPalletMPPrimeraUltima_MercadoOperationCompleted Is Nothing) Then
                Me.WM_OCCreaPalletMPPrimeraUltima_MercadoOperationCompleted = AddressOf Me.OnWM_OCCreaPalletMPPrimeraUltima_MercadoOperationCompleted
            End If
            Me.InvokeAsync("WM_OCCreaPalletMPPrimeraUltima_Mercado", New Object() {prmOrdenCompra, prmPartida, prmLoteProveedor, prmCantidad, prmEmpaques, prmPrimera, prmUltima, prmCantidadEmpaques, prmMercado, prmEstacion, prmUsuario}, Me.WM_OCCreaPalletMPPrimeraUltima_MercadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_OCCreaPalletMPPrimeraUltima_MercadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_OCCreaPalletMPPrimeraUltima_MercadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_OCCreaPalletMPPrimeraUltima_MercadoCompleted(Me, New WM_OCCreaPalletMPPrimeraUltima_MercadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_OCRegistrarPalletCompra_NE_Mercado_SA", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_OCRegistrarPalletCompra_NE_Mercado_SA(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmLoteProveedor As String, ByVal prmCantidad As Double, ByVal prmEmpaques As Integer, ByVal prmMercado As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_OCRegistrarPalletCompra_NE_Mercado_SA", New Object() {prmOrdenCompra, prmPartida, prmLoteProveedor, prmCantidad, prmEmpaques, prmMercado, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_OCRegistrarPalletCompra_NE_Mercado_SAAsync(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmLoteProveedor As String, ByVal prmCantidad As Double, ByVal prmEmpaques As Integer, ByVal prmMercado As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_OCRegistrarPalletCompra_NE_Mercado_SAAsync(prmOrdenCompra, prmPartida, prmLoteProveedor, prmCantidad, prmEmpaques, prmMercado, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_OCRegistrarPalletCompra_NE_Mercado_SAAsync(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmLoteProveedor As String, ByVal prmCantidad As Double, ByVal prmEmpaques As Integer, ByVal prmMercado As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_OCRegistrarPalletCompra_NE_Mercado_SAOperationCompleted Is Nothing) Then
                Me.WM_OCRegistrarPalletCompra_NE_Mercado_SAOperationCompleted = AddressOf Me.OnWM_OCRegistrarPalletCompra_NE_Mercado_SAOperationCompleted
            End If
            Me.InvokeAsync("WM_OCRegistrarPalletCompra_NE_Mercado_SA", New Object() {prmOrdenCompra, prmPartida, prmLoteProveedor, prmCantidad, prmEmpaques, prmMercado, prmEstacion, prmUsuario}, Me.WM_OCRegistrarPalletCompra_NE_Mercado_SAOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_OCRegistrarPalletCompra_NE_Mercado_SAOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_OCRegistrarPalletCompra_NE_Mercado_SACompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_OCRegistrarPalletCompra_NE_Mercado_SACompleted(Me, New WM_OCRegistrarPalletCompra_NE_Mercado_SACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_OCRegistrarEmpaqueCompra_Mercado_SA", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_OCRegistrarEmpaqueCompra_Mercado_SA(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmCodigoEmpaque As String, ByVal prmLoteProveedor As String, ByVal prmCantidad As Double, ByVal prmEmpaques As Integer, ByVal prmMercado As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_OCRegistrarEmpaqueCompra_Mercado_SA", New Object() {prmOrdenCompra, prmPartida, prmCodigoEmpaque, prmLoteProveedor, prmCantidad, prmEmpaques, prmMercado, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_OCRegistrarEmpaqueCompra_Mercado_SAAsync(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmCodigoEmpaque As String, ByVal prmLoteProveedor As String, ByVal prmCantidad As Double, ByVal prmEmpaques As Integer, ByVal prmMercado As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_OCRegistrarEmpaqueCompra_Mercado_SAAsync(prmOrdenCompra, prmPartida, prmCodigoEmpaque, prmLoteProveedor, prmCantidad, prmEmpaques, prmMercado, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_OCRegistrarEmpaqueCompra_Mercado_SAAsync(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmCodigoEmpaque As String, ByVal prmLoteProveedor As String, ByVal prmCantidad As Double, ByVal prmEmpaques As Integer, ByVal prmMercado As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_OCRegistrarEmpaqueCompra_Mercado_SAOperationCompleted Is Nothing) Then
                Me.WM_OCRegistrarEmpaqueCompra_Mercado_SAOperationCompleted = AddressOf Me.OnWM_OCRegistrarEmpaqueCompra_Mercado_SAOperationCompleted
            End If
            Me.InvokeAsync("WM_OCRegistrarEmpaqueCompra_Mercado_SA", New Object() {prmOrdenCompra, prmPartida, prmCodigoEmpaque, prmLoteProveedor, prmCantidad, prmEmpaques, prmMercado, prmEstacion, prmUsuario}, Me.WM_OCRegistrarEmpaqueCompra_Mercado_SAOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_OCRegistrarEmpaqueCompra_Mercado_SAOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_OCRegistrarEmpaqueCompra_Mercado_SACompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_OCRegistrarEmpaqueCompra_Mercado_SACompleted(Me, New WM_OCRegistrarEmpaqueCompra_Mercado_SACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_RegistrarPalletGranel_Mercado_SA", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_RegistrarPalletGranel_Mercado_SA(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmLoteProveedor As String, ByVal prmCantidad As Double, ByVal prmEmpaques As Integer, ByVal prmPosicion As String, ByVal prmMercado As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_RegistrarPalletGranel_Mercado_SA", New Object() {prmOrdenCompra, prmPartida, prmLoteProveedor, prmCantidad, prmEmpaques, prmPosicion, prmMercado, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_RegistrarPalletGranel_Mercado_SAAsync(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmLoteProveedor As String, ByVal prmCantidad As Double, ByVal prmEmpaques As Integer, ByVal prmPosicion As String, ByVal prmMercado As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_RegistrarPalletGranel_Mercado_SAAsync(prmOrdenCompra, prmPartida, prmLoteProveedor, prmCantidad, prmEmpaques, prmPosicion, prmMercado, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_RegistrarPalletGranel_Mercado_SAAsync(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmLoteProveedor As String, ByVal prmCantidad As Double, ByVal prmEmpaques As Integer, ByVal prmPosicion As String, ByVal prmMercado As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_RegistrarPalletGranel_Mercado_SAOperationCompleted Is Nothing) Then
                Me.WM_RegistrarPalletGranel_Mercado_SAOperationCompleted = AddressOf Me.OnWM_RegistrarPalletGranel_Mercado_SAOperationCompleted
            End If
            Me.InvokeAsync("WM_RegistrarPalletGranel_Mercado_SA", New Object() {prmOrdenCompra, prmPartida, prmLoteProveedor, prmCantidad, prmEmpaques, prmPosicion, prmMercado, prmEstacion, prmUsuario}, Me.WM_RegistrarPalletGranel_Mercado_SAOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_RegistrarPalletGranel_Mercado_SAOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_RegistrarPalletGranel_Mercado_SACompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_RegistrarPalletGranel_Mercado_SACompleted(Me, New WM_RegistrarPalletGranel_Mercado_SACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_OCCreaPalletMPPrimeraUltima_Mercado_SA", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_OCCreaPalletMPPrimeraUltima_Mercado_SA(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmLoteProveedor As String, ByVal prmCantidad As Double, ByVal prmEmpaques As Integer, ByVal prmPrimera As String, ByVal prmUltima As String, ByVal prmCantidadEmpaques As Integer, ByVal prmMercado As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_OCCreaPalletMPPrimeraUltima_Mercado_SA", New Object() {prmOrdenCompra, prmPartida, prmLoteProveedor, prmCantidad, prmEmpaques, prmPrimera, prmUltima, prmCantidadEmpaques, prmMercado, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_OCCreaPalletMPPrimeraUltima_Mercado_SAAsync(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmLoteProveedor As String, ByVal prmCantidad As Double, ByVal prmEmpaques As Integer, ByVal prmPrimera As String, ByVal prmUltima As String, ByVal prmCantidadEmpaques As Integer, ByVal prmMercado As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_OCCreaPalletMPPrimeraUltima_Mercado_SAAsync(prmOrdenCompra, prmPartida, prmLoteProveedor, prmCantidad, prmEmpaques, prmPrimera, prmUltima, prmCantidadEmpaques, prmMercado, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_OCCreaPalletMPPrimeraUltima_Mercado_SAAsync(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmLoteProveedor As String, ByVal prmCantidad As Double, ByVal prmEmpaques As Integer, ByVal prmPrimera As String, ByVal prmUltima As String, ByVal prmCantidadEmpaques As Integer, ByVal prmMercado As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_OCCreaPalletMPPrimeraUltima_Mercado_SAOperationCompleted Is Nothing) Then
                Me.WM_OCCreaPalletMPPrimeraUltima_Mercado_SAOperationCompleted = AddressOf Me.OnWM_OCCreaPalletMPPrimeraUltima_Mercado_SAOperationCompleted
            End If
            Me.InvokeAsync("WM_OCCreaPalletMPPrimeraUltima_Mercado_SA", New Object() {prmOrdenCompra, prmPartida, prmLoteProveedor, prmCantidad, prmEmpaques, prmPrimera, prmUltima, prmCantidadEmpaques, prmMercado, prmEstacion, prmUsuario}, Me.WM_OCCreaPalletMPPrimeraUltima_Mercado_SAOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_OCCreaPalletMPPrimeraUltima_Mercado_SAOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_OCCreaPalletMPPrimeraUltima_Mercado_SACompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_OCCreaPalletMPPrimeraUltima_Mercado_SACompleted(Me, New WM_OCCreaPalletMPPrimeraUltima_Mercado_SACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_OCRegistrarEmpaqueCompraKanban", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_OCRegistrarEmpaqueCompraKanban(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmPallet As String, ByVal prmCodigoEmpaque As String, ByVal prmLoteProveedor As String, ByVal prmCantidad As Double, ByVal prmEmpaques As Integer, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_OCRegistrarEmpaqueCompraKanban", New Object() {prmOrdenCompra, prmPartida, prmPallet, prmCodigoEmpaque, prmLoteProveedor, prmCantidad, prmEmpaques, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_OCRegistrarEmpaqueCompraKanbanAsync(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmPallet As String, ByVal prmCodigoEmpaque As String, ByVal prmLoteProveedor As String, ByVal prmCantidad As Double, ByVal prmEmpaques As Integer, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_OCRegistrarEmpaqueCompraKanbanAsync(prmOrdenCompra, prmPartida, prmPallet, prmCodigoEmpaque, prmLoteProveedor, prmCantidad, prmEmpaques, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_OCRegistrarEmpaqueCompraKanbanAsync(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmPallet As String, ByVal prmCodigoEmpaque As String, ByVal prmLoteProveedor As String, ByVal prmCantidad As Double, ByVal prmEmpaques As Integer, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_OCRegistrarEmpaqueCompraKanbanOperationCompleted Is Nothing) Then
                Me.WM_OCRegistrarEmpaqueCompraKanbanOperationCompleted = AddressOf Me.OnWM_OCRegistrarEmpaqueCompraKanbanOperationCompleted
            End If
            Me.InvokeAsync("WM_OCRegistrarEmpaqueCompraKanban", New Object() {prmOrdenCompra, prmPartida, prmPallet, prmCodigoEmpaque, prmLoteProveedor, prmCantidad, prmEmpaques, prmEstacion, prmUsuario}, Me.WM_OCRegistrarEmpaqueCompraKanbanOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_OCRegistrarEmpaqueCompraKanbanOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_OCRegistrarEmpaqueCompraKanbanCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_OCRegistrarEmpaqueCompraKanbanCompleted(Me, New WM_OCRegistrarEmpaqueCompraKanbanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_OCCierraPalletMPCompra", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_OCCierraPalletMPCompra(ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_OCCierraPalletMPCompra", New Object() {prmPallet, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_OCCierraPalletMPCompraAsync(ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_OCCierraPalletMPCompraAsync(prmPallet, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_OCCierraPalletMPCompraAsync(ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_OCCierraPalletMPCompraOperationCompleted Is Nothing) Then
                Me.WM_OCCierraPalletMPCompraOperationCompleted = AddressOf Me.OnWM_OCCierraPalletMPCompraOperationCompleted
            End If
            Me.InvokeAsync("WM_OCCierraPalletMPCompra", New Object() {prmPallet, prmEstacion, prmUsuario}, Me.WM_OCCierraPalletMPCompraOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_OCCierraPalletMPCompraOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_OCCierraPalletMPCompraCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_OCCierraPalletMPCompraCompleted(Me, New WM_OCCierraPalletMPCompraCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_OCCierraPalletCompraRefacciones", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_OCCierraPalletCompraRefacciones(ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_OCCierraPalletCompraRefacciones", New Object() {prmPallet, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_OCCierraPalletCompraRefaccionesAsync(ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_OCCierraPalletCompraRefaccionesAsync(prmPallet, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_OCCierraPalletCompraRefaccionesAsync(ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_OCCierraPalletCompraRefaccionesOperationCompleted Is Nothing) Then
                Me.WM_OCCierraPalletCompraRefaccionesOperationCompleted = AddressOf Me.OnWM_OCCierraPalletCompraRefaccionesOperationCompleted
            End If
            Me.InvokeAsync("WM_OCCierraPalletCompraRefacciones", New Object() {prmPallet, prmEstacion, prmUsuario}, Me.WM_OCCierraPalletCompraRefaccionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_OCCierraPalletCompraRefaccionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_OCCierraPalletCompraRefaccionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_OCCierraPalletCompraRefaccionesCompleted(Me, New WM_OCCierraPalletCompraRefaccionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_CosultaEmpaquesOC", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_CosultaEmpaquesOC(ByVal prmDoc As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_CosultaEmpaquesOC", New Object() {prmDoc, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_CosultaEmpaquesOCAsync(ByVal prmDoc As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_CosultaEmpaquesOCAsync(prmDoc, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_CosultaEmpaquesOCAsync(ByVal prmDoc As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_CosultaEmpaquesOCOperationCompleted Is Nothing) Then
                Me.WM_CosultaEmpaquesOCOperationCompleted = AddressOf Me.OnWM_CosultaEmpaquesOCOperationCompleted
            End If
            Me.InvokeAsync("WM_CosultaEmpaquesOC", New Object() {prmDoc, prmEstacion, prmUsuario}, Me.WM_CosultaEmpaquesOCOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_CosultaEmpaquesOCOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_CosultaEmpaquesOCCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_CosultaEmpaquesOCCompleted(Me, New WM_CosultaEmpaquesOCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_DelEmpaqueOrdenRecepcion", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_DelEmpaqueOrdenRecepcion(ByVal prmOrdenRecepcion As String, ByVal prmEmpaque As String, ByVal prmRazon As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_DelEmpaqueOrdenRecepcion", New Object() {prmOrdenRecepcion, prmEmpaque, prmRazon, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_DelEmpaqueOrdenRecepcionAsync(ByVal prmOrdenRecepcion As String, ByVal prmEmpaque As String, ByVal prmRazon As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_DelEmpaqueOrdenRecepcionAsync(prmOrdenRecepcion, prmEmpaque, prmRazon, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_DelEmpaqueOrdenRecepcionAsync(ByVal prmOrdenRecepcion As String, ByVal prmEmpaque As String, ByVal prmRazon As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_DelEmpaqueOrdenRecepcionOperationCompleted Is Nothing) Then
                Me.WM_DelEmpaqueOrdenRecepcionOperationCompleted = AddressOf Me.OnWM_DelEmpaqueOrdenRecepcionOperationCompleted
            End If
            Me.InvokeAsync("WM_DelEmpaqueOrdenRecepcion", New Object() {prmOrdenRecepcion, prmEmpaque, prmRazon, prmEstacion, prmUsuario}, Me.WM_DelEmpaqueOrdenRecepcionOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_DelEmpaqueOrdenRecepcionOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_DelEmpaqueOrdenRecepcionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_DelEmpaqueOrdenRecepcionCompleted(Me, New WM_DelEmpaqueOrdenRecepcionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_CreaLoteRecepcionOC", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_CreaLoteRecepcionOC(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmLote As String, ByVal prmGenerarLote As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_CreaLoteRecepcionOC", New Object() {prmOrdenCompra, prmPartida, prmLote, prmGenerarLote, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_CreaLoteRecepcionOCAsync(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmLote As String, ByVal prmGenerarLote As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_CreaLoteRecepcionOCAsync(prmOrdenCompra, prmPartida, prmLote, prmGenerarLote, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_CreaLoteRecepcionOCAsync(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmLote As String, ByVal prmGenerarLote As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_CreaLoteRecepcionOCOperationCompleted Is Nothing) Then
                Me.WM_CreaLoteRecepcionOCOperationCompleted = AddressOf Me.OnWM_CreaLoteRecepcionOCOperationCompleted
            End If
            Me.InvokeAsync("WM_CreaLoteRecepcionOC", New Object() {prmOrdenCompra, prmPartida, prmLote, prmGenerarLote, prmEstacion, prmUsuario}, Me.WM_CreaLoteRecepcionOCOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_CreaLoteRecepcionOCOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_CreaLoteRecepcionOCCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_CreaLoteRecepcionOCCompleted(Me, New WM_CreaLoteRecepcionOCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_OCCreaPalletMPCompraUnico", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_OCCreaPalletMPCompraUnico(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmLoteProveedor As String, ByVal prmCantidad As Double, ByVal prmEmpaques As Integer, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_OCCreaPalletMPCompraUnico", New Object() {prmOrdenCompra, prmPartida, prmLoteProveedor, prmCantidad, prmEmpaques, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_OCCreaPalletMPCompraUnicoAsync(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmLoteProveedor As String, ByVal prmCantidad As Double, ByVal prmEmpaques As Integer, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_OCCreaPalletMPCompraUnicoAsync(prmOrdenCompra, prmPartida, prmLoteProveedor, prmCantidad, prmEmpaques, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_OCCreaPalletMPCompraUnicoAsync(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmLoteProveedor As String, ByVal prmCantidad As Double, ByVal prmEmpaques As Integer, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_OCCreaPalletMPCompraUnicoOperationCompleted Is Nothing) Then
                Me.WM_OCCreaPalletMPCompraUnicoOperationCompleted = AddressOf Me.OnWM_OCCreaPalletMPCompraUnicoOperationCompleted
            End If
            Me.InvokeAsync("WM_OCCreaPalletMPCompraUnico", New Object() {prmOrdenCompra, prmPartida, prmLoteProveedor, prmCantidad, prmEmpaques, prmEstacion, prmUsuario}, Me.WM_OCCreaPalletMPCompraUnicoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_OCCreaPalletMPCompraUnicoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_OCCreaPalletMPCompraUnicoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_OCCreaPalletMPCompraUnicoCompleted(Me, New WM_OCCreaPalletMPCompraUnicoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultarPalletAbiertoOC", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultarPalletAbiertoOC(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultarPalletAbiertoOC", New Object() {prmOrdenCompra, prmPartida, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultarPalletAbiertoOCAsync(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultarPalletAbiertoOCAsync(prmOrdenCompra, prmPartida, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultarPalletAbiertoOCAsync(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultarPalletAbiertoOCOperationCompleted Is Nothing) Then
                Me.WM_ConsultarPalletAbiertoOCOperationCompleted = AddressOf Me.OnWM_ConsultarPalletAbiertoOCOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultarPalletAbiertoOC", New Object() {prmOrdenCompra, prmPartida, prmEstacion, prmUsuario}, Me.WM_ConsultarPalletAbiertoOCOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultarPalletAbiertoOCOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultarPalletAbiertoOCCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultarPalletAbiertoOCCompleted(Me, New WM_ConsultarPalletAbiertoOCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaPalletArmadoOC", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaPalletArmadoOC(ByVal prmOrdenCompra As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaPalletArmadoOC", New Object() {prmOrdenCompra, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaPalletArmadoOCAsync(ByVal prmOrdenCompra As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaPalletArmadoOCAsync(prmOrdenCompra, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaPalletArmadoOCAsync(ByVal prmOrdenCompra As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaPalletArmadoOCOperationCompleted Is Nothing) Then
                Me.WM_ConsultaPalletArmadoOCOperationCompleted = AddressOf Me.OnWM_ConsultaPalletArmadoOCOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaPalletArmadoOC", New Object() {prmOrdenCompra, prmEstacion, prmUsuario}, Me.WM_ConsultaPalletArmadoOCOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaPalletArmadoOCOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaPalletArmadoOCCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaPalletArmadoOCCompleted(Me, New WM_ConsultaPalletArmadoOCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaPosicionPisoOC", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaPosicionPisoOC(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmPosicionPiso As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaPosicionPisoOC", New Object() {prmOrdenCompra, prmPartida, prmPosicionPiso, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaPosicionPisoOCAsync(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmPosicionPiso As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaPosicionPisoOCAsync(prmOrdenCompra, prmPartida, prmPosicionPiso, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaPosicionPisoOCAsync(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmPosicionPiso As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaPosicionPisoOCOperationCompleted Is Nothing) Then
                Me.WM_ConsultaPosicionPisoOCOperationCompleted = AddressOf Me.OnWM_ConsultaPosicionPisoOCOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaPosicionPisoOC", New Object() {prmOrdenCompra, prmPartida, prmPosicionPiso, prmEstacion, prmUsuario}, Me.WM_ConsultaPosicionPisoOCOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaPosicionPisoOCOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaPosicionPisoOCCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaPosicionPisoOCCompleted(Me, New WM_ConsultaPosicionPisoOCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_OCCreaPalletMPPrimeraUltima", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_OCCreaPalletMPPrimeraUltima(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmLoteProveedor As String, ByVal prmCantidad As Double, ByVal prmEmpaques As Integer, ByVal prmPrimera As String, ByVal prmUltima As String, ByVal prmCantidadEmpaques As Integer, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_OCCreaPalletMPPrimeraUltima", New Object() {prmOrdenCompra, prmPartida, prmLoteProveedor, prmCantidad, prmEmpaques, prmPrimera, prmUltima, prmCantidadEmpaques, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_OCCreaPalletMPPrimeraUltimaAsync(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmLoteProveedor As String, ByVal prmCantidad As Double, ByVal prmEmpaques As Integer, ByVal prmPrimera As String, ByVal prmUltima As String, ByVal prmCantidadEmpaques As Integer, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_OCCreaPalletMPPrimeraUltimaAsync(prmOrdenCompra, prmPartida, prmLoteProveedor, prmCantidad, prmEmpaques, prmPrimera, prmUltima, prmCantidadEmpaques, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_OCCreaPalletMPPrimeraUltimaAsync(ByVal prmOrdenCompra As String, ByVal prmPartida As String, ByVal prmLoteProveedor As String, ByVal prmCantidad As Double, ByVal prmEmpaques As Integer, ByVal prmPrimera As String, ByVal prmUltima As String, ByVal prmCantidadEmpaques As Integer, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_OCCreaPalletMPPrimeraUltimaOperationCompleted Is Nothing) Then
                Me.WM_OCCreaPalletMPPrimeraUltimaOperationCompleted = AddressOf Me.OnWM_OCCreaPalletMPPrimeraUltimaOperationCompleted
            End If
            Me.InvokeAsync("WM_OCCreaPalletMPPrimeraUltima", New Object() {prmOrdenCompra, prmPartida, prmLoteProveedor, prmCantidad, prmEmpaques, prmPrimera, prmUltima, prmCantidadEmpaques, prmEstacion, prmUsuario}, Me.WM_OCCreaPalletMPPrimeraUltimaOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_OCCreaPalletMPPrimeraUltimaOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_OCCreaPalletMPPrimeraUltimaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_OCCreaPalletMPPrimeraUltimaCompleted(Me, New WM_OCCreaPalletMPPrimeraUltimaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ListarOCLiberadas", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ListarOCLiberadas(ByVal prmEstacion As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ListarOCLiberadas", New Object() {prmEstacion})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ListarOCLiberadasAsync(ByVal prmEstacion As String)
            Me.WM_ListarOCLiberadasAsync(prmEstacion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ListarOCLiberadasAsync(ByVal prmEstacion As String, ByVal userState As Object)
            If (Me.WM_ListarOCLiberadasOperationCompleted Is Nothing) Then
                Me.WM_ListarOCLiberadasOperationCompleted = AddressOf Me.OnWM_ListarOCLiberadasOperationCompleted
            End If
            Me.InvokeAsync("WM_ListarOCLiberadas", New Object() {prmEstacion}, Me.WM_ListarOCLiberadasOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ListarOCLiberadasOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ListarOCLiberadasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ListarOCLiberadasCompleted(Me, New WM_ListarOCLiberadasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_CerrarRecepcion", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_CerrarRecepcion(ByVal prmOrdenCompra As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_CerrarRecepcion", New Object() {prmOrdenCompra, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_CerrarRecepcionAsync(ByVal prmOrdenCompra As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_CerrarRecepcionAsync(prmOrdenCompra, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_CerrarRecepcionAsync(ByVal prmOrdenCompra As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_CerrarRecepcionOperationCompleted Is Nothing) Then
                Me.WM_CerrarRecepcionOperationCompleted = AddressOf Me.OnWM_CerrarRecepcionOperationCompleted
            End If
            Me.InvokeAsync("WM_CerrarRecepcion", New Object() {prmOrdenCompra, prmEstacion, prmUsuario}, Me.WM_CerrarRecepcionOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_CerrarRecepcionOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_CerrarRecepcionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_CerrarRecepcionCompleted(Me, New WM_CerrarRecepcionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ListarOrdenesCompraQA", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ListarOrdenesCompraQA(ByVal prmEstacion As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ListarOrdenesCompraQA", New Object() {prmEstacion})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ListarOrdenesCompraQAAsync(ByVal prmEstacion As String)
            Me.WM_ListarOrdenesCompraQAAsync(prmEstacion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ListarOrdenesCompraQAAsync(ByVal prmEstacion As String, ByVal userState As Object)
            If (Me.WM_ListarOrdenesCompraQAOperationCompleted Is Nothing) Then
                Me.WM_ListarOrdenesCompraQAOperationCompleted = AddressOf Me.OnWM_ListarOrdenesCompraQAOperationCompleted
            End If
            Me.InvokeAsync("WM_ListarOrdenesCompraQA", New Object() {prmEstacion}, Me.WM_ListarOrdenesCompraQAOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ListarOrdenesCompraQAOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ListarOrdenesCompraQACompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ListarOrdenesCompraQACompleted(Me, New WM_ListarOrdenesCompraQACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ListarPartidasORQA", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ListarPartidasORQA(ByVal prmOrdenCompra As String, ByVal prmOrdenRecepcion As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ListarPartidasORQA", New Object() {prmOrdenCompra, prmOrdenRecepcion, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ListarPartidasORQAAsync(ByVal prmOrdenCompra As String, ByVal prmOrdenRecepcion As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ListarPartidasORQAAsync(prmOrdenCompra, prmOrdenRecepcion, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ListarPartidasORQAAsync(ByVal prmOrdenCompra As String, ByVal prmOrdenRecepcion As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ListarPartidasORQAOperationCompleted Is Nothing) Then
                Me.WM_ListarPartidasORQAOperationCompleted = AddressOf Me.OnWM_ListarPartidasORQAOperationCompleted
            End If
            Me.InvokeAsync("WM_ListarPartidasORQA", New Object() {prmOrdenCompra, prmOrdenRecepcion, prmEstacion, prmUsuario}, Me.WM_ListarPartidasORQAOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ListarPartidasORQAOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ListarPartidasORQACompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ListarPartidasORQACompleted(Me, New WM_ListarPartidasORQACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaEmpaqueMuestreo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaEmpaqueMuestreo(ByVal prmEmpaque As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaEmpaqueMuestreo", New Object() {prmEmpaque, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaEmpaqueMuestreoAsync(ByVal prmEmpaque As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaEmpaqueMuestreoAsync(prmEmpaque, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaEmpaqueMuestreoAsync(ByVal prmEmpaque As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaEmpaqueMuestreoOperationCompleted Is Nothing) Then
                Me.WM_ConsultaEmpaqueMuestreoOperationCompleted = AddressOf Me.OnWM_ConsultaEmpaqueMuestreoOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaEmpaqueMuestreo", New Object() {prmEmpaque, prmEstacion, prmUsuario}, Me.WM_ConsultaEmpaqueMuestreoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaEmpaqueMuestreoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaEmpaqueMuestreoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaEmpaqueMuestreoCompleted(Me, New WM_ConsultaEmpaqueMuestreoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_QAAceptaEmpaque", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_QAAceptaEmpaque(ByVal prmOrdenRec As String, ByVal prmEmpaque As String, ByVal prmCheckPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_QAAceptaEmpaque", New Object() {prmOrdenRec, prmEmpaque, prmCheckPallet, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_QAAceptaEmpaqueAsync(ByVal prmOrdenRec As String, ByVal prmEmpaque As String, ByVal prmCheckPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_QAAceptaEmpaqueAsync(prmOrdenRec, prmEmpaque, prmCheckPallet, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_QAAceptaEmpaqueAsync(ByVal prmOrdenRec As String, ByVal prmEmpaque As String, ByVal prmCheckPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_QAAceptaEmpaqueOperationCompleted Is Nothing) Then
                Me.WM_QAAceptaEmpaqueOperationCompleted = AddressOf Me.OnWM_QAAceptaEmpaqueOperationCompleted
            End If
            Me.InvokeAsync("WM_QAAceptaEmpaque", New Object() {prmOrdenRec, prmEmpaque, prmCheckPallet, prmEstacion, prmUsuario}, Me.WM_QAAceptaEmpaqueOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_QAAceptaEmpaqueOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_QAAceptaEmpaqueCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_QAAceptaEmpaqueCompleted(Me, New WM_QAAceptaEmpaqueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_QARechazaEmpaque", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_QARechazaEmpaque(ByVal prmOrdenRec As String, ByVal prmEmpaque As String, ByVal prmCheckPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_QARechazaEmpaque", New Object() {prmOrdenRec, prmEmpaque, prmCheckPallet, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_QARechazaEmpaqueAsync(ByVal prmOrdenRec As String, ByVal prmEmpaque As String, ByVal prmCheckPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_QARechazaEmpaqueAsync(prmOrdenRec, prmEmpaque, prmCheckPallet, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_QARechazaEmpaqueAsync(ByVal prmOrdenRec As String, ByVal prmEmpaque As String, ByVal prmCheckPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_QARechazaEmpaqueOperationCompleted Is Nothing) Then
                Me.WM_QARechazaEmpaqueOperationCompleted = AddressOf Me.OnWM_QARechazaEmpaqueOperationCompleted
            End If
            Me.InvokeAsync("WM_QARechazaEmpaque", New Object() {prmOrdenRec, prmEmpaque, prmCheckPallet, prmEstacion, prmUsuario}, Me.WM_QARechazaEmpaqueOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_QARechazaEmpaqueOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_QARechazaEmpaqueCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_QARechazaEmpaqueCompleted(Me, New WM_QARechazaEmpaqueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_QARechazoTotal", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_QARechazoTotal(ByVal prmOrdenRecepcion As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_QARechazoTotal", New Object() {prmOrdenRecepcion, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_QARechazoTotalAsync(ByVal prmOrdenRecepcion As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_QARechazoTotalAsync(prmOrdenRecepcion, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_QARechazoTotalAsync(ByVal prmOrdenRecepcion As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_QARechazoTotalOperationCompleted Is Nothing) Then
                Me.WM_QARechazoTotalOperationCompleted = AddressOf Me.OnWM_QARechazoTotalOperationCompleted
            End If
            Me.InvokeAsync("WM_QARechazoTotal", New Object() {prmOrdenRecepcion, prmEstacion, prmUsuario}, Me.WM_QARechazoTotalOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_QARechazoTotalOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_QARechazoTotalCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_QARechazoTotalCompleted(Me, New WM_QARechazoTotalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_QATerminarProceso", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_QATerminarProceso(ByVal prmOrdenRecepcion As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_QATerminarProceso", New Object() {prmOrdenRecepcion, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_QATerminarProcesoAsync(ByVal prmOrdenRecepcion As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_QATerminarProcesoAsync(prmOrdenRecepcion, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_QATerminarProcesoAsync(ByVal prmOrdenRecepcion As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_QATerminarProcesoOperationCompleted Is Nothing) Then
                Me.WM_QATerminarProcesoOperationCompleted = AddressOf Me.OnWM_QATerminarProcesoOperationCompleted
            End If
            Me.InvokeAsync("WM_QATerminarProceso", New Object() {prmOrdenRecepcion, prmEstacion, prmUsuario}, Me.WM_QATerminarProcesoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_QATerminarProcesoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_QATerminarProcesoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_QATerminarProcesoCompleted(Me, New WM_QATerminarProcesoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_CierraPalletRechazado", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_CierraPalletRechazado(ByVal prmOrdenRec As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_CierraPalletRechazado", New Object() {prmOrdenRec, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_CierraPalletRechazadoAsync(ByVal prmOrdenRec As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_CierraPalletRechazadoAsync(prmOrdenRec, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_CierraPalletRechazadoAsync(ByVal prmOrdenRec As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_CierraPalletRechazadoOperationCompleted Is Nothing) Then
                Me.WM_CierraPalletRechazadoOperationCompleted = AddressOf Me.OnWM_CierraPalletRechazadoOperationCompleted
            End If
            Me.InvokeAsync("WM_CierraPalletRechazado", New Object() {prmOrdenRec, prmEstacion, prmUsuario}, Me.WM_CierraPalletRechazadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_CierraPalletRechazadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_CierraPalletRechazadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_CierraPalletRechazadoCompleted(Me, New WM_CierraPalletRechazadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_MoverEmpaqueACuarentena", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_MoverEmpaqueACuarentena(ByVal prmEmpaque As String, ByVal prmUbicacionDisponible As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_MoverEmpaqueACuarentena", New Object() {prmEmpaque, prmUbicacionDisponible, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_MoverEmpaqueACuarentenaAsync(ByVal prmEmpaque As String, ByVal prmUbicacionDisponible As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_MoverEmpaqueACuarentenaAsync(prmEmpaque, prmUbicacionDisponible, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_MoverEmpaqueACuarentenaAsync(ByVal prmEmpaque As String, ByVal prmUbicacionDisponible As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_MoverEmpaqueACuarentenaOperationCompleted Is Nothing) Then
                Me.WM_MoverEmpaqueACuarentenaOperationCompleted = AddressOf Me.OnWM_MoverEmpaqueACuarentenaOperationCompleted
            End If
            Me.InvokeAsync("WM_MoverEmpaqueACuarentena", New Object() {prmEmpaque, prmUbicacionDisponible, prmEstacion, prmUsuario}, Me.WM_MoverEmpaqueACuarentenaOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_MoverEmpaqueACuarentenaOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_MoverEmpaqueACuarentenaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_MoverEmpaqueACuarentenaCompleted(Me, New WM_MoverEmpaqueACuarentenaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_MoverContenedorACuarentena", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_MoverContenedorACuarentena(ByVal prmEmpaque As String, ByVal prmUbicacionDisponible As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_MoverContenedorACuarentena", New Object() {prmEmpaque, prmUbicacionDisponible, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_MoverContenedorACuarentenaAsync(ByVal prmEmpaque As String, ByVal prmUbicacionDisponible As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_MoverContenedorACuarentenaAsync(prmEmpaque, prmUbicacionDisponible, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_MoverContenedorACuarentenaAsync(ByVal prmEmpaque As String, ByVal prmUbicacionDisponible As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_MoverContenedorACuarentenaOperationCompleted Is Nothing) Then
                Me.WM_MoverContenedorACuarentenaOperationCompleted = AddressOf Me.OnWM_MoverContenedorACuarentenaOperationCompleted
            End If
            Me.InvokeAsync("WM_MoverContenedorACuarentena", New Object() {prmEmpaque, prmUbicacionDisponible, prmEstacion, prmUsuario}, Me.WM_MoverContenedorACuarentenaOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_MoverContenedorACuarentenaOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_MoverContenedorACuarentenaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_MoverContenedorACuarentenaCompleted(Me, New WM_MoverContenedorACuarentenaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_MoverEmpaqueADisponible", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_MoverEmpaqueADisponible(ByVal prmEmpaque As String, ByVal prmUbicacionDisponible As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_MoverEmpaqueADisponible", New Object() {prmEmpaque, prmUbicacionDisponible, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_MoverEmpaqueADisponibleAsync(ByVal prmEmpaque As String, ByVal prmUbicacionDisponible As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_MoverEmpaqueADisponibleAsync(prmEmpaque, prmUbicacionDisponible, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_MoverEmpaqueADisponibleAsync(ByVal prmEmpaque As String, ByVal prmUbicacionDisponible As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_MoverEmpaqueADisponibleOperationCompleted Is Nothing) Then
                Me.WM_MoverEmpaqueADisponibleOperationCompleted = AddressOf Me.OnWM_MoverEmpaqueADisponibleOperationCompleted
            End If
            Me.InvokeAsync("WM_MoverEmpaqueADisponible", New Object() {prmEmpaque, prmUbicacionDisponible, prmEstacion, prmUsuario}, Me.WM_MoverEmpaqueADisponibleOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_MoverEmpaqueADisponibleOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_MoverEmpaqueADisponibleCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_MoverEmpaqueADisponibleCompleted(Me, New WM_MoverEmpaqueADisponibleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_MoverContenedorADisponible", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_MoverContenedorADisponible(ByVal prmEmpaque As String, ByVal prmUbicacionDisponible As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_MoverContenedorADisponible", New Object() {prmEmpaque, prmUbicacionDisponible, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_MoverContenedorADisponibleAsync(ByVal prmEmpaque As String, ByVal prmUbicacionDisponible As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_MoverContenedorADisponibleAsync(prmEmpaque, prmUbicacionDisponible, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_MoverContenedorADisponibleAsync(ByVal prmEmpaque As String, ByVal prmUbicacionDisponible As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_MoverContenedorADisponibleOperationCompleted Is Nothing) Then
                Me.WM_MoverContenedorADisponibleOperationCompleted = AddressOf Me.OnWM_MoverContenedorADisponibleOperationCompleted
            End If
            Me.InvokeAsync("WM_MoverContenedorADisponible", New Object() {prmEmpaque, prmUbicacionDisponible, prmEstacion, prmUsuario}, Me.WM_MoverContenedorADisponibleOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_MoverContenedorADisponibleOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_MoverContenedorADisponibleCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_MoverContenedorADisponibleCompleted(Me, New WM_MoverContenedorADisponibleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_CuarentenaRecuperaEmpaque", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_CuarentenaRecuperaEmpaque(ByVal prmCodigoEmpaque As String, ByVal prmCodigoEmpaqueNuevo As String, ByVal prmCantidad As Double, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_CuarentenaRecuperaEmpaque", New Object() {prmCodigoEmpaque, prmCodigoEmpaqueNuevo, prmCantidad, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_CuarentenaRecuperaEmpaqueAsync(ByVal prmCodigoEmpaque As String, ByVal prmCodigoEmpaqueNuevo As String, ByVal prmCantidad As Double, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_CuarentenaRecuperaEmpaqueAsync(prmCodigoEmpaque, prmCodigoEmpaqueNuevo, prmCantidad, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_CuarentenaRecuperaEmpaqueAsync(ByVal prmCodigoEmpaque As String, ByVal prmCodigoEmpaqueNuevo As String, ByVal prmCantidad As Double, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_CuarentenaRecuperaEmpaqueOperationCompleted Is Nothing) Then
                Me.WM_CuarentenaRecuperaEmpaqueOperationCompleted = AddressOf Me.OnWM_CuarentenaRecuperaEmpaqueOperationCompleted
            End If
            Me.InvokeAsync("WM_CuarentenaRecuperaEmpaque", New Object() {prmCodigoEmpaque, prmCodigoEmpaqueNuevo, prmCantidad, prmEstacion, prmUsuario}, Me.WM_CuarentenaRecuperaEmpaqueOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_CuarentenaRecuperaEmpaqueOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_CuarentenaRecuperaEmpaqueCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_CuarentenaRecuperaEmpaqueCompleted(Me, New WM_CuarentenaRecuperaEmpaqueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_CuarentenaBajaPallet", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_CuarentenaBajaPallet(ByVal prmCodigoPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_CuarentenaBajaPallet", New Object() {prmCodigoPallet, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_CuarentenaBajaPalletAsync(ByVal prmCodigoPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_CuarentenaBajaPalletAsync(prmCodigoPallet, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_CuarentenaBajaPalletAsync(ByVal prmCodigoPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_CuarentenaBajaPalletOperationCompleted Is Nothing) Then
                Me.WM_CuarentenaBajaPalletOperationCompleted = AddressOf Me.OnWM_CuarentenaBajaPalletOperationCompleted
            End If
            Me.InvokeAsync("WM_CuarentenaBajaPallet", New Object() {prmCodigoPallet, prmEstacion, prmUsuario}, Me.WM_CuarentenaBajaPalletOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_CuarentenaBajaPalletOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_CuarentenaBajaPalletCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_CuarentenaBajaPalletCompleted(Me, New WM_CuarentenaBajaPalletCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_CuarentenaBajaEmpaque", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_CuarentenaBajaEmpaque(ByVal prmCodigoEmpaque As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_CuarentenaBajaEmpaque", New Object() {prmCodigoEmpaque, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_CuarentenaBajaEmpaqueAsync(ByVal prmCodigoEmpaque As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_CuarentenaBajaEmpaqueAsync(prmCodigoEmpaque, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_CuarentenaBajaEmpaqueAsync(ByVal prmCodigoEmpaque As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_CuarentenaBajaEmpaqueOperationCompleted Is Nothing) Then
                Me.WM_CuarentenaBajaEmpaqueOperationCompleted = AddressOf Me.OnWM_CuarentenaBajaEmpaqueOperationCompleted
            End If
            Me.InvokeAsync("WM_CuarentenaBajaEmpaque", New Object() {prmCodigoEmpaque, prmEstacion, prmUsuario}, Me.WM_CuarentenaBajaEmpaqueOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_CuarentenaBajaEmpaqueOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_CuarentenaBajaEmpaqueCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_CuarentenaBajaEmpaqueCompleted(Me, New WM_CuarentenaBajaEmpaqueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultarPalletAbiertoCuarentena", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultarPalletAbiertoCuarentena(ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultarPalletAbiertoCuarentena", New Object() {prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultarPalletAbiertoCuarentenaAsync(ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultarPalletAbiertoCuarentenaAsync(prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultarPalletAbiertoCuarentenaAsync(ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultarPalletAbiertoCuarentenaOperationCompleted Is Nothing) Then
                Me.WM_ConsultarPalletAbiertoCuarentenaOperationCompleted = AddressOf Me.OnWM_ConsultarPalletAbiertoCuarentenaOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultarPalletAbiertoCuarentena", New Object() {prmEstacion, prmUsuario}, Me.WM_ConsultarPalletAbiertoCuarentenaOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultarPalletAbiertoCuarentenaOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultarPalletAbiertoCuarentenaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultarPalletAbiertoCuarentenaCompleted(Me, New WM_ConsultarPalletAbiertoCuarentenaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_CierraPalletMPCuarentena", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_CierraPalletMPCuarentena(ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_CierraPalletMPCuarentena", New Object() {prmPallet, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_CierraPalletMPCuarentenaAsync(ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_CierraPalletMPCuarentenaAsync(prmPallet, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_CierraPalletMPCuarentenaAsync(ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_CierraPalletMPCuarentenaOperationCompleted Is Nothing) Then
                Me.WM_CierraPalletMPCuarentenaOperationCompleted = AddressOf Me.OnWM_CierraPalletMPCuarentenaOperationCompleted
            End If
            Me.InvokeAsync("WM_CierraPalletMPCuarentena", New Object() {prmPallet, prmEstacion, prmUsuario}, Me.WM_CierraPalletMPCuarentenaOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_CierraPalletMPCuarentenaOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_CierraPalletMPCuarentenaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_CierraPalletMPCuarentenaCompleted(Me, New WM_CierraPalletMPCuarentenaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_CuarentenaMarcaPallet", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_CuarentenaMarcaPallet(ByVal prmCodigoPallet As String, ByVal prmEstatus As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_CuarentenaMarcaPallet", New Object() {prmCodigoPallet, prmEstatus, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_CuarentenaMarcaPalletAsync(ByVal prmCodigoPallet As String, ByVal prmEstatus As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_CuarentenaMarcaPalletAsync(prmCodigoPallet, prmEstatus, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_CuarentenaMarcaPalletAsync(ByVal prmCodigoPallet As String, ByVal prmEstatus As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_CuarentenaMarcaPalletOperationCompleted Is Nothing) Then
                Me.WM_CuarentenaMarcaPalletOperationCompleted = AddressOf Me.OnWM_CuarentenaMarcaPalletOperationCompleted
            End If
            Me.InvokeAsync("WM_CuarentenaMarcaPallet", New Object() {prmCodigoPallet, prmEstatus, prmEstacion, prmUsuario}, Me.WM_CuarentenaMarcaPalletOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_CuarentenaMarcaPalletOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_CuarentenaMarcaPalletCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_CuarentenaMarcaPalletCompleted(Me, New WM_CuarentenaMarcaPalletCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultarPalletPT", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultarPalletPT(ByVal prmEmbalaje As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultarPalletPT", New Object() {prmEmbalaje, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultarPalletPTAsync(ByVal prmEmbalaje As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultarPalletPTAsync(prmEmbalaje, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultarPalletPTAsync(ByVal prmEmbalaje As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultarPalletPTOperationCompleted Is Nothing) Then
                Me.WM_ConsultarPalletPTOperationCompleted = AddressOf Me.OnWM_ConsultarPalletPTOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultarPalletPT", New Object() {prmEmbalaje, prmEstacion, prmUsuario}, Me.WM_ConsultarPalletPTOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultarPalletPTOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultarPalletPTCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultarPalletPTCompleted(Me, New WM_ConsultarPalletPTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultarPalletReabastece", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultarPalletReabastece(ByVal prmDocumento As String, ByVal prmEmbalaje As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultarPalletReabastece", New Object() {prmDocumento, prmEmbalaje, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultarPalletReabasteceAsync(ByVal prmDocumento As String, ByVal prmEmbalaje As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultarPalletReabasteceAsync(prmDocumento, prmEmbalaje, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultarPalletReabasteceAsync(ByVal prmDocumento As String, ByVal prmEmbalaje As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultarPalletReabasteceOperationCompleted Is Nothing) Then
                Me.WM_ConsultarPalletReabasteceOperationCompleted = AddressOf Me.OnWM_ConsultarPalletReabasteceOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultarPalletReabastece", New Object() {prmDocumento, prmEmbalaje, prmEstacion, prmUsuario}, Me.WM_ConsultarPalletReabasteceOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultarPalletReabasteceOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultarPalletReabasteceCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultarPalletReabasteceCompleted(Me, New WM_ConsultarPalletReabasteceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaEmpaquesPallet_NE", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaEmpaquesPallet_NE(ByVal prmCodigoPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaEmpaquesPallet_NE", New Object() {prmCodigoPallet, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaEmpaquesPallet_NEAsync(ByVal prmCodigoPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaEmpaquesPallet_NEAsync(prmCodigoPallet, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaEmpaquesPallet_NEAsync(ByVal prmCodigoPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaEmpaquesPallet_NEOperationCompleted Is Nothing) Then
                Me.WM_ConsultaEmpaquesPallet_NEOperationCompleted = AddressOf Me.OnWM_ConsultaEmpaquesPallet_NEOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaEmpaquesPallet_NE", New Object() {prmCodigoPallet, prmEstacion, prmUsuario}, Me.WM_ConsultaEmpaquesPallet_NEOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaEmpaquesPallet_NEOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaEmpaquesPallet_NECompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaEmpaquesPallet_NECompleted(Me, New WM_ConsultaEmpaquesPallet_NECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_SugierePosicion", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_SugierePosicion(ByVal prmCodigoPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_SugierePosicion", New Object() {prmCodigoPallet, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_SugierePosicionAsync(ByVal prmCodigoPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_SugierePosicionAsync(prmCodigoPallet, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_SugierePosicionAsync(ByVal prmCodigoPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_SugierePosicionOperationCompleted Is Nothing) Then
                Me.WM_SugierePosicionOperationCompleted = AddressOf Me.OnWM_SugierePosicionOperationCompleted
            End If
            Me.InvokeAsync("WM_SugierePosicion", New Object() {prmCodigoPallet, prmEstacion, prmUsuario}, Me.WM_SugierePosicionOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_SugierePosicionOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_SugierePosicionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_SugierePosicionCompleted(Me, New WM_SugierePosicionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ColocaPallet", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ColocaPallet(ByVal prmCodigoPallet As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal prmPosicionSug As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ColocaPallet", New Object() {prmCodigoPallet, prmUbicacion, prmEstacion, prmUsuario, prmPosicionSug})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ColocaPalletAsync(ByVal prmCodigoPallet As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal prmPosicionSug As String)
            Me.WM_ColocaPalletAsync(prmCodigoPallet, prmUbicacion, prmEstacion, prmUsuario, prmPosicionSug, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ColocaPalletAsync(ByVal prmCodigoPallet As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal prmPosicionSug As String, ByVal userState As Object)
            If (Me.WM_ColocaPalletOperationCompleted Is Nothing) Then
                Me.WM_ColocaPalletOperationCompleted = AddressOf Me.OnWM_ColocaPalletOperationCompleted
            End If
            Me.InvokeAsync("WM_ColocaPallet", New Object() {prmCodigoPallet, prmUbicacion, prmEstacion, prmUsuario, prmPosicionSug}, Me.WM_ColocaPalletOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ColocaPalletOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ColocaPalletCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ColocaPalletCompleted(Me, New WM_ColocaPalletCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ColocaPalletKanban", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ColocaPalletKanban(ByVal prmCodigoPallet As String, ByVal prmIdKanban As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ColocaPalletKanban", New Object() {prmCodigoPallet, prmIdKanban, prmUbicacion, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ColocaPalletKanbanAsync(ByVal prmCodigoPallet As String, ByVal prmIdKanban As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ColocaPalletKanbanAsync(prmCodigoPallet, prmIdKanban, prmUbicacion, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ColocaPalletKanbanAsync(ByVal prmCodigoPallet As String, ByVal prmIdKanban As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ColocaPalletKanbanOperationCompleted Is Nothing) Then
                Me.WM_ColocaPalletKanbanOperationCompleted = AddressOf Me.OnWM_ColocaPalletKanbanOperationCompleted
            End If
            Me.InvokeAsync("WM_ColocaPalletKanban", New Object() {prmCodigoPallet, prmIdKanban, prmUbicacion, prmEstacion, prmUsuario}, Me.WM_ColocaPalletKanbanOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ColocaPalletKanbanOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ColocaPalletKanbanCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ColocaPalletKanbanCompleted(Me, New WM_ColocaPalletKanbanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ReubicarEmbalaje", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ReubicarEmbalaje(ByVal prmCodigoPallet As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ReubicarEmbalaje", New Object() {prmCodigoPallet, prmUbicacion, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ReubicarEmbalajeAsync(ByVal prmCodigoPallet As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ReubicarEmbalajeAsync(prmCodigoPallet, prmUbicacion, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ReubicarEmbalajeAsync(ByVal prmCodigoPallet As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ReubicarEmbalajeOperationCompleted Is Nothing) Then
                Me.WM_ReubicarEmbalajeOperationCompleted = AddressOf Me.OnWM_ReubicarEmbalajeOperationCompleted
            End If
            Me.InvokeAsync("WM_ReubicarEmbalaje", New Object() {prmCodigoPallet, prmUbicacion, prmEstacion, prmUsuario}, Me.WM_ReubicarEmbalajeOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ReubicarEmbalajeOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ReubicarEmbalajeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ReubicarEmbalajeCompleted(Me, New WM_ReubicarEmbalajeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ContenedorSugeridoReubicacion", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ContenedorSugeridoReubicacion(ByVal prmProducto As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ContenedorSugeridoReubicacion", New Object() {prmProducto, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ContenedorSugeridoReubicacionAsync(ByVal prmProducto As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ContenedorSugeridoReubicacionAsync(prmProducto, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ContenedorSugeridoReubicacionAsync(ByVal prmProducto As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ContenedorSugeridoReubicacionOperationCompleted Is Nothing) Then
                Me.WM_ContenedorSugeridoReubicacionOperationCompleted = AddressOf Me.OnWM_ContenedorSugeridoReubicacionOperationCompleted
            End If
            Me.InvokeAsync("WM_ContenedorSugeridoReubicacion", New Object() {prmProducto, prmEstacion, prmUsuario}, Me.WM_ContenedorSugeridoReubicacionOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ContenedorSugeridoReubicacionOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ContenedorSugeridoReubicacionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ContenedorSugeridoReubicacionCompleted(Me, New WM_ContenedorSugeridoReubicacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaEmpaqueMultipleSKU", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaEmpaqueMultipleSKU(ByVal prmCodigo As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaEmpaqueMultipleSKU", New Object() {prmCodigo, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaEmpaqueMultipleSKUAsync(ByVal prmCodigo As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaEmpaqueMultipleSKUAsync(prmCodigo, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaEmpaqueMultipleSKUAsync(ByVal prmCodigo As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaEmpaqueMultipleSKUOperationCompleted Is Nothing) Then
                Me.WM_ConsultaEmpaqueMultipleSKUOperationCompleted = AddressOf Me.OnWM_ConsultaEmpaqueMultipleSKUOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaEmpaqueMultipleSKU", New Object() {prmCodigo, prmEstacion, prmUsuario}, Me.WM_ConsultaEmpaqueMultipleSKUOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaEmpaqueMultipleSKUOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaEmpaqueMultipleSKUCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaEmpaqueMultipleSKUCompleted(Me, New WM_ConsultaEmpaqueMultipleSKUCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaPosicion", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaPosicion(ByVal prmPosicion As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaPosicion", New Object() {prmPosicion, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaPosicionAsync(ByVal prmPosicion As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaPosicionAsync(prmPosicion, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaPosicionAsync(ByVal prmPosicion As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaPosicionOperationCompleted Is Nothing) Then
                Me.WM_ConsultaPosicionOperationCompleted = AddressOf Me.OnWM_ConsultaPosicionOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaPosicion", New Object() {prmPosicion, prmEstacion, prmUsuario}, Me.WM_ConsultaPosicionOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaPosicionOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaPosicionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaPosicionCompleted(Me, New WM_ConsultaPosicionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ReubicarProductoPorCantidades", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ReubicarProductoPorCantidades(ByVal prmUbicacion As String, ByVal prmProducto As String, ByVal prmLote As String, ByVal prmCantidadXEmpaque As String, ByVal prmCantidad As String, ByVal prmUbicacionNueva As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ReubicarProductoPorCantidades", New Object() {prmUbicacion, prmProducto, prmLote, prmCantidadXEmpaque, prmCantidad, prmUbicacionNueva, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ReubicarProductoPorCantidadesAsync(ByVal prmUbicacion As String, ByVal prmProducto As String, ByVal prmLote As String, ByVal prmCantidadXEmpaque As String, ByVal prmCantidad As String, ByVal prmUbicacionNueva As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ReubicarProductoPorCantidadesAsync(prmUbicacion, prmProducto, prmLote, prmCantidadXEmpaque, prmCantidad, prmUbicacionNueva, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ReubicarProductoPorCantidadesAsync(ByVal prmUbicacion As String, ByVal prmProducto As String, ByVal prmLote As String, ByVal prmCantidadXEmpaque As String, ByVal prmCantidad As String, ByVal prmUbicacionNueva As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ReubicarProductoPorCantidadesOperationCompleted Is Nothing) Then
                Me.WM_ReubicarProductoPorCantidadesOperationCompleted = AddressOf Me.OnWM_ReubicarProductoPorCantidadesOperationCompleted
            End If
            Me.InvokeAsync("WM_ReubicarProductoPorCantidades", New Object() {prmUbicacion, prmProducto, prmLote, prmCantidadXEmpaque, prmCantidad, prmUbicacionNueva, prmEstacion, prmUsuario}, Me.WM_ReubicarProductoPorCantidadesOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ReubicarProductoPorCantidadesOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ReubicarProductoPorCantidadesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ReubicarProductoPorCantidadesCompleted(Me, New WM_ReubicarProductoPorCantidadesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ReubicarProductoPorSKU", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ReubicarProductoPorSKU(ByVal prmCodigo As String, ByVal prmUbicacion As String, ByVal prmNvoContenedor As String, ByVal prmSKU As String, ByVal prmCantidad As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ReubicarProductoPorSKU", New Object() {prmCodigo, prmUbicacion, prmNvoContenedor, prmSKU, prmCantidad, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ReubicarProductoPorSKUAsync(ByVal prmCodigo As String, ByVal prmUbicacion As String, ByVal prmNvoContenedor As String, ByVal prmSKU As String, ByVal prmCantidad As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ReubicarProductoPorSKUAsync(prmCodigo, prmUbicacion, prmNvoContenedor, prmSKU, prmCantidad, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ReubicarProductoPorSKUAsync(ByVal prmCodigo As String, ByVal prmUbicacion As String, ByVal prmNvoContenedor As String, ByVal prmSKU As String, ByVal prmCantidad As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ReubicarProductoPorSKUOperationCompleted Is Nothing) Then
                Me.WM_ReubicarProductoPorSKUOperationCompleted = AddressOf Me.OnWM_ReubicarProductoPorSKUOperationCompleted
            End If
            Me.InvokeAsync("WM_ReubicarProductoPorSKU", New Object() {prmCodigo, prmUbicacion, prmNvoContenedor, prmSKU, prmCantidad, prmEstacion, prmUsuario}, Me.WM_ReubicarProductoPorSKUOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ReubicarProductoPorSKUOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ReubicarProductoPorSKUCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ReubicarProductoPorSKUCompleted(Me, New WM_ReubicarProductoPorSKUCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ReubicarProductoPorSKUPiezas", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ReubicarProductoPorSKUPiezas(ByVal prmCodigo As String, ByVal prmUbicacion As String, ByVal prmNvoContenedor As String, ByVal prmSKU As String, ByVal prmCantidad As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ReubicarProductoPorSKUPiezas", New Object() {prmCodigo, prmUbicacion, prmNvoContenedor, prmSKU, prmCantidad, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ReubicarProductoPorSKUPiezasAsync(ByVal prmCodigo As String, ByVal prmUbicacion As String, ByVal prmNvoContenedor As String, ByVal prmSKU As String, ByVal prmCantidad As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ReubicarProductoPorSKUPiezasAsync(prmCodigo, prmUbicacion, prmNvoContenedor, prmSKU, prmCantidad, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ReubicarProductoPorSKUPiezasAsync(ByVal prmCodigo As String, ByVal prmUbicacion As String, ByVal prmNvoContenedor As String, ByVal prmSKU As String, ByVal prmCantidad As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ReubicarProductoPorSKUPiezasOperationCompleted Is Nothing) Then
                Me.WM_ReubicarProductoPorSKUPiezasOperationCompleted = AddressOf Me.OnWM_ReubicarProductoPorSKUPiezasOperationCompleted
            End If
            Me.InvokeAsync("WM_ReubicarProductoPorSKUPiezas", New Object() {prmCodigo, prmUbicacion, prmNvoContenedor, prmSKU, prmCantidad, prmEstacion, prmUsuario}, Me.WM_ReubicarProductoPorSKUPiezasOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ReubicarProductoPorSKUPiezasOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ReubicarProductoPorSKUPiezasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ReubicarProductoPorSKUPiezasCompleted(Me, New WM_ReubicarProductoPorSKUPiezasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ReabastecePicking", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ReabastecePicking(ByVal prmCodigoPallet As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ReabastecePicking", New Object() {prmCodigoPallet, prmUbicacion, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ReabastecePickingAsync(ByVal prmCodigoPallet As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ReabastecePickingAsync(prmCodigoPallet, prmUbicacion, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ReabastecePickingAsync(ByVal prmCodigoPallet As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ReabastecePickingOperationCompleted Is Nothing) Then
                Me.WM_ReabastecePickingOperationCompleted = AddressOf Me.OnWM_ReabastecePickingOperationCompleted
            End If
            Me.InvokeAsync("WM_ReabastecePicking", New Object() {prmCodigoPallet, prmUbicacion, prmEstacion, prmUsuario}, Me.WM_ReabastecePickingOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ReabastecePickingOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ReabastecePickingCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ReabastecePickingCompleted(Me, New WM_ReabastecePickingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ReabastecePickingKanban", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ReabastecePickingKanban(ByVal prmCodigoPallet As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ReabastecePickingKanban", New Object() {prmCodigoPallet, prmUbicacion, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ReabastecePickingKanbanAsync(ByVal prmCodigoPallet As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ReabastecePickingKanbanAsync(prmCodigoPallet, prmUbicacion, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ReabastecePickingKanbanAsync(ByVal prmCodigoPallet As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ReabastecePickingKanbanOperationCompleted Is Nothing) Then
                Me.WM_ReabastecePickingKanbanOperationCompleted = AddressOf Me.OnWM_ReabastecePickingKanbanOperationCompleted
            End If
            Me.InvokeAsync("WM_ReabastecePickingKanban", New Object() {prmCodigoPallet, prmUbicacion, prmEstacion, prmUsuario}, Me.WM_ReabastecePickingKanbanOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ReabastecePickingKanbanOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ReabastecePickingKanbanCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ReabastecePickingKanbanCompleted(Me, New WM_ReabastecePickingKanbanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaMaquinas", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaMaquinas(ByVal prmMaquina As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaMaquinas", New Object() {prmMaquina, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaMaquinasAsync(ByVal prmMaquina As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaMaquinasAsync(prmMaquina, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaMaquinasAsync(ByVal prmMaquina As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaMaquinasOperationCompleted Is Nothing) Then
                Me.WM_ConsultaMaquinasOperationCompleted = AddressOf Me.OnWM_ConsultaMaquinasOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaMaquinas", New Object() {prmMaquina, prmEstacion, prmUsuario}, Me.WM_ConsultaMaquinasOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaMaquinasOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaMaquinasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaMaquinasCompleted(Me, New WM_ConsultaMaquinasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaPartidasMaquila", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaPartidasMaquila(ByVal prmDoc As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaPartidasMaquila", New Object() {prmDoc, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaPartidasMaquilaAsync(ByVal prmDoc As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaPartidasMaquilaAsync(prmDoc, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaPartidasMaquilaAsync(ByVal prmDoc As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaPartidasMaquilaOperationCompleted Is Nothing) Then
                Me.WM_ConsultaPartidasMaquilaOperationCompleted = AddressOf Me.OnWM_ConsultaPartidasMaquilaOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaPartidasMaquila", New Object() {prmDoc, prmEstacion, prmUsuario}, Me.WM_ConsultaPartidasMaquilaOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaPartidasMaquilaOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaPartidasMaquilaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaPartidasMaquilaCompleted(Me, New WM_ConsultaPartidasMaquilaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaPartidasSpinner", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaPartidasSpinner(ByVal prmPedido As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaPartidasSpinner", New Object() {prmPedido, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaPartidasSpinnerAsync(ByVal prmPedido As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaPartidasSpinnerAsync(prmPedido, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaPartidasSpinnerAsync(ByVal prmPedido As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaPartidasSpinnerOperationCompleted Is Nothing) Then
                Me.WM_ConsultaPartidasSpinnerOperationCompleted = AddressOf Me.OnWM_ConsultaPartidasSpinnerOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaPartidasSpinner", New Object() {prmPedido, prmEstacion, prmUsuario}, Me.WM_ConsultaPartidasSpinnerOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaPartidasSpinnerOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaPartidasSpinnerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaPartidasSpinnerCompleted(Me, New WM_ConsultaPartidasSpinnerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_OSListarPartidasOrdenesSurtido", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_OSListarPartidasOrdenesSurtido(ByVal prmOrdenSurtido As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_OSListarPartidasOrdenesSurtido", New Object() {prmOrdenSurtido, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_OSListarPartidasOrdenesSurtidoAsync(ByVal prmOrdenSurtido As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_OSListarPartidasOrdenesSurtidoAsync(prmOrdenSurtido, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_OSListarPartidasOrdenesSurtidoAsync(ByVal prmOrdenSurtido As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_OSListarPartidasOrdenesSurtidoOperationCompleted Is Nothing) Then
                Me.WM_OSListarPartidasOrdenesSurtidoOperationCompleted = AddressOf Me.OnWM_OSListarPartidasOrdenesSurtidoOperationCompleted
            End If
            Me.InvokeAsync("WM_OSListarPartidasOrdenesSurtido", New Object() {prmOrdenSurtido, prmEstacion, prmUsuario}, Me.WM_OSListarPartidasOrdenesSurtidoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_OSListarPartidasOrdenesSurtidoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_OSListarPartidasOrdenesSurtidoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_OSListarPartidasOrdenesSurtidoCompleted(Me, New WM_OSListarPartidasOrdenesSurtidoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_OSConsultaPartidaOrdenesSurtido", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_OSConsultaPartidaOrdenesSurtido(ByVal prmOrdenSurtido As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_OSConsultaPartidaOrdenesSurtido", New Object() {prmOrdenSurtido, prmPartida, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_OSConsultaPartidaOrdenesSurtidoAsync(ByVal prmOrdenSurtido As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_OSConsultaPartidaOrdenesSurtidoAsync(prmOrdenSurtido, prmPartida, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_OSConsultaPartidaOrdenesSurtidoAsync(ByVal prmOrdenSurtido As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_OSConsultaPartidaOrdenesSurtidoOperationCompleted Is Nothing) Then
                Me.WM_OSConsultaPartidaOrdenesSurtidoOperationCompleted = AddressOf Me.OnWM_OSConsultaPartidaOrdenesSurtidoOperationCompleted
            End If
            Me.InvokeAsync("WM_OSConsultaPartidaOrdenesSurtido", New Object() {prmOrdenSurtido, prmPartida, prmEstacion, prmUsuario}, Me.WM_OSConsultaPartidaOrdenesSurtidoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_OSConsultaPartidaOrdenesSurtidoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_OSConsultaPartidaOrdenesSurtidoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_OSConsultaPartidaOrdenesSurtidoCompleted(Me, New WM_OSConsultaPartidaOrdenesSurtidoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaPalletASurtir", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaPalletASurtir(ByVal prmCodigoPallet As String, ByVal prmOrdenSurtido As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaPalletASurtir", New Object() {prmCodigoPallet, prmOrdenSurtido, prmPartida, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaPalletASurtirAsync(ByVal prmCodigoPallet As String, ByVal prmOrdenSurtido As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaPalletASurtirAsync(prmCodigoPallet, prmOrdenSurtido, prmPartida, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaPalletASurtirAsync(ByVal prmCodigoPallet As String, ByVal prmOrdenSurtido As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaPalletASurtirOperationCompleted Is Nothing) Then
                Me.WM_ConsultaPalletASurtirOperationCompleted = AddressOf Me.OnWM_ConsultaPalletASurtirOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaPalletASurtir", New Object() {prmCodigoPallet, prmOrdenSurtido, prmPartida, prmEstacion, prmUsuario}, Me.WM_ConsultaPalletASurtirOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaPalletASurtirOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaPalletASurtirCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaPalletASurtirCompleted(Me, New WM_ConsultaPalletASurtirCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaEmpaqueASurtir", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaEmpaqueASurtir(ByVal prmCodigoEmpaque As String, ByVal prmOrdenSurtido As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaEmpaqueASurtir", New Object() {prmCodigoEmpaque, prmOrdenSurtido, prmPartida, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaEmpaqueASurtirAsync(ByVal prmCodigoEmpaque As String, ByVal prmOrdenSurtido As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaEmpaqueASurtirAsync(prmCodigoEmpaque, prmOrdenSurtido, prmPartida, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaEmpaqueASurtirAsync(ByVal prmCodigoEmpaque As String, ByVal prmOrdenSurtido As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaEmpaqueASurtirOperationCompleted Is Nothing) Then
                Me.WM_ConsultaEmpaqueASurtirOperationCompleted = AddressOf Me.OnWM_ConsultaEmpaqueASurtirOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaEmpaqueASurtir", New Object() {prmCodigoEmpaque, prmOrdenSurtido, prmPartida, prmEstacion, prmUsuario}, Me.WM_ConsultaEmpaqueASurtirOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaEmpaqueASurtirOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaEmpaqueASurtirCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaEmpaqueASurtirCompleted(Me, New WM_ConsultaEmpaqueASurtirCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_OSSugerirPallet", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_OSSugerirPallet(ByVal prmOrdenSurtido As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_OSSugerirPallet", New Object() {prmOrdenSurtido, prmPartida, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_OSSugerirPalletAsync(ByVal prmOrdenSurtido As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_OSSugerirPalletAsync(prmOrdenSurtido, prmPartida, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_OSSugerirPalletAsync(ByVal prmOrdenSurtido As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_OSSugerirPalletOperationCompleted Is Nothing) Then
                Me.WM_OSSugerirPalletOperationCompleted = AddressOf Me.OnWM_OSSugerirPalletOperationCompleted
            End If
            Me.InvokeAsync("WM_OSSugerirPallet", New Object() {prmOrdenSurtido, prmPartida, prmEstacion, prmUsuario}, Me.WM_OSSugerirPalletOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_OSSugerirPalletOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_OSSugerirPalletCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_OSSugerirPalletCompleted(Me, New WM_OSSugerirPalletCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_OSSugerirEmpaque", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_OSSugerirEmpaque(ByVal prmOrdenSurtido As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal prmTipoRegistro As Integer) As CResultado
            Dim results() As Object = Me.Invoke("WM_OSSugerirEmpaque", New Object() {prmOrdenSurtido, prmPartida, prmEstacion, prmUsuario, prmTipoRegistro})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_OSSugerirEmpaqueAsync(ByVal prmOrdenSurtido As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal prmTipoRegistro As Integer)
            Me.WM_OSSugerirEmpaqueAsync(prmOrdenSurtido, prmPartida, prmEstacion, prmUsuario, prmTipoRegistro, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_OSSugerirEmpaqueAsync(ByVal prmOrdenSurtido As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal prmTipoRegistro As Integer, ByVal userState As Object)
            If (Me.WM_OSSugerirEmpaqueOperationCompleted Is Nothing) Then
                Me.WM_OSSugerirEmpaqueOperationCompleted = AddressOf Me.OnWM_OSSugerirEmpaqueOperationCompleted
            End If
            Me.InvokeAsync("WM_OSSugerirEmpaque", New Object() {prmOrdenSurtido, prmPartida, prmEstacion, prmUsuario, prmTipoRegistro}, Me.WM_OSSugerirEmpaqueOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_OSSugerirEmpaqueOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_OSSugerirEmpaqueCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_OSSugerirEmpaqueCompleted(Me, New WM_OSSugerirEmpaqueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_OSSugerirEmpaqueUnidad", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_OSSugerirEmpaqueUnidad(ByVal prmOrdenSurtido As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_OSSugerirEmpaqueUnidad", New Object() {prmOrdenSurtido, prmPartida, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_OSSugerirEmpaqueUnidadAsync(ByVal prmOrdenSurtido As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_OSSugerirEmpaqueUnidadAsync(prmOrdenSurtido, prmPartida, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_OSSugerirEmpaqueUnidadAsync(ByVal prmOrdenSurtido As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_OSSugerirEmpaqueUnidadOperationCompleted Is Nothing) Then
                Me.WM_OSSugerirEmpaqueUnidadOperationCompleted = AddressOf Me.OnWM_OSSugerirEmpaqueUnidadOperationCompleted
            End If
            Me.InvokeAsync("WM_OSSugerirEmpaqueUnidad", New Object() {prmOrdenSurtido, prmPartida, prmEstacion, prmUsuario}, Me.WM_OSSugerirEmpaqueUnidadOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_OSSugerirEmpaqueUnidadOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_OSSugerirEmpaqueUnidadCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_OSSugerirEmpaqueUnidadCompleted(Me, New WM_OSSugerirEmpaqueUnidadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_OSSurtirPallet", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_OSSurtirPallet(ByVal prmOrdenSurtido As String, ByVal prmPartida As String, ByVal prmCodigoPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_OSSurtirPallet", New Object() {prmOrdenSurtido, prmPartida, prmCodigoPallet, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_OSSurtirPalletAsync(ByVal prmOrdenSurtido As String, ByVal prmPartida As String, ByVal prmCodigoPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_OSSurtirPalletAsync(prmOrdenSurtido, prmPartida, prmCodigoPallet, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_OSSurtirPalletAsync(ByVal prmOrdenSurtido As String, ByVal prmPartida As String, ByVal prmCodigoPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_OSSurtirPalletOperationCompleted Is Nothing) Then
                Me.WM_OSSurtirPalletOperationCompleted = AddressOf Me.OnWM_OSSurtirPalletOperationCompleted
            End If
            Me.InvokeAsync("WM_OSSurtirPallet", New Object() {prmOrdenSurtido, prmPartida, prmCodigoPallet, prmEstacion, prmUsuario}, Me.WM_OSSurtirPalletOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_OSSurtirPalletOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_OSSurtirPalletCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_OSSurtirPalletCompleted(Me, New WM_OSSurtirPalletCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_OSSurtirEmpaque", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_OSSurtirEmpaque(ByVal prmOrdenSurtido As String, ByVal prmPartida As String, ByVal prmCodigoEmpaque As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_OSSurtirEmpaque", New Object() {prmOrdenSurtido, prmPartida, prmCodigoEmpaque, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_OSSurtirEmpaqueAsync(ByVal prmOrdenSurtido As String, ByVal prmPartida As String, ByVal prmCodigoEmpaque As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_OSSurtirEmpaqueAsync(prmOrdenSurtido, prmPartida, prmCodigoEmpaque, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_OSSurtirEmpaqueAsync(ByVal prmOrdenSurtido As String, ByVal prmPartida As String, ByVal prmCodigoEmpaque As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_OSSurtirEmpaqueOperationCompleted Is Nothing) Then
                Me.WM_OSSurtirEmpaqueOperationCompleted = AddressOf Me.OnWM_OSSurtirEmpaqueOperationCompleted
            End If
            Me.InvokeAsync("WM_OSSurtirEmpaque", New Object() {prmOrdenSurtido, prmPartida, prmCodigoEmpaque, prmEstacion, prmUsuario}, Me.WM_OSSurtirEmpaqueOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_OSSurtirEmpaqueOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_OSSurtirEmpaqueCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_OSSurtirEmpaqueCompleted(Me, New WM_OSSurtirEmpaqueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_OSSurtirEmpaques_NE", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_OSSurtirEmpaques_NE(ByVal prmOrdenSurtido As String, ByVal prmPartida As String, ByVal prmPallet As String, ByVal prmCantidadEmpaques As Integer, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_OSSurtirEmpaques_NE", New Object() {prmOrdenSurtido, prmPartida, prmPallet, prmCantidadEmpaques, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_OSSurtirEmpaques_NEAsync(ByVal prmOrdenSurtido As String, ByVal prmPartida As String, ByVal prmPallet As String, ByVal prmCantidadEmpaques As Integer, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_OSSurtirEmpaques_NEAsync(prmOrdenSurtido, prmPartida, prmPallet, prmCantidadEmpaques, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_OSSurtirEmpaques_NEAsync(ByVal prmOrdenSurtido As String, ByVal prmPartida As String, ByVal prmPallet As String, ByVal prmCantidadEmpaques As Integer, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_OSSurtirEmpaques_NEOperationCompleted Is Nothing) Then
                Me.WM_OSSurtirEmpaques_NEOperationCompleted = AddressOf Me.OnWM_OSSurtirEmpaques_NEOperationCompleted
            End If
            Me.InvokeAsync("WM_OSSurtirEmpaques_NE", New Object() {prmOrdenSurtido, prmPartida, prmPallet, prmCantidadEmpaques, prmEstacion, prmUsuario}, Me.WM_OSSurtirEmpaques_NEOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_OSSurtirEmpaques_NEOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_OSSurtirEmpaques_NECompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_OSSurtirEmpaques_NECompleted(Me, New WM_OSSurtirEmpaques_NECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_OSSurtirPiezas", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_OSSurtirPiezas(ByVal prmPedido As String, ByVal prmPartida As String, ByVal prmContenedor As String, ByVal prmCantidadPiezas As Double, ByVal prmCarrito As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_OSSurtirPiezas", New Object() {prmPedido, prmPartida, prmContenedor, prmCantidadPiezas, prmCarrito, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_OSSurtirPiezasAsync(ByVal prmPedido As String, ByVal prmPartida As String, ByVal prmContenedor As String, ByVal prmCantidadPiezas As Double, ByVal prmCarrito As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_OSSurtirPiezasAsync(prmPedido, prmPartida, prmContenedor, prmCantidadPiezas, prmCarrito, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_OSSurtirPiezasAsync(ByVal prmPedido As String, ByVal prmPartida As String, ByVal prmContenedor As String, ByVal prmCantidadPiezas As Double, ByVal prmCarrito As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_OSSurtirPiezasOperationCompleted Is Nothing) Then
                Me.WM_OSSurtirPiezasOperationCompleted = AddressOf Me.OnWM_OSSurtirPiezasOperationCompleted
            End If
            Me.InvokeAsync("WM_OSSurtirPiezas", New Object() {prmPedido, prmPartida, prmContenedor, prmCantidadPiezas, prmCarrito, prmEstacion, prmUsuario}, Me.WM_OSSurtirPiezasOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_OSSurtirPiezasOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_OSSurtirPiezasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_OSSurtirPiezasCompleted(Me, New WM_OSSurtirPiezasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_OSSurtirPiezasSKU", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_OSSurtirPiezasSKU(ByVal prmPedido As String, ByVal prmPartida As String, ByVal prmContenedor As String, ByVal prmSKU As String, ByVal prmCarrito As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_OSSurtirPiezasSKU", New Object() {prmPedido, prmPartida, prmContenedor, prmSKU, prmCarrito, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_OSSurtirPiezasSKUAsync(ByVal prmPedido As String, ByVal prmPartida As String, ByVal prmContenedor As String, ByVal prmSKU As String, ByVal prmCarrito As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_OSSurtirPiezasSKUAsync(prmPedido, prmPartida, prmContenedor, prmSKU, prmCarrito, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_OSSurtirPiezasSKUAsync(ByVal prmPedido As String, ByVal prmPartida As String, ByVal prmContenedor As String, ByVal prmSKU As String, ByVal prmCarrito As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_OSSurtirPiezasSKUOperationCompleted Is Nothing) Then
                Me.WM_OSSurtirPiezasSKUOperationCompleted = AddressOf Me.OnWM_OSSurtirPiezasSKUOperationCompleted
            End If
            Me.InvokeAsync("WM_OSSurtirPiezasSKU", New Object() {prmPedido, prmPartida, prmContenedor, prmSKU, prmCarrito, prmEstacion, prmUsuario}, Me.WM_OSSurtirPiezasSKUOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_OSSurtirPiezasSKUOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_OSSurtirPiezasSKUCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_OSSurtirPiezasSKUCompleted(Me, New WM_OSSurtirPiezasSKUCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_OSCancelarSurtPiezas", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_OSCancelarSurtPiezas(ByVal prmPedido As String, ByVal prmPartida As String, ByVal prmContenedor As String, ByVal prmPiezas As String, ByVal prmCarrito As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_OSCancelarSurtPiezas", New Object() {prmPedido, prmPartida, prmContenedor, prmPiezas, prmCarrito, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_OSCancelarSurtPiezasAsync(ByVal prmPedido As String, ByVal prmPartida As String, ByVal prmContenedor As String, ByVal prmPiezas As String, ByVal prmCarrito As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_OSCancelarSurtPiezasAsync(prmPedido, prmPartida, prmContenedor, prmPiezas, prmCarrito, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_OSCancelarSurtPiezasAsync(ByVal prmPedido As String, ByVal prmPartida As String, ByVal prmContenedor As String, ByVal prmPiezas As String, ByVal prmCarrito As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_OSCancelarSurtPiezasOperationCompleted Is Nothing) Then
                Me.WM_OSCancelarSurtPiezasOperationCompleted = AddressOf Me.OnWM_OSCancelarSurtPiezasOperationCompleted
            End If
            Me.InvokeAsync("WM_OSCancelarSurtPiezas", New Object() {prmPedido, prmPartida, prmContenedor, prmPiezas, prmCarrito, prmEstacion, prmUsuario}, Me.WM_OSCancelarSurtPiezasOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_OSCancelarSurtPiezasOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_OSCancelarSurtPiezasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_OSCancelarSurtPiezasCompleted(Me, New WM_OSCancelarSurtPiezasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_OSConsultaPalletPKAbierto", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_OSConsultaPalletPKAbierto(ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_OSConsultaPalletPKAbierto", New Object() {prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_OSConsultaPalletPKAbiertoAsync(ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_OSConsultaPalletPKAbiertoAsync(prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_OSConsultaPalletPKAbiertoAsync(ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_OSConsultaPalletPKAbiertoOperationCompleted Is Nothing) Then
                Me.WM_OSConsultaPalletPKAbiertoOperationCompleted = AddressOf Me.OnWM_OSConsultaPalletPKAbiertoOperationCompleted
            End If
            Me.InvokeAsync("WM_OSConsultaPalletPKAbierto", New Object() {prmEstacion, prmUsuario}, Me.WM_OSConsultaPalletPKAbiertoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_OSConsultaPalletPKAbiertoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_OSConsultaPalletPKAbiertoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_OSConsultaPalletPKAbiertoCompleted(Me, New WM_OSConsultaPalletPKAbiertoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_OSCerrarPalletPK", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_OSCerrarPalletPK(ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_OSCerrarPalletPK", New Object() {prmPallet, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_OSCerrarPalletPKAsync(ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_OSCerrarPalletPKAsync(prmPallet, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_OSCerrarPalletPKAsync(ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_OSCerrarPalletPKOperationCompleted Is Nothing) Then
                Me.WM_OSCerrarPalletPKOperationCompleted = AddressOf Me.OnWM_OSCerrarPalletPKOperationCompleted
            End If
            Me.InvokeAsync("WM_OSCerrarPalletPK", New Object() {prmPallet, prmEstacion, prmUsuario}, Me.WM_OSCerrarPalletPKOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_OSCerrarPalletPKOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_OSCerrarPalletPKCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_OSCerrarPalletPKCompleted(Me, New WM_OSCerrarPalletPKCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_OSListarPartidasOSPrecarga", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_OSListarPartidasOSPrecarga(ByVal prmOrdenSurtido As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_OSListarPartidasOSPrecarga", New Object() {prmOrdenSurtido, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_OSListarPartidasOSPrecargaAsync(ByVal prmOrdenSurtido As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_OSListarPartidasOSPrecargaAsync(prmOrdenSurtido, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_OSListarPartidasOSPrecargaAsync(ByVal prmOrdenSurtido As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_OSListarPartidasOSPrecargaOperationCompleted Is Nothing) Then
                Me.WM_OSListarPartidasOSPrecargaOperationCompleted = AddressOf Me.OnWM_OSListarPartidasOSPrecargaOperationCompleted
            End If
            Me.InvokeAsync("WM_OSListarPartidasOSPrecarga", New Object() {prmOrdenSurtido, prmEstacion, prmUsuario}, Me.WM_OSListarPartidasOSPrecargaOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_OSListarPartidasOSPrecargaOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_OSListarPartidasOSPrecargaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_OSListarPartidasOSPrecargaCompleted(Me, New WM_OSListarPartidasOSPrecargaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_OSSurtirPalletPrecarga", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_OSSurtirPalletPrecarga(ByVal prmOrdenSurtido As String, ByVal prmPartida As String, ByVal prmCodigoPallet As String, ByVal prmZonaPrepara As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_OSSurtirPalletPrecarga", New Object() {prmOrdenSurtido, prmPartida, prmCodigoPallet, prmZonaPrepara, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_OSSurtirPalletPrecargaAsync(ByVal prmOrdenSurtido As String, ByVal prmPartida As String, ByVal prmCodigoPallet As String, ByVal prmZonaPrepara As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_OSSurtirPalletPrecargaAsync(prmOrdenSurtido, prmPartida, prmCodigoPallet, prmZonaPrepara, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_OSSurtirPalletPrecargaAsync(ByVal prmOrdenSurtido As String, ByVal prmPartida As String, ByVal prmCodigoPallet As String, ByVal prmZonaPrepara As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_OSSurtirPalletPrecargaOperationCompleted Is Nothing) Then
                Me.WM_OSSurtirPalletPrecargaOperationCompleted = AddressOf Me.OnWM_OSSurtirPalletPrecargaOperationCompleted
            End If
            Me.InvokeAsync("WM_OSSurtirPalletPrecarga", New Object() {prmOrdenSurtido, prmPartida, prmCodigoPallet, prmZonaPrepara, prmEstacion, prmUsuario}, Me.WM_OSSurtirPalletPrecargaOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_OSSurtirPalletPrecargaOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_OSSurtirPalletPrecargaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_OSSurtirPalletPrecargaCompleted(Me, New WM_OSSurtirPalletPrecargaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_OSSugerirPalletPrecarga", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_OSSugerirPalletPrecarga(ByVal prmOrdenSurtido As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_OSSugerirPalletPrecarga", New Object() {prmOrdenSurtido, prmPartida, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_OSSugerirPalletPrecargaAsync(ByVal prmOrdenSurtido As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_OSSugerirPalletPrecargaAsync(prmOrdenSurtido, prmPartida, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_OSSugerirPalletPrecargaAsync(ByVal prmOrdenSurtido As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_OSSugerirPalletPrecargaOperationCompleted Is Nothing) Then
                Me.WM_OSSugerirPalletPrecargaOperationCompleted = AddressOf Me.OnWM_OSSugerirPalletPrecargaOperationCompleted
            End If
            Me.InvokeAsync("WM_OSSugerirPalletPrecarga", New Object() {prmOrdenSurtido, prmPartida, prmEstacion, prmUsuario}, Me.WM_OSSugerirPalletPrecargaOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_OSSugerirPalletPrecargaOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_OSSugerirPalletPrecargaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_OSSugerirPalletPrecargaCompleted(Me, New WM_OSSugerirPalletPrecargaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaPedidoSurtido", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaPedidoSurtido(ByVal prmPedido As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaPedidoSurtido", New Object() {prmPedido, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaPedidoSurtidoAsync(ByVal prmPedido As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaPedidoSurtidoAsync(prmPedido, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaPedidoSurtidoAsync(ByVal prmPedido As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaPedidoSurtidoOperationCompleted Is Nothing) Then
                Me.WM_ConsultaPedidoSurtidoOperationCompleted = AddressOf Me.OnWM_ConsultaPedidoSurtidoOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaPedidoSurtido", New Object() {prmPedido, prmEstacion, prmUsuario}, Me.WM_ConsultaPedidoSurtidoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaPedidoSurtidoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaPedidoSurtidoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaPedidoSurtidoCompleted(Me, New WM_ConsultaPedidoSurtidoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaSurtidoDetPartida", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaSurtidoDetPartida(ByVal prmPedido As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaSurtidoDetPartida", New Object() {prmPedido, prmPartida, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaSurtidoDetPartidaAsync(ByVal prmPedido As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaSurtidoDetPartidaAsync(prmPedido, prmPartida, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaSurtidoDetPartidaAsync(ByVal prmPedido As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaSurtidoDetPartidaOperationCompleted Is Nothing) Then
                Me.WM_ConsultaSurtidoDetPartidaOperationCompleted = AddressOf Me.OnWM_ConsultaSurtidoDetPartidaOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaSurtidoDetPartida", New Object() {prmPedido, prmPartida, prmEstacion, prmUsuario}, Me.WM_ConsultaSurtidoDetPartidaOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaSurtidoDetPartidaOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaSurtidoDetPartidaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaSurtidoDetPartidaCompleted(Me, New WM_ConsultaSurtidoDetPartidaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaEmpaqueSurtido", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaEmpaqueSurtido(ByVal prmPedido As String, ByVal prmPartida As String, ByVal prmEmpaque As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaEmpaqueSurtido", New Object() {prmPedido, prmPartida, prmEmpaque, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaEmpaqueSurtidoAsync(ByVal prmPedido As String, ByVal prmPartida As String, ByVal prmEmpaque As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaEmpaqueSurtidoAsync(prmPedido, prmPartida, prmEmpaque, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaEmpaqueSurtidoAsync(ByVal prmPedido As String, ByVal prmPartida As String, ByVal prmEmpaque As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaEmpaqueSurtidoOperationCompleted Is Nothing) Then
                Me.WM_ConsultaEmpaqueSurtidoOperationCompleted = AddressOf Me.OnWM_ConsultaEmpaqueSurtidoOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaEmpaqueSurtido", New Object() {prmPedido, prmPartida, prmEmpaque, prmEstacion, prmUsuario}, Me.WM_ConsultaEmpaqueSurtidoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaEmpaqueSurtidoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaEmpaqueSurtidoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaEmpaqueSurtidoCompleted(Me, New WM_ConsultaEmpaqueSurtidoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaPalletSurtido", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaPalletSurtido(ByVal prmPedido As String, ByVal prmPartida As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaPalletSurtido", New Object() {prmPedido, prmPartida, prmPallet, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaPalletSurtidoAsync(ByVal prmPedido As String, ByVal prmPartida As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaPalletSurtidoAsync(prmPedido, prmPartida, prmPallet, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaPalletSurtidoAsync(ByVal prmPedido As String, ByVal prmPartida As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaPalletSurtidoOperationCompleted Is Nothing) Then
                Me.WM_ConsultaPalletSurtidoOperationCompleted = AddressOf Me.OnWM_ConsultaPalletSurtidoOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaPalletSurtido", New Object() {prmPedido, prmPartida, prmPallet, prmEstacion, prmUsuario}, Me.WM_ConsultaPalletSurtidoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaPalletSurtidoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaPalletSurtidoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaPalletSurtidoCompleted(Me, New WM_ConsultaPalletSurtidoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaPalletSurtido_NE", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaPalletSurtido_NE(ByVal prmPedido As String, ByVal prmPartida As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaPalletSurtido_NE", New Object() {prmPedido, prmPartida, prmPallet, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaPalletSurtido_NEAsync(ByVal prmPedido As String, ByVal prmPartida As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaPalletSurtido_NEAsync(prmPedido, prmPartida, prmPallet, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaPalletSurtido_NEAsync(ByVal prmPedido As String, ByVal prmPartida As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaPalletSurtido_NEOperationCompleted Is Nothing) Then
                Me.WM_ConsultaPalletSurtido_NEOperationCompleted = AddressOf Me.OnWM_ConsultaPalletSurtido_NEOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaPalletSurtido_NE", New Object() {prmPedido, prmPartida, prmPallet, prmEstacion, prmUsuario}, Me.WM_ConsultaPalletSurtido_NEOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaPalletSurtido_NEOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaPalletSurtido_NECompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaPalletSurtido_NECompleted(Me, New WM_ConsultaPalletSurtido_NECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaContenedorSurtido", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaContenedorSurtido(ByVal prmPedido As String, ByVal prmPartida As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaContenedorSurtido", New Object() {prmPedido, prmPartida, prmPallet, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaContenedorSurtidoAsync(ByVal prmPedido As String, ByVal prmPartida As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaContenedorSurtidoAsync(prmPedido, prmPartida, prmPallet, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaContenedorSurtidoAsync(ByVal prmPedido As String, ByVal prmPartida As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaContenedorSurtidoOperationCompleted Is Nothing) Then
                Me.WM_ConsultaContenedorSurtidoOperationCompleted = AddressOf Me.OnWM_ConsultaContenedorSurtidoOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaContenedorSurtido", New Object() {prmPedido, prmPartida, prmPallet, prmEstacion, prmUsuario}, Me.WM_ConsultaContenedorSurtidoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaContenedorSurtidoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaContenedorSurtidoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaContenedorSurtidoCompleted(Me, New WM_ConsultaContenedorSurtidoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaValidacionPallet", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaValidacionPallet(ByVal prmPedido As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaValidacionPallet", New Object() {prmPedido, prmPallet, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaValidacionPalletAsync(ByVal prmPedido As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaValidacionPalletAsync(prmPedido, prmPallet, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaValidacionPalletAsync(ByVal prmPedido As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaValidacionPalletOperationCompleted Is Nothing) Then
                Me.WM_ConsultaValidacionPalletOperationCompleted = AddressOf Me.OnWM_ConsultaValidacionPalletOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaValidacionPallet", New Object() {prmPedido, prmPallet, prmEstacion, prmUsuario}, Me.WM_ConsultaValidacionPalletOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaValidacionPalletOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaValidacionPalletCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaValidacionPalletCompleted(Me, New WM_ConsultaValidacionPalletCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_PalletsArmadoPedido", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_PalletsArmadoPedido(ByVal prmPedido As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_PalletsArmadoPedido", New Object() {prmPedido, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_PalletsArmadoPedidoAsync(ByVal prmPedido As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_PalletsArmadoPedidoAsync(prmPedido, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_PalletsArmadoPedidoAsync(ByVal prmPedido As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_PalletsArmadoPedidoOperationCompleted Is Nothing) Then
                Me.WM_PalletsArmadoPedidoOperationCompleted = AddressOf Me.OnWM_PalletsArmadoPedidoOperationCompleted
            End If
            Me.InvokeAsync("WM_PalletsArmadoPedido", New Object() {prmPedido, prmEstacion, prmUsuario}, Me.WM_PalletsArmadoPedidoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_PalletsArmadoPedidoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_PalletsArmadoPedidoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_PalletsArmadoPedidoCompleted(Me, New WM_PalletsArmadoPedidoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaTarimaConsolidada", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaTarimaConsolidada(ByVal prmPedido As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal prmPalletCons As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaTarimaConsolidada", New Object() {prmPedido, prmEstacion, prmUsuario, prmPalletCons})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaTarimaConsolidadaAsync(ByVal prmPedido As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal prmPalletCons As String)
            Me.WM_ConsultaTarimaConsolidadaAsync(prmPedido, prmEstacion, prmUsuario, prmPalletCons, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaTarimaConsolidadaAsync(ByVal prmPedido As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal prmPalletCons As String, ByVal userState As Object)
            If (Me.WM_ConsultaTarimaConsolidadaOperationCompleted Is Nothing) Then
                Me.WM_ConsultaTarimaConsolidadaOperationCompleted = AddressOf Me.OnWM_ConsultaTarimaConsolidadaOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaTarimaConsolidada", New Object() {prmPedido, prmEstacion, prmUsuario, prmPalletCons}, Me.WM_ConsultaTarimaConsolidadaOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaTarimaConsolidadaOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaTarimaConsolidadaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaTarimaConsolidadaCompleted(Me, New WM_ConsultaTarimaConsolidadaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaTarimaConsolidada_NE", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaTarimaConsolidada_NE(ByVal prmPedido As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal prmPalletCons As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaTarimaConsolidada_NE", New Object() {prmPedido, prmEstacion, prmUsuario, prmPalletCons})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaTarimaConsolidada_NEAsync(ByVal prmPedido As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal prmPalletCons As String)
            Me.WM_ConsultaTarimaConsolidada_NEAsync(prmPedido, prmEstacion, prmUsuario, prmPalletCons, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaTarimaConsolidada_NEAsync(ByVal prmPedido As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal prmPalletCons As String, ByVal userState As Object)
            If (Me.WM_ConsultaTarimaConsolidada_NEOperationCompleted Is Nothing) Then
                Me.WM_ConsultaTarimaConsolidada_NEOperationCompleted = AddressOf Me.OnWM_ConsultaTarimaConsolidada_NEOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaTarimaConsolidada_NE", New Object() {prmPedido, prmEstacion, prmUsuario, prmPalletCons}, Me.WM_ConsultaTarimaConsolidada_NEOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaTarimaConsolidada_NEOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaTarimaConsolidada_NECompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaTarimaConsolidada_NECompleted(Me, New WM_ConsultaTarimaConsolidada_NECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_RegistroEmpaqueSurtido", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_RegistroEmpaqueSurtido(ByVal prmPedido As String, ByVal prmPartida As String, ByVal prmEmpaque As String, ByVal prmArmadoPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_RegistroEmpaqueSurtido", New Object() {prmPedido, prmPartida, prmEmpaque, prmArmadoPallet, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_RegistroEmpaqueSurtidoAsync(ByVal prmPedido As String, ByVal prmPartida As String, ByVal prmEmpaque As String, ByVal prmArmadoPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_RegistroEmpaqueSurtidoAsync(prmPedido, prmPartida, prmEmpaque, prmArmadoPallet, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_RegistroEmpaqueSurtidoAsync(ByVal prmPedido As String, ByVal prmPartida As String, ByVal prmEmpaque As String, ByVal prmArmadoPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_RegistroEmpaqueSurtidoOperationCompleted Is Nothing) Then
                Me.WM_RegistroEmpaqueSurtidoOperationCompleted = AddressOf Me.OnWM_RegistroEmpaqueSurtidoOperationCompleted
            End If
            Me.InvokeAsync("WM_RegistroEmpaqueSurtido", New Object() {prmPedido, prmPartida, prmEmpaque, prmArmadoPallet, prmEstacion, prmUsuario}, Me.WM_RegistroEmpaqueSurtidoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_RegistroEmpaqueSurtidoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_RegistroEmpaqueSurtidoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_RegistroEmpaqueSurtidoCompleted(Me, New WM_RegistroEmpaqueSurtidoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_RegistroEmpaqueSurtido_NE", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_RegistroEmpaqueSurtido_NE(ByVal prmPedido As String, ByVal prmPartida As String, ByVal prmPallet As String, ByVal prmCantidadEmpaques As Integer, ByVal prmArmadoPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_RegistroEmpaqueSurtido_NE", New Object() {prmPedido, prmPartida, prmPallet, prmCantidadEmpaques, prmArmadoPallet, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_RegistroEmpaqueSurtido_NEAsync(ByVal prmPedido As String, ByVal prmPartida As String, ByVal prmPallet As String, ByVal prmCantidadEmpaques As Integer, ByVal prmArmadoPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_RegistroEmpaqueSurtido_NEAsync(prmPedido, prmPartida, prmPallet, prmCantidadEmpaques, prmArmadoPallet, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_RegistroEmpaqueSurtido_NEAsync(ByVal prmPedido As String, ByVal prmPartida As String, ByVal prmPallet As String, ByVal prmCantidadEmpaques As Integer, ByVal prmArmadoPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_RegistroEmpaqueSurtido_NEOperationCompleted Is Nothing) Then
                Me.WM_RegistroEmpaqueSurtido_NEOperationCompleted = AddressOf Me.OnWM_RegistroEmpaqueSurtido_NEOperationCompleted
            End If
            Me.InvokeAsync("WM_RegistroEmpaqueSurtido_NE", New Object() {prmPedido, prmPartida, prmPallet, prmCantidadEmpaques, prmArmadoPallet, prmEstacion, prmUsuario}, Me.WM_RegistroEmpaqueSurtido_NEOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_RegistroEmpaqueSurtido_NEOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_RegistroEmpaqueSurtido_NECompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_RegistroEmpaqueSurtido_NECompleted(Me, New WM_RegistroEmpaqueSurtido_NECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_RegistroPalletSurtido", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_RegistroPalletSurtido(ByVal prmPedido As String, ByVal prmPartida As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_RegistroPalletSurtido", New Object() {prmPedido, prmPartida, prmPallet, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_RegistroPalletSurtidoAsync(ByVal prmPedido As String, ByVal prmPartida As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_RegistroPalletSurtidoAsync(prmPedido, prmPartida, prmPallet, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_RegistroPalletSurtidoAsync(ByVal prmPedido As String, ByVal prmPartida As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_RegistroPalletSurtidoOperationCompleted Is Nothing) Then
                Me.WM_RegistroPalletSurtidoOperationCompleted = AddressOf Me.OnWM_RegistroPalletSurtidoOperationCompleted
            End If
            Me.InvokeAsync("WM_RegistroPalletSurtido", New Object() {prmPedido, prmPartida, prmPallet, prmEstacion, prmUsuario}, Me.WM_RegistroPalletSurtidoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_RegistroPalletSurtidoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_RegistroPalletSurtidoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_RegistroPalletSurtidoCompleted(Me, New WM_RegistroPalletSurtidoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_RegistroPalletSurtidoMultPart", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_RegistroPalletSurtidoMultPart(ByVal prmPedido As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_RegistroPalletSurtidoMultPart", New Object() {prmPedido, prmPallet, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_RegistroPalletSurtidoMultPartAsync(ByVal prmPedido As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_RegistroPalletSurtidoMultPartAsync(prmPedido, prmPallet, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_RegistroPalletSurtidoMultPartAsync(ByVal prmPedido As String, ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_RegistroPalletSurtidoMultPartOperationCompleted Is Nothing) Then
                Me.WM_RegistroPalletSurtidoMultPartOperationCompleted = AddressOf Me.OnWM_RegistroPalletSurtidoMultPartOperationCompleted
            End If
            Me.InvokeAsync("WM_RegistroPalletSurtidoMultPart", New Object() {prmPedido, prmPallet, prmEstacion, prmUsuario}, Me.WM_RegistroPalletSurtidoMultPartOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_RegistroPalletSurtidoMultPartOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_RegistroPalletSurtidoMultPartCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_RegistroPalletSurtidoMultPartCompleted(Me, New WM_RegistroPalletSurtidoMultPartCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_CierraPalletSurtido", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_CierraPalletSurtido(ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_CierraPalletSurtido", New Object() {prmPallet, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_CierraPalletSurtidoAsync(ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_CierraPalletSurtidoAsync(prmPallet, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_CierraPalletSurtidoAsync(ByVal prmPallet As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_CierraPalletSurtidoOperationCompleted Is Nothing) Then
                Me.WM_CierraPalletSurtidoOperationCompleted = AddressOf Me.OnWM_CierraPalletSurtidoOperationCompleted
            End If
            Me.InvokeAsync("WM_CierraPalletSurtido", New Object() {prmPallet, prmEstacion, prmUsuario}, Me.WM_CierraPalletSurtidoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_CierraPalletSurtidoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_CierraPalletSurtidoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_CierraPalletSurtidoCompleted(Me, New WM_CierraPalletSurtidoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaPalletSugerido", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaPalletSugerido(ByVal prmPedido As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaPalletSugerido", New Object() {prmPedido, prmPartida, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaPalletSugeridoAsync(ByVal prmPedido As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaPalletSugeridoAsync(prmPedido, prmPartida, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaPalletSugeridoAsync(ByVal prmPedido As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaPalletSugeridoOperationCompleted Is Nothing) Then
                Me.WM_ConsultaPalletSugeridoOperationCompleted = AddressOf Me.OnWM_ConsultaPalletSugeridoOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaPalletSugerido", New Object() {prmPedido, prmPartida, prmEstacion, prmUsuario}, Me.WM_ConsultaPalletSugeridoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaPalletSugeridoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaPalletSugeridoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaPalletSugeridoCompleted(Me, New WM_ConsultaPalletSugeridoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaEmpaqueSugerido", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaEmpaqueSugerido(ByVal prmPedido As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal prmTipoRegistro As Integer) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaEmpaqueSugerido", New Object() {prmPedido, prmPartida, prmEstacion, prmUsuario, prmTipoRegistro})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaEmpaqueSugeridoAsync(ByVal prmPedido As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal prmTipoRegistro As Integer)
            Me.WM_ConsultaEmpaqueSugeridoAsync(prmPedido, prmPartida, prmEstacion, prmUsuario, prmTipoRegistro, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaEmpaqueSugeridoAsync(ByVal prmPedido As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal prmTipoRegistro As Integer, ByVal userState As Object)
            If (Me.WM_ConsultaEmpaqueSugeridoOperationCompleted Is Nothing) Then
                Me.WM_ConsultaEmpaqueSugeridoOperationCompleted = AddressOf Me.OnWM_ConsultaEmpaqueSugeridoOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaEmpaqueSugerido", New Object() {prmPedido, prmPartida, prmEstacion, prmUsuario, prmTipoRegistro}, Me.WM_ConsultaEmpaqueSugeridoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaEmpaqueSugeridoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaEmpaqueSugeridoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaEmpaqueSugeridoCompleted(Me, New WM_ConsultaEmpaqueSugeridoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaEmpaqueSugerido_NE", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaEmpaqueSugerido_NE(ByVal prmPedido As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal prmTipoRegistro As Integer) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaEmpaqueSugerido_NE", New Object() {prmPedido, prmPartida, prmEstacion, prmUsuario, prmTipoRegistro})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaEmpaqueSugerido_NEAsync(ByVal prmPedido As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal prmTipoRegistro As Integer)
            Me.WM_ConsultaEmpaqueSugerido_NEAsync(prmPedido, prmPartida, prmEstacion, prmUsuario, prmTipoRegistro, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaEmpaqueSugerido_NEAsync(ByVal prmPedido As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal prmTipoRegistro As Integer, ByVal userState As Object)
            If (Me.WM_ConsultaEmpaqueSugerido_NEOperationCompleted Is Nothing) Then
                Me.WM_ConsultaEmpaqueSugerido_NEOperationCompleted = AddressOf Me.OnWM_ConsultaEmpaqueSugerido_NEOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaEmpaqueSugerido_NE", New Object() {prmPedido, prmPartida, prmEstacion, prmUsuario, prmTipoRegistro}, Me.WM_ConsultaEmpaqueSugerido_NEOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaEmpaqueSugerido_NEOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaEmpaqueSugerido_NECompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaEmpaqueSugerido_NECompleted(Me, New WM_ConsultaEmpaqueSugerido_NECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaContenedorSugerido", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaContenedorSugerido(ByVal prmPedido As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaContenedorSugerido", New Object() {prmPedido, prmPartida, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaContenedorSugeridoAsync(ByVal prmPedido As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaContenedorSugeridoAsync(prmPedido, prmPartida, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaContenedorSugeridoAsync(ByVal prmPedido As String, ByVal prmPartida As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaContenedorSugeridoOperationCompleted Is Nothing) Then
                Me.WM_ConsultaContenedorSugeridoOperationCompleted = AddressOf Me.OnWM_ConsultaContenedorSugeridoOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaContenedorSugerido", New Object() {prmPedido, prmPartida, prmEstacion, prmUsuario}, Me.WM_ConsultaContenedorSugeridoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaContenedorSugeridoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaContenedorSugeridoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaContenedorSugeridoCompleted(Me, New WM_ConsultaContenedorSugeridoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_ConsultaEmpaqueEntregaSurtido", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_ConsultaEmpaqueEntregaSurtido(ByVal prmCodigoEmpaque As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_ConsultaEmpaqueEntregaSurtido", New Object() {prmCodigoEmpaque, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaEmpaqueEntregaSurtidoAsync(ByVal prmCodigoEmpaque As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_ConsultaEmpaqueEntregaSurtidoAsync(prmCodigoEmpaque, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_ConsultaEmpaqueEntregaSurtidoAsync(ByVal prmCodigoEmpaque As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_ConsultaEmpaqueEntregaSurtidoOperationCompleted Is Nothing) Then
                Me.WM_ConsultaEmpaqueEntregaSurtidoOperationCompleted = AddressOf Me.OnWM_ConsultaEmpaqueEntregaSurtidoOperationCompleted
            End If
            Me.InvokeAsync("WM_ConsultaEmpaqueEntregaSurtido", New Object() {prmCodigoEmpaque, prmEstacion, prmUsuario}, Me.WM_ConsultaEmpaqueEntregaSurtidoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_ConsultaEmpaqueEntregaSurtidoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_ConsultaEmpaqueEntregaSurtidoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_ConsultaEmpaqueEntregaSurtidoCompleted(Me, New WM_ConsultaEmpaqueEntregaSurtidoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_EntregaSurtidoLinea", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_EntregaSurtidoLinea(ByVal prmPallet As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_EntregaSurtidoLinea", New Object() {prmPallet, prmUbicacion, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_EntregaSurtidoLineaAsync(ByVal prmPallet As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_EntregaSurtidoLineaAsync(prmPallet, prmUbicacion, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_EntregaSurtidoLineaAsync(ByVal prmPallet As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_EntregaSurtidoLineaOperationCompleted Is Nothing) Then
                Me.WM_EntregaSurtidoLineaOperationCompleted = AddressOf Me.OnWM_EntregaSurtidoLineaOperationCompleted
            End If
            Me.InvokeAsync("WM_EntregaSurtidoLinea", New Object() {prmPallet, prmUbicacion, prmEstacion, prmUsuario}, Me.WM_EntregaSurtidoLineaOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_EntregaSurtidoLineaOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_EntregaSurtidoLineaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_EntregaSurtidoLineaCompleted(Me, New WM_EntregaSurtidoLineaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_AlmacenaEmbarque", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_AlmacenaEmbarque(ByVal prmPallet As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_AlmacenaEmbarque", New Object() {prmPallet, prmUbicacion, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_AlmacenaEmbarqueAsync(ByVal prmPallet As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_AlmacenaEmbarqueAsync(prmPallet, prmUbicacion, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_AlmacenaEmbarqueAsync(ByVal prmPallet As String, ByVal prmUbicacion As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_AlmacenaEmbarqueOperationCompleted Is Nothing) Then
                Me.WM_AlmacenaEmbarqueOperationCompleted = AddressOf Me.OnWM_AlmacenaEmbarqueOperationCompleted
            End If
            Me.InvokeAsync("WM_AlmacenaEmbarque", New Object() {prmPallet, prmUbicacion, prmEstacion, prmUsuario}, Me.WM_AlmacenaEmbarqueOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_AlmacenaEmbarqueOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_AlmacenaEmbarqueCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_AlmacenaEmbarqueCompleted(Me, New WM_AlmacenaEmbarqueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WM_RegistroEmpaqueSurtidoOS", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WM_RegistroEmpaqueSurtidoOS(ByVal prmOrdenSurtido As String, ByVal prmPartida As String, ByVal prmEmpaque As String, ByVal prmEstacion As String, ByVal prmUsuario As String) As CResultado
            Dim results() As Object = Me.Invoke("WM_RegistroEmpaqueSurtidoOS", New Object() {prmOrdenSurtido, prmPartida, prmEmpaque, prmEstacion, prmUsuario})
            Return CType(results(0),CResultado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WM_RegistroEmpaqueSurtidoOSAsync(ByVal prmOrdenSurtido As String, ByVal prmPartida As String, ByVal prmEmpaque As String, ByVal prmEstacion As String, ByVal prmUsuario As String)
            Me.WM_RegistroEmpaqueSurtidoOSAsync(prmOrdenSurtido, prmPartida, prmEmpaque, prmEstacion, prmUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WM_RegistroEmpaqueSurtidoOSAsync(ByVal prmOrdenSurtido As String, ByVal prmPartida As String, ByVal prmEmpaque As String, ByVal prmEstacion As String, ByVal prmUsuario As String, ByVal userState As Object)
            If (Me.WM_RegistroEmpaqueSurtidoOSOperationCompleted Is Nothing) Then
                Me.WM_RegistroEmpaqueSurtidoOSOperationCompleted = AddressOf Me.OnWM_RegistroEmpaqueSurtidoOSOperationCompleted
            End If
            Me.InvokeAsync("WM_RegistroEmpaqueSurtidoOS", New Object() {prmOrdenSurtido, prmPartida, prmEmpaque, prmEstacion, prmUsuario}, Me.WM_RegistroEmpaqueSurtidoOSOperationCompleted, userState)
        End Sub
        
        Private Sub OnWM_RegistroEmpaqueSurtidoOSOperationCompleted(ByVal arg As Object)
            If (Not (Me.WM_RegistroEmpaqueSurtidoOSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WM_RegistroEmpaqueSurtidoOSCompleted(Me, New WM_RegistroEmpaqueSurtidoOSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class CResultado
        
        Private estadoField As Boolean
        
        Private textoField As String
        
        Private resultadoField As Object
        
        Private tablaField As System.Data.DataTable
        
        Private objetoField As Object
        
        '''<remarks/>
        Public Property Estado() As Boolean
            Get
                Return Me.estadoField
            End Get
            Set
                Me.estadoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Texto() As String
            Get
                Return Me.textoField
            End Get
            Set
                Me.textoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Resultado() As Object
            Get
                Return Me.resultadoField
            End Get
            Set
                Me.resultadoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Tabla() As System.Data.DataTable
            Get
                Return Me.tablaField
            End Get
            Set
                Me.tablaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Objeto() As Object
            Get
                Return Me.objetoField
            End Get
            Set
                Me.objetoField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class COrdenesCompra
        
        Private estadoField As Integer
        
        Private textoField As Integer
        
        Private idOrdenCompraField As String
        
        '''<remarks/>
        Public Property Estado() As Integer
            Get
                Return Me.estadoField
            End Get
            Set
                Me.estadoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Texto() As Integer
            Get
                Return Me.textoField
            End Get
            Set
                Me.textoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IdOrdenCompra() As String
            Get
                Return Me.idOrdenCompraField
            End Get
            Set
                Me.idOrdenCompraField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class CEmpaque
        
        Private estadoField As Boolean
        
        Private textoField As String
        
        Private idEmbalajeField As String
        
        Private revisionField As String
        
        Private cantidadField As String
        
        Private numParteField As String
        
        Private fechaField As String
        
        Private embalajeField As String
        
        Private estatusPalletField As String
        
        Private loteProvField As String
        
        '''<remarks/>
        Public Property Estado() As Boolean
            Get
                Return Me.estadoField
            End Get
            Set
                Me.estadoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Texto() As String
            Get
                Return Me.textoField
            End Get
            Set
                Me.textoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IdEmbalaje() As String
            Get
                Return Me.idEmbalajeField
            End Get
            Set
                Me.idEmbalajeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Revision() As String
            Get
                Return Me.revisionField
            End Get
            Set
                Me.revisionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Cantidad() As String
            Get
                Return Me.cantidadField
            End Get
            Set
                Me.cantidadField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NumParte() As String
            Get
                Return Me.numParteField
            End Get
            Set
                Me.numParteField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Fecha() As String
            Get
                Return Me.fechaField
            End Get
            Set
                Me.fechaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Embalaje() As String
            Get
                Return Me.embalajeField
            End Get
            Set
                Me.embalajeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EstatusPallet() As String
            Get
                Return Me.estatusPalletField
            End Get
            Set
                Me.estatusPalletField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LoteProv() As String
            Get
                Return Me.loteProvField
            End Get
            Set
                Me.loteProvField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_BajaEmpaqueArmadoTarimasCompletedEventHandler(ByVal sender As Object, ByVal e As WM_BajaEmpaqueArmadoTarimasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_BajaEmpaqueArmadoTarimasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_CerrarRegistroPalletCompletedEventHandler(ByVal sender As Object, ByVal e As WM_CerrarRegistroPalletCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_CerrarRegistroPalletCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_CancelarRegistroPalletCompletedEventHandler(ByVal sender As Object, ByVal e As WM_CancelarRegistroPalletCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_CancelarRegistroPalletCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaOrdenesReabastecimientoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaOrdenesReabastecimientoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaOrdenesReabastecimientoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaOrdenesReabastecimientoDetCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaOrdenesReabastecimientoDetCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaOrdenesReabastecimientoDetCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaUbicacionPKCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaUbicacionPKCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaUbicacionPKCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ReabastecePalletCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ReabastecePalletCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ReabastecePalletCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ReabasteceEmpaqueCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ReabasteceEmpaqueCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ReabasteceEmpaqueCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ReabastecePiezasCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ReabastecePiezasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ReabastecePiezasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ReabastecePalletSOCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ReabastecePalletSOCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ReabastecePalletSOCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ReabasteceEmpaqueSOCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ReabasteceEmpaqueSOCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ReabasteceEmpaqueSOCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ReabastecePiezasSOCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ReabastecePiezasSOCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ReabastecePiezasSOCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaContenedorCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaContenedorCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaContenedorCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaEmpaqueOSKUCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaEmpaqueOSKUCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaEmpaqueOSKUCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaContenedorAjustesCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaContenedorAjustesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaContenedorAjustesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_SugierePosicionContenedorCompletedEventHandler(ByVal sender As Object, ByVal e As WM_SugierePosicionContenedorCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_SugierePosicionContenedorCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_OCContenedorSKUCompletedEventHandler(ByVal sender As Object, ByVal e As WM_OCContenedorSKUCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_OCContenedorSKUCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaPosicionPisoPalletOCCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaPosicionPisoPalletOCCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaPosicionPisoPalletOCCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_OCContenedorCompletedEventHandler(ByVal sender As Object, ByVal e As WM_OCContenedorCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_OCContenedorCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ReubicarContenedorCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ReubicarContenedorCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ReubicarContenedorCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ReubicarEmpaqueCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ReubicarEmpaqueCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ReubicarEmpaqueCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ImprimeSKUCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ImprimeSKUCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ImprimeSKUCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ImpContenedorCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ImpContenedorCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ImpContenedorCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ReimprimeContenedorCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ReimprimeContenedorCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ReimprimeContenedorCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_GuardaFotoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_GuardaFotoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_GuardaFotoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_EliminaImagenCompletedEventHandler(ByVal sender As Object, ByVal e As WM_EliminaImagenCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_EliminaImagenCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaImagenNumParteCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaImagenNumParteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaImagenNumParteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ListaArticulosCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ListaArticulosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ListaArticulosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_FotoNumParteCompletedEventHandler(ByVal sender As Object, ByVal e As WM_FotoNumParteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_FotoNumParteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaEmpaquesPorPalletInventario_NECompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaEmpaquesPorPalletInventario_NECompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaEmpaquesPorPalletInventario_NECompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaEmpaqueInventarioCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaEmpaqueInventarioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaEmpaqueInventarioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_RegistraPalletInvSinCambioCompletedEventHandler(ByVal sender As Object, ByVal e As WM_RegistraPalletInvSinCambioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_RegistraPalletInvSinCambioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_BajaPalletInventarioCompletedEventHandler(ByVal sender As Object, ByVal e As WM_BajaPalletInventarioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_BajaPalletInventarioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_BajaEmpaqueInventarioCompletedEventHandler(ByVal sender As Object, ByVal e As WM_BajaEmpaqueInventarioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_BajaEmpaqueInventarioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_EditaRegistroContenedorInventarioCompletedEventHandler(ByVal sender As Object, ByVal e As WM_EditaRegistroContenedorInventarioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_EditaRegistroContenedorInventarioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_BajaEmpaquesInventario_NECompletedEventHandler(ByVal sender As Object, ByVal e As WM_BajaEmpaquesInventario_NECompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_BajaEmpaquesInventario_NECompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_EditaRegistroPalletInventarioCompletedEventHandler(ByVal sender As Object, ByVal e As WM_EditaRegistroPalletInventarioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_EditaRegistroPalletInventarioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_RegistraEmpaqueNuevoPalletInventario_OLDCompletedEventHandler(ByVal sender As Object, ByVal e As WM_RegistraEmpaqueNuevoPalletInventario_OLDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_RegistraEmpaqueNuevoPalletInventario_OLDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_RegistraEmpaqueNuevoPalletInventarioCompletedEventHandler(ByVal sender As Object, ByVal e As WM_RegistraEmpaqueNuevoPalletInventarioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_RegistraEmpaqueNuevoPalletInventarioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_RegistraEmpaqueNuevoPalletInventario_NECompletedEventHandler(ByVal sender As Object, ByVal e As WM_RegistraEmpaqueNuevoPalletInventario_NECompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_RegistraEmpaqueNuevoPalletInventario_NECompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_CierraPalletInventarioCompletedEventHandler(ByVal sender As Object, ByVal e As WM_CierraPalletInventarioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_CierraPalletInventarioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultarPalletAbiertoInvCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultarPalletAbiertoInvCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultarPalletAbiertoInvCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultarPalletAbiertoInv_NECompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultarPalletAbiertoInv_NECompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultarPalletAbiertoInv_NECompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_RegistraEmpaqueInventarioPKCompletedEventHandler(ByVal sender As Object, ByVal e As WM_RegistraEmpaqueInventarioPKCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_RegistraEmpaqueInventarioPKCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_RegistraEmpaqueInventarioCompletedEventHandler(ByVal sender As Object, ByVal e As WM_RegistraEmpaqueInventarioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_RegistraEmpaqueInventarioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_RegistraEmpaqueInventario_NECompletedEventHandler(ByVal sender As Object, ByVal e As WM_RegistraEmpaqueInventario_NECompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_RegistraEmpaqueInventario_NECompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_RegistraNuevoEmpaquePalletInventarioCompletedEventHandler(ByVal sender As Object, ByVal e As WM_RegistraNuevoEmpaquePalletInventarioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_RegistraNuevoEmpaquePalletInventarioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_RegistraNuevoEmpaquePalletInventarioPickingCompletedEventHandler(ByVal sender As Object, ByVal e As WM_RegistraNuevoEmpaquePalletInventarioPickingCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_RegistraNuevoEmpaquePalletInventarioPickingCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_RegistraNuevoEmpaquePalletInventarioConLoteCompletedEventHandler(ByVal sender As Object, ByVal e As WM_RegistraNuevoEmpaquePalletInventarioConLoteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_RegistraNuevoEmpaquePalletInventarioConLoteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_EditaRegistroEmpaqueInventarioPKCompletedEventHandler(ByVal sender As Object, ByVal e As WM_EditaRegistroEmpaqueInventarioPKCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_EditaRegistroEmpaqueInventarioPKCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_EditaRegistroEmpaqueInventarioCompletedEventHandler(ByVal sender As Object, ByVal e As WM_EditaRegistroEmpaqueInventarioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_EditaRegistroEmpaqueInventarioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_EditaRegistroEmpaqueInventarioConLoteCompletedEventHandler(ByVal sender As Object, ByVal e As WM_EditaRegistroEmpaqueInventarioConLoteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_EditaRegistroEmpaqueInventarioConLoteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_InventarioSugiereArticuloCompletedEventHandler(ByVal sender As Object, ByVal e As WM_InventarioSugiereArticuloCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_InventarioSugiereArticuloCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_InventarioSugierePosicionCompletedEventHandler(ByVal sender As Object, ByVal e As WM_InventarioSugierePosicionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_InventarioSugierePosicionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_EscanearEmpaqueInvCompletedEventHandler(ByVal sender As Object, ByVal e As WM_EscanearEmpaqueInvCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_EscanearEmpaqueInvCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_BajaEmpaqueInvCompletedEventHandler(ByVal sender As Object, ByVal e As WM_BajaEmpaqueInvCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_BajaEmpaqueInvCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_EditarEmpaqueInvCompletedEventHandler(ByVal sender As Object, ByVal e As WM_EditarEmpaqueInvCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_EditarEmpaqueInvCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaInventariosNumParteAbiertosCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaInventariosNumParteAbiertosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaInventariosNumParteAbiertosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_AjusteBajaEmpaqueCompletedEventHandler(ByVal sender As Object, ByVal e As WM_AjusteBajaEmpaqueCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_AjusteBajaEmpaqueCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_AjusteContenedorPositivoNumParteCompletedEventHandler(ByVal sender As Object, ByVal e As WM_AjusteContenedorPositivoNumParteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_AjusteContenedorPositivoNumParteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_AjusteContenedorPositivoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_AjusteContenedorPositivoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_AjusteContenedorPositivoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_AjusteContenedorPositivoSKUCompletedEventHandler(ByVal sender As Object, ByVal e As WM_AjusteContenedorPositivoSKUCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_AjusteContenedorPositivoSKUCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_AjusteContenedorNegativoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_AjusteContenedorNegativoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_AjusteContenedorNegativoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_AjusteBajaEmpaque_SelProd_NECompletedEventHandler(ByVal sender As Object, ByVal e As WM_AjusteBajaEmpaque_SelProd_NECompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_AjusteBajaEmpaque_SelProd_NECompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaPalletBajaEmpaquesCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaPalletBajaEmpaquesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaPalletBajaEmpaquesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_AjusteBajaPalletCompletedEventHandler(ByVal sender As Object, ByVal e As WM_AjusteBajaPalletCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_AjusteBajaPalletCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_AjusteNuevoEmpaquePalletExistenteCompletedEventHandler(ByVal sender As Object, ByVal e As WM_AjusteNuevoEmpaquePalletExistenteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_AjusteNuevoEmpaquePalletExistenteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_AjusteNuevoEmpaquePalletExistentePedimentoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_AjusteNuevoEmpaquePalletExistentePedimentoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_AjusteNuevoEmpaquePalletExistentePedimentoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_AjusteNuevoEmpaquePalletExistente_NECompletedEventHandler(ByVal sender As Object, ByVal e As WM_AjusteNuevoEmpaquePalletExistente_NECompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_AjusteNuevoEmpaquePalletExistente_NECompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_AjusteCierraNuevoPalletCompletedEventHandler(ByVal sender As Object, ByVal e As WM_AjusteCierraNuevoPalletCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_AjusteCierraNuevoPalletCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ListarAjustesCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ListarAjustesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ListarAjustesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ListarConceptosAjusteCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ListarConceptosAjusteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ListarConceptosAjusteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_AjusteConsultarPalletAbiertoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_AjusteConsultarPalletAbiertoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_AjusteConsultarPalletAbiertoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_AjusteNuevoEmpaqueNuevoPalletCompletedEventHandler(ByVal sender As Object, ByVal e As WM_AjusteNuevoEmpaqueNuevoPalletCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_AjusteNuevoEmpaqueNuevoPalletCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_RegistraEmpaqueNvoPalletCompletedEventHandler(ByVal sender As Object, ByVal e As WM_RegistraEmpaqueNvoPalletCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_RegistraEmpaqueNvoPalletCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_RegistraEmpaqueNvoPalletv2CompletedEventHandler(ByVal sender As Object, ByVal e As WM_RegistraEmpaqueNvoPalletv2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_RegistraEmpaqueNvoPalletv2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_RegistraEmpaqueNvoPallet_NECompletedEventHandler(ByVal sender As Object, ByVal e As WM_RegistraEmpaqueNvoPallet_NECompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_RegistraEmpaqueNvoPallet_NECompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_CierraPalletAjusteCompletedEventHandler(ByVal sender As Object, ByVal e As WM_CierraPalletAjusteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_CierraPalletAjusteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_RegistraAjusteNvoPalletCompletedEventHandler(ByVal sender As Object, ByVal e As WM_RegistraAjusteNvoPalletCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_RegistraAjusteNvoPalletCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_AjusteNuevoEmpaque_NECompletedEventHandler(ByVal sender As Object, ByVal e As WM_AjusteNuevoEmpaque_NECompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_AjusteNuevoEmpaque_NECompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_CuarentenaPalletCompletedEventHandler(ByVal sender As Object, ByVal e As WM_CuarentenaPalletCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_CuarentenaPalletCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_CuarentenaEmpaqueCompletedEventHandler(ByVal sender As Object, ByVal e As WM_CuarentenaEmpaqueCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_CuarentenaEmpaqueCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ImprimeEtiquetaEmpaqueCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ImprimeEtiquetaEmpaqueCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ImprimeEtiquetaEmpaqueCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ImpEtiquetaEmpaqueCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ImpEtiquetaEmpaqueCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ImpEtiquetaEmpaqueCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaPalletAColocarCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaPalletAColocarCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaPalletAColocarCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_CuarentenaRecuperaPalletCompletoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_CuarentenaRecuperaPalletCompletoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_CuarentenaRecuperaPalletCompletoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaPalletAConsolidarCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaPalletAConsolidarCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaPalletAConsolidarCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaPalletConsCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaPalletConsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaPalletConsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_CreaPalletConsCompletedEventHandler(ByVal sender As Object, ByVal e As WM_CreaPalletConsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_CreaPalletConsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaEmpaquesCarritoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaEmpaquesCarritoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaEmpaquesCarritoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaPedidoSurtidoReempaqueCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaPedidoSurtidoReempaqueCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaPedidoSurtidoReempaqueCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_CreaPalletReempaqueCompletedEventHandler(ByVal sender As Object, ByVal e As WM_CreaPalletReempaqueCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_CreaPalletReempaqueCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_CerrarReempaqueCompletedEventHandler(ByVal sender As Object, ByVal e As WM_CerrarReempaqueCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_CerrarReempaqueCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_CancelaReempaqueCompletedEventHandler(ByVal sender As Object, ByVal e As WM_CancelaReempaqueCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_CancelaReempaqueCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_OSConsultaPalletConsAbiertoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_OSConsultaPalletConsAbiertoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_OSConsultaPalletConsAbiertoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_RegistraEmpaqueConsCompletedEventHandler(ByVal sender As Object, ByVal e As WM_RegistraEmpaqueConsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_RegistraEmpaqueConsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_RegistraConsolidacion_NECompletedEventHandler(ByVal sender As Object, ByVal e As WM_RegistraConsolidacion_NECompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_RegistraConsolidacion_NECompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_RegistraEmpaqueCons_NE_oldCompletedEventHandler(ByVal sender As Object, ByVal e As WM_RegistraEmpaqueCons_NE_oldCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_RegistraEmpaqueCons_NE_oldCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_CancelaConsolidacionCompletedEventHandler(ByVal sender As Object, ByVal e As WM_CancelaConsolidacionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_CancelaConsolidacionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_CerrarConsolidacionCompletedEventHandler(ByVal sender As Object, ByVal e As WM_CerrarConsolidacionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_CerrarConsolidacionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaPalletReempaqueCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaPalletReempaqueCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaPalletReempaqueCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_RegistraReempaque_NECompletedEventHandler(ByVal sender As Object, ByVal e As WM_RegistraReempaque_NECompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_RegistraReempaque_NECompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_RegistraReempaqueCompletedEventHandler(ByVal sender As Object, ByVal e As WM_RegistraReempaqueCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_RegistraReempaqueCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_RegistraReempaquePiezasCompletedEventHandler(ByVal sender As Object, ByVal e As WM_RegistraReempaquePiezasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_RegistraReempaquePiezasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_RegistraReempaqueSKUCompletedEventHandler(ByVal sender As Object, ByVal e As WM_RegistraReempaqueSKUCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_RegistraReempaqueSKUCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaOrdenSurtidoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaOrdenSurtidoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaOrdenSurtidoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaOrdenSurtido_ReempaqueCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaOrdenSurtido_ReempaqueCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaOrdenSurtido_ReempaqueCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaListaConsolidadosReempaqueCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaListaConsolidadosReempaqueCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaListaConsolidadosReempaqueCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ListaEmbarqueValidadasDetCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ListaEmbarqueValidadasDetCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ListaEmbarqueValidadasDetCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_CancelaEmbarqueValidadoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_CancelaEmbarqueValidadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_CancelaEmbarqueValidadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ListarPartidasRecepcionTraspasoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ListarPartidasRecepcionTraspasoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ListarPartidasRecepcionTraspasoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_DetallePartidaTraspasoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_DetallePartidaTraspasoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_DetallePartidaTraspasoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_PrimeraUltimaTraspasoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_PrimeraUltimaTraspasoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_PrimeraUltimaTraspasoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_CierreParcialEnvioTraspasoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_CierreParcialEnvioTraspasoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_CierreParcialEnvioTraspasoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_CierreParcialTraspasoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_CierreParcialTraspasoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_CierreParcialTraspasoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_RegistraEmpaqueTraspasoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_RegistraEmpaqueTraspasoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_RegistraEmpaqueTraspasoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_CreaEmpaqueTraspasoNECompletedEventHandler(ByVal sender As Object, ByVal e As WM_CreaEmpaqueTraspasoNECompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_CreaEmpaqueTraspasoNECompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_OCCierraPalletTraspasoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_OCCierraPalletTraspasoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_OCCierraPalletTraspasoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaPalletAbiertoTraspasoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaPalletAbiertoTraspasoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaPalletAbiertoTraspasoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultarPalletTraspaso_NECompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultarPalletTraspaso_NECompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultarPalletTraspaso_NECompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaPalletTraspasoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaPalletTraspasoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaPalletTraspasoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_RegistroTraspasoPalletEnvioCompletedEventHandler(ByVal sender As Object, ByVal e As WM_RegistroTraspasoPalletEnvioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_RegistroTraspasoPalletEnvioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_RegistroTraspasoEmpaqueEnvioCompletedEventHandler(ByVal sender As Object, ByVal e As WM_RegistroTraspasoEmpaqueEnvioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_RegistroTraspasoEmpaqueEnvioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_RegistroTraspasoEmpaqueEnvio_NECompletedEventHandler(ByVal sender As Object, ByVal e As WM_RegistroTraspasoEmpaqueEnvio_NECompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_RegistroTraspasoEmpaqueEnvio_NECompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_RegistroPalletTraspasoMultPartCompletedEventHandler(ByVal sender As Object, ByVal e As WM_RegistroPalletTraspasoMultPartCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_RegistroPalletTraspasoMultPartCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_CierrePalletTraspasoEnvioCompletedEventHandler(ByVal sender As Object, ByVal e As WM_CierrePalletTraspasoEnvioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_CierrePalletTraspasoEnvioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_RegistroTraspasoPalletConEtiquetasCompletedEventHandler(ByVal sender As Object, ByVal e As WM_RegistroTraspasoPalletConEtiquetasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_RegistroTraspasoPalletConEtiquetasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_RegistroTraspasoNuevoPalletCompletedEventHandler(ByVal sender As Object, ByVal e As WM_RegistroTraspasoNuevoPalletCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_RegistroTraspasoNuevoPalletCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ListarTarimasRecibidasTraspasoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ListarTarimasRecibidasTraspasoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ListarTarimasRecibidasTraspasoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_CancelarPalletTraspasoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_CancelarPalletTraspasoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_CancelarPalletTraspasoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_PrimeraUltimaTraspasoSelAlmCompletedEventHandler(ByVal sender As Object, ByVal e As WM_PrimeraUltimaTraspasoSelAlmCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_PrimeraUltimaTraspasoSelAlmCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_RegistraEmpaqueTraspasoSelAlmCompletedEventHandler(ByVal sender As Object, ByVal e As WM_RegistraEmpaqueTraspasoSelAlmCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_RegistraEmpaqueTraspasoSelAlmCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_CreaEmpaqueTraspasoNESelAlmCompletedEventHandler(ByVal sender As Object, ByVal e As WM_CreaEmpaqueTraspasoNESelAlmCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_CreaEmpaqueTraspasoNESelAlmCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_PrimeraUltimaTraspasoSelAlm_SACompletedEventHandler(ByVal sender As Object, ByVal e As WM_PrimeraUltimaTraspasoSelAlm_SACompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_PrimeraUltimaTraspasoSelAlm_SACompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_RegistraEmpaqueTraspasoSelAlm_SACompletedEventHandler(ByVal sender As Object, ByVal e As WM_RegistraEmpaqueTraspasoSelAlm_SACompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_RegistraEmpaqueTraspasoSelAlm_SACompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_CreaEmpaqueTraspasoNESelAlm_SACompletedEventHandler(ByVal sender As Object, ByVal e As WM_CreaEmpaqueTraspasoNESelAlm_SACompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_CreaEmpaqueTraspasoNESelAlm_SACompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaTextosTraspasoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaTextosTraspasoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaTextosTraspasoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_RegistroTextosTraspasoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_RegistroTextosTraspasoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_RegistroTextosTraspasoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ListarPartidasEnvioMaquilaCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ListarPartidasEnvioMaquilaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ListarPartidasEnvioMaquilaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultarPartidaEnvioMaquilaCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultarPartidaEnvioMaquilaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultarPartidaEnvioMaquilaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_EnviaEmpaqueMaquilaCompletedEventHandler(ByVal sender As Object, ByVal e As WM_EnviaEmpaqueMaquilaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_EnviaEmpaqueMaquilaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_EnviaPalletMaquilaCompletedEventHandler(ByVal sender As Object, ByVal e As WM_EnviaPalletMaquilaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_EnviaPalletMaquilaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_SugierePalletEnvioMaquilaCompletedEventHandler(ByVal sender As Object, ByVal e As WM_SugierePalletEnvioMaquilaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_SugierePalletEnvioMaquilaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaOrdenProduccionCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaOrdenProduccionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaOrdenProduccionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaOrdenProduccion_v2CompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaOrdenProduccion_v2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaOrdenProduccion_v2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_CerrarOrdenProduccionCompletedEventHandler(ByVal sender As Object, ByVal e As WM_CerrarOrdenProduccionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_CerrarOrdenProduccionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_CerrarOrdenProduccion_v2CompletedEventHandler(ByVal sender As Object, ByVal e As WM_CerrarOrdenProduccion_v2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_CerrarOrdenProduccion_v2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_RegistraCantidadOrdenProduccionCompletedEventHandler(ByVal sender As Object, ByVal e As WM_RegistraCantidadOrdenProduccionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_RegistraCantidadOrdenProduccionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_RegistraSobranteOrdenProduccionCompletedEventHandler(ByVal sender As Object, ByVal e As WM_RegistraSobranteOrdenProduccionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_RegistraSobranteOrdenProduccionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_RegistraFechaCadOrdenProdCompletedEventHandler(ByVal sender As Object, ByVal e As WM_RegistraFechaCadOrdenProdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_RegistraFechaCadOrdenProdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaOrdenProduccionDetCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaOrdenProduccionDetCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaOrdenProduccionDetCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaEmpaquesArmadoProdCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaEmpaquesArmadoProdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaEmpaquesArmadoProdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaEmpaquesArmadoProd_NECompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaEmpaquesArmadoProd_NECompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaEmpaquesArmadoProd_NECompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_RegistraEmpaqueEnPalletCompletedEventHandler(ByVal sender As Object, ByVal e As WM_RegistraEmpaqueEnPalletCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_RegistraEmpaqueEnPalletCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_RegistraEmpaqueEnPalletPrimeraYUltimaCompletedEventHandler(ByVal sender As Object, ByVal e As WM_RegistraEmpaqueEnPalletPrimeraYUltimaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_RegistraEmpaqueEnPalletPrimeraYUltimaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_CreaEmpaqueNECompletedEventHandler(ByVal sender As Object, ByVal e As WM_CreaEmpaqueNECompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_CreaEmpaqueNECompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaCarritoSurtidoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaCarritoSurtidoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaCarritoSurtidoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaPisoSugeridoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaPisoSugeridoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaPisoSugeridoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaPisoSurtidoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaPisoSurtidoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaPisoSurtidoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_RegistroPisoSurtidoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_RegistroPisoSurtidoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_RegistroPisoSurtidoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaEmbarqueValidarTotalesCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaEmbarqueValidarTotalesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaEmbarqueValidarTotalesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaEmbarqueValidarEmpaquesCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaEmbarqueValidarEmpaquesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaEmbarqueValidarEmpaquesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaEmbarqueValidarPalletsCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaEmbarqueValidarPalletsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaEmbarqueValidarPalletsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ValidaEmbEmpaqueCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ValidaEmbEmpaqueCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ValidaEmbEmpaqueCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ValidaEmbPalletCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ValidaEmbPalletCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ValidaEmbPalletCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_RegistrarEmbMaterialCompletedEventHandler(ByVal sender As Object, ByVal e As WM_RegistrarEmbMaterialCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_RegistrarEmbMaterialCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaPalletSugeridoTraspasoEnvioCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaPalletSugeridoTraspasoEnvioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaPalletSugeridoTraspasoEnvioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaPalletSugeridoTraspasoEnvio_NECompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaPalletSugeridoTraspasoEnvio_NECompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaPalletSugeridoTraspasoEnvio_NECompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaTarimaArmadoTraspasoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaTarimaArmadoTraspasoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaTarimaArmadoTraspasoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaTarimaArmadoTraspaso_NECompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaTarimaArmadoTraspaso_NECompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaTarimaArmadoTraspaso_NECompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaEmpaqueSugeridoTraspasoEnvioCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaEmpaqueSugeridoTraspasoEnvioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaEmpaqueSugeridoTraspasoEnvioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultarPisoTraspasoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultarPisoTraspasoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultarPisoTraspasoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_RegistroTraspasoPisoEnvioCompletedEventHandler(ByVal sender As Object, ByVal e As WM_RegistroTraspasoPisoEnvioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_RegistroTraspasoPisoEnvioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaPisoSugeridoTraspasoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaPisoSugeridoTraspasoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaPisoSugeridoTraspasoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaRechazoPalletTraspCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaRechazoPalletTraspCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaRechazoPalletTraspCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_RechazoPalletTraspCompletedEventHandler(ByVal sender As Object, ByVal e As WM_RechazoPalletTraspCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_RechazoPalletTraspCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_OSListarPartidasAValidarCompletedEventHandler(ByVal sender As Object, ByVal e As WM_OSListarPartidasAValidarCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_OSListarPartidasAValidarCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_OSConsultarPalletAValidarCompletedEventHandler(ByVal sender As Object, ByVal e As WM_OSConsultarPalletAValidarCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_OSConsultarPalletAValidarCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_OSRegistrarEmpaqueRechazadoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_OSRegistrarEmpaqueRechazadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_OSRegistrarEmpaqueRechazadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_OSRegistrarPalletLineaRechazadoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_OSRegistrarPalletLineaRechazadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_OSRegistrarPalletLineaRechazadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_OSRegistrarPalletAndenValidadoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_OSRegistrarPalletAndenValidadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_OSRegistrarPalletAndenValidadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_OSRegistrarEmpaqueAndenRechazadoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_OSRegistrarEmpaqueAndenRechazadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_OSRegistrarEmpaqueAndenRechazadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_OSRegistrarPalletAndenRechazadoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_OSRegistrarPalletAndenRechazadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_OSRegistrarPalletAndenRechazadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_OSListarPalletsAEntregarCompletedEventHandler(ByVal sender As Object, ByVal e As WM_OSListarPalletsAEntregarCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_OSListarPalletsAEntregarCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_OSRegistrarPalletEntregadoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_OSRegistrarPalletEntregadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_OSRegistrarPalletEntregadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_OSRegistraEntregaAndenCompletedEventHandler(ByVal sender As Object, ByVal e As WM_OSRegistraEntregaAndenCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_OSRegistraEntregaAndenCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_OSRegistraEmbarqueAndenCompletedEventHandler(ByVal sender As Object, ByVal e As WM_OSRegistraEmbarqueAndenCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_OSRegistraEmbarqueAndenCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_OSRegistraRecibePalletP2CompletedEventHandler(ByVal sender As Object, ByVal e As WM_OSRegistraRecibePalletP2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_OSRegistraRecibePalletP2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_KanbanListarPartidasOrdenesSurtidoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_KanbanListarPartidasOrdenesSurtidoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_KanbanListarPartidasOrdenesSurtidoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_KanbanConsultaPartidaOrdenesSurtidoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_KanbanConsultaPartidaOrdenesSurtidoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_KanbanConsultaPartidaOrdenesSurtidoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_KanbanConsultaPalletASurtirCompletedEventHandler(ByVal sender As Object, ByVal e As WM_KanbanConsultaPalletASurtirCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_KanbanConsultaPalletASurtirCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_KanbanConsultaEmpaqueASurtirCompletedEventHandler(ByVal sender As Object, ByVal e As WM_KanbanConsultaEmpaqueASurtirCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_KanbanConsultaEmpaqueASurtirCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_KanbanSugerirPalletCompletedEventHandler(ByVal sender As Object, ByVal e As WM_KanbanSugerirPalletCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_KanbanSugerirPalletCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_KanbanSugerirEmpaqueCompletedEventHandler(ByVal sender As Object, ByVal e As WM_KanbanSugerirEmpaqueCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_KanbanSugerirEmpaqueCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_KanbanSurtirPalletCompletedEventHandler(ByVal sender As Object, ByVal e As WM_KanbanSurtirPalletCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_KanbanSurtirPalletCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_KanbanSurtirEmpaqueCompletedEventHandler(ByVal sender As Object, ByVal e As WM_KanbanSurtirEmpaqueCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_KanbanSurtirEmpaqueCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_KanbanSurtirPiezasCompletedEventHandler(ByVal sender As Object, ByVal e As WM_KanbanSurtirPiezasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_KanbanSurtirPiezasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_KanbanConsultaPalletPKAbiertoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_KanbanConsultaPalletPKAbiertoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_KanbanConsultaPalletPKAbiertoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_KanbanCerrarPalletPKCompletedEventHandler(ByVal sender As Object, ByVal e As WM_KanbanCerrarPalletPKCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_KanbanCerrarPalletPKCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_KBListarPartidasAValidarCompletedEventHandler(ByVal sender As Object, ByVal e As WM_KBListarPartidasAValidarCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_KBListarPartidasAValidarCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_KBConsultarPalletAValidarCompletedEventHandler(ByVal sender As Object, ByVal e As WM_KBConsultarPalletAValidarCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_KBConsultarPalletAValidarCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_KBRegistrarPalletLineaValidadoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_KBRegistrarPalletLineaValidadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_KBRegistrarPalletLineaValidadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_KBRegistrarEmpaqueLineaRechazadoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_KBRegistrarEmpaqueLineaRechazadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_KBRegistrarEmpaqueLineaRechazadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_KBRegistrarPalletLineaRechazadoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_KBRegistrarPalletLineaRechazadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_KBRegistrarPalletLineaRechazadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_KBRegistrarPalletAndenValidadoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_KBRegistrarPalletAndenValidadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_KBRegistrarPalletAndenValidadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_KBRegistrarEmpaqueAndenRechazadoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_KBRegistrarEmpaqueAndenRechazadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_KBRegistrarEmpaqueAndenRechazadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_KBRegistrarPalletAndenRechazadoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_KBRegistrarPalletAndenRechazadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_KBRegistrarPalletAndenRechazadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_KBListarPalletsAEntregarCompletedEventHandler(ByVal sender As Object, ByVal e As WM_KBListarPalletsAEntregarCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_KBListarPalletsAEntregarCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_KBRegistrarPalletEntregadoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_KBRegistrarPalletEntregadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_KBRegistrarPalletEntregadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_KBRegistraRecibePalletP2CompletedEventHandler(ByVal sender As Object, ByVal e As WM_KBRegistraRecibePalletP2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_KBRegistraRecibePalletP2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_KBRegistraEntregaAndenCompletedEventHandler(ByVal sender As Object, ByVal e As WM_KBRegistraEntregaAndenCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_KBRegistraEntregaAndenCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_KBRegistraEmbarqueAndenCompletedEventHandler(ByVal sender As Object, ByVal e As WM_KBRegistraEmbarqueAndenCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_KBRegistraEmbarqueAndenCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ListarOrdenesRecepcionLiberadasCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ListarOrdenesRecepcionLiberadasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ListarOrdenesRecepcionLiberadasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ListarPartidasORLiberadasCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ListarPartidasORLiberadasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ListarPartidasORLiberadasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ListarOrdenesRecepcionRecibidasCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ListarOrdenesRecepcionRecibidasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ListarOrdenesRecepcionRecibidasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultarEmpaqueCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultarEmpaqueCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultarEmpaqueCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CEmpaque
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CEmpaque)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaEmpaqueCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaEmpaqueCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaEmpaqueCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaEmpaqueMPCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaEmpaqueMPCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaEmpaqueMPCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaEmpaqueReabasteceCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaEmpaqueReabasteceCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaEmpaqueReabasteceCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_BajaPiezasSACompletedEventHandler(ByVal sender As Object, ByVal e As WM_BajaPiezasSACompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_BajaPiezasSACompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_BajaEmpaqueSACompletedEventHandler(ByVal sender As Object, ByVal e As WM_BajaEmpaqueSACompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_BajaEmpaqueSACompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_BajaPalletSACompletedEventHandler(ByVal sender As Object, ByVal e As WM_BajaPalletSACompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_BajaPalletSACompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_RegistraEmpaqueSACompletedEventHandler(ByVal sender As Object, ByVal e As WM_RegistraEmpaqueSACompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_RegistraEmpaqueSACompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_RegistraEmpaqueKanbanSACompletedEventHandler(ByVal sender As Object, ByVal e As WM_RegistraEmpaqueKanbanSACompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_RegistraEmpaqueKanbanSACompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_CierraPalletSACompletedEventHandler(ByVal sender As Object, ByVal e As WM_CierraPalletSACompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_CierraPalletSACompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_CancelaPalletSACompletedEventHandler(ByVal sender As Object, ByVal e As WM_CancelaPalletSACompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_CancelaPalletSACompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultarPalletAbiertoSinAfectaCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultarPalletAbiertoSinAfectaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultarPalletAbiertoSinAfectaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaExisteNumParteCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaExisteNumParteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaExisteNumParteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaAlmacenCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaAlmacenCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaAlmacenCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ReimprimeEmpaquePTCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ReimprimeEmpaquePTCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ReimprimeEmpaquePTCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ImprimeEtiquetaEmpaquesPalletCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ImprimeEtiquetaEmpaquesPalletCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ImprimeEtiquetaEmpaquesPalletCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_OCImprimeEtiquetasCompletedEventHandler(ByVal sender As Object, ByVal e As WM_OCImprimeEtiquetasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_OCImprimeEtiquetasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ImprimeEtiquetasPalletCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ImprimeEtiquetasPalletCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ImprimeEtiquetasPalletCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ImprimeCredencialUsuarioCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ImprimeCredencialUsuarioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ImprimeCredencialUsuarioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ImprimeEtiquetaPosicionCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ImprimeEtiquetaPosicionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ImprimeEtiquetaPosicionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ImprimeEtiquetaLineaCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ImprimeEtiquetaLineaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ImprimeEtiquetaLineaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ReimprimeEtiquetaEmpaqueCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ReimprimeEtiquetaEmpaqueCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ReimprimeEtiquetaEmpaqueCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ImprimeEtiquetaKanbanCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ImprimeEtiquetaKanbanCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ImprimeEtiquetaKanbanCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ReimprimeRempaqueCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ReimprimeRempaqueCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ReimprimeRempaqueCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ReimprimePalletMPCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ReimprimePalletMPCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ReimprimePalletMPCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ImprimeEtiquetaInvCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ImprimeEtiquetaInvCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ImprimeEtiquetaInvCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaEmpaquesPallet_ImpresionCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaEmpaquesPallet_ImpresionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaEmpaquesPallet_ImpresionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_BuscarUbicacionCompletedEventHandler(ByVal sender As Object, ByVal e As WM_BuscarUbicacionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_BuscarUbicacionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaReferenciaCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaReferenciaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaReferenciaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_BuscaArticuloCICompletedEventHandler(ByVal sender As Object, ByVal e As WM_BuscaArticuloCICompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_BuscaArticuloCICompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaCoincidenciaArticuloCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaCoincidenciaArticuloCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaCoincidenciaArticuloCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaPalletArticuloCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaPalletArticuloCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaPalletArticuloCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ListaBloqueadosCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ListaBloqueadosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ListaBloqueadosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultarPalletPKCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultarPalletPKCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultarPalletPKCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_DevolucionDetCompletedEventHandler(ByVal sender As Object, ByVal e As WM_DevolucionDetCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_DevolucionDetCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ListarPartidasDevolucionCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ListarPartidasDevolucionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ListarPartidasDevolucionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_OCRegistrarEmpaqueDevolucionCompletedEventHandler(ByVal sender As Object, ByVal e As WM_OCRegistrarEmpaqueDevolucionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_OCRegistrarEmpaqueDevolucionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_PrimeraUltimaEmpaqueDevCompletedEventHandler(ByVal sender As Object, ByVal e As WM_PrimeraUltimaEmpaqueDevCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_PrimeraUltimaEmpaqueDevCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_OCRegistrarEmpaqueSEDevolucionCompletedEventHandler(ByVal sender As Object, ByVal e As WM_OCRegistrarEmpaqueSEDevolucionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_OCRegistrarEmpaqueSEDevolucionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_OCCierraPalletDevolucionCompletedEventHandler(ByVal sender As Object, ByVal e As WM_OCCierraPalletDevolucionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_OCCierraPalletDevolucionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultarPalletAbiertoDevCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultarPalletAbiertoDevCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultarPalletAbiertoDevCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ListarLotesDevCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ListarLotesDevCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ListarLotesDevCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_CreaLoteRecepcionDevCompletedEventHandler(ByVal sender As Object, ByVal e As WM_CreaLoteRecepcionDevCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_CreaLoteRecepcionDevCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_RegistroINIEmbalajeCompletedEventHandler(ByVal sender As Object, ByVal e As WM_RegistroINIEmbalajeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_RegistroINIEmbalajeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_RegistraINIEmpaqueCompletedEventHandler(ByVal sender As Object, ByVal e As WM_RegistraINIEmpaqueCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_RegistraINIEmpaqueCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_RegistroINIEtiquetaIndividualCompletedEventHandler(ByVal sender As Object, ByVal e As WM_RegistroINIEtiquetaIndividualCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_RegistroINIEtiquetaIndividualCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_BajaInventarioPalletCompletedEventHandler(ByVal sender As Object, ByVal e As WM_BajaInventarioPalletCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_BajaInventarioPalletCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_BajaInventarioEmpaqueCompletedEventHandler(ByVal sender As Object, ByVal e As WM_BajaInventarioEmpaqueCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_BajaInventarioEmpaqueCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_CierraEntregaParcialCompletedEventHandler(ByVal sender As Object, ByVal e As WM_CierraEntregaParcialCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_CierraEntregaParcialCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ListarTransfersLiberadosCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ListarTransfersLiberadosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ListarTransfersLiberadosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ListarPartidasInterorgSalidaLiberadoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ListarPartidasInterorgSalidaLiberadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ListarPartidasInterorgSalidaLiberadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_RegistraPalletInterorgSalidaCompletedEventHandler(ByVal sender As Object, ByVal e As WM_RegistraPalletInterorgSalidaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_RegistraPalletInterorgSalidaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_RegistraEmpaqueInterorgSalidaCompletedEventHandler(ByVal sender As Object, ByVal e As WM_RegistraEmpaqueInterorgSalidaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_RegistraEmpaqueInterorgSalidaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ListarTransfersARecibirCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ListarTransfersARecibirCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ListarTransfersARecibirCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ListarPartidasLiberadasCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ListarPartidasLiberadasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ListarPartidasLiberadasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_RecibePalletTransferCompletedEventHandler(ByVal sender As Object, ByVal e As WM_RecibePalletTransferCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_RecibePalletTransferCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaPalletsTransferCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaPalletsTransferCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaPalletsTransferCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaInvFisicoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaInvFisicoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaInvFisicoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaInvCiclicoNumParteCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaInvCiclicoNumParteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaInvCiclicoNumParteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaInvCiclicoPosicionCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaInvCiclicoPosicionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaInvCiclicoPosicionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaInvCiclicoPorLoteCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaInvCiclicoPorLoteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaInvCiclicoPorLoteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaInventarioNumParteCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaInventarioNumParteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaInventarioNumParteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaInventarioPosicionCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaInventarioPosicionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaInventarioPosicionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_INVConsultaUbicacionCompletedEventHandler(ByVal sender As Object, ByVal e As WM_INVConsultaUbicacionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_INVConsultaUbicacionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_EmpaquesPorPisoInventarioCompletedEventHandler(ByVal sender As Object, ByVal e As WM_EmpaquesPorPisoInventarioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_EmpaquesPorPisoInventarioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaPalletInventarioCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaPalletInventarioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaPalletInventarioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaEmpaquesPorPalletInventarioCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaEmpaquesPorPalletInventarioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaEmpaquesPorPalletInventarioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaEmpaquesPosicionPickingInvCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaEmpaquesPosicionPickingInvCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaEmpaquesPosicionPickingInvCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_DetallePedimentosCompletedEventHandler(ByVal sender As Object, ByVal e As WM_DetallePedimentosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_DetallePedimentosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub HelloWorldCompletedEventHandler(ByVal sender As Object, ByVal e As HelloWorldCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class HelloWorldCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ComprobacionBDCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ComprobacionBDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ComprobacionBDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ListaImpresorasCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ListaImpresorasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ListaImpresorasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ImprimePKCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ReImprimePKCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ReImprimePKCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ReImprimePKCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_CapturaEmpaqueCompletedEventHandler(ByVal sender As Object, ByVal e As WM_CapturaEmpaqueCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_CapturaEmpaqueCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ReImprimeSubensambleCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ReImprimeSubensambleCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ReImprimeSubensambleCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaLineaCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaLineaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaLineaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ListaMercadosCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ListaMercadosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ListaMercadosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_CambiaMercadoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_CambiaMercadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_CambiaMercadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ReimprimirEtiquetasMercadoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ReimprimirEtiquetasMercadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ReimprimirEtiquetasMercadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_LoginCompletedEventHandler(ByVal sender As Object, ByVal e As WM_LoginCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_LoginCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaAreasCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaAreasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaAreasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ActualizaAreaCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ActualizaAreaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ActualizaAreaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaVersionCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaVersionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaVersionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultarNotificacionesCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultarNotificacionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultarNotificacionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ImprimeCredencialesCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ImprimeCredencialesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ImprimeCredencialesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_OCRegistrarEmpaqueDaPCompletedEventHandler(ByVal sender As Object, ByVal e As WM_OCRegistrarEmpaqueDaPCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_OCRegistrarEmpaqueDaPCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_OrdenCompraLiberadaCompletedEventHandler(ByVal sender As Object, ByVal e As WM_OrdenCompraLiberadaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_OrdenCompraLiberadaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As COrdenesCompra
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),COrdenesCompra)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ListarPartidasOCLiberadasCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ListarPartidasOCLiberadasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ListarPartidasOCLiberadasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ListarPartidasOCEnProcesoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ListarPartidasOCEnProcesoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ListarPartidasOCEnProcesoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_DetalleReciboPartidaCompletedEventHandler(ByVal sender As Object, ByVal e As WM_DetalleReciboPartidaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_DetalleReciboPartidaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ListarOrdenesCompraLiberadasCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ListarOrdenesCompraLiberadasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ListarOrdenesCompraLiberadasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ListarLotesOCCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ListarLotesOCCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ListarLotesOCCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_OCRegistrarEmpaqueCompraCompletedEventHandler(ByVal sender As Object, ByVal e As WM_OCRegistrarEmpaqueCompraCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_OCRegistrarEmpaqueCompraCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_OCRegistrarPalletCompra_NECompletedEventHandler(ByVal sender As Object, ByVal e As WM_OCRegistrarPalletCompra_NECompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_OCRegistrarPalletCompra_NECompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_RegistrarRefaccionesSKUCompletedEventHandler(ByVal sender As Object, ByVal e As WM_RegistrarRefaccionesSKUCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_RegistrarRefaccionesSKUCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_RegistrarRefaccionesSKUPiezasCompletedEventHandler(ByVal sender As Object, ByVal e As WM_RegistrarRefaccionesSKUPiezasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_RegistrarRefaccionesSKUPiezasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_RegistrarPalletGranelCompletedEventHandler(ByVal sender As Object, ByVal e As WM_RegistrarPalletGranelCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_RegistrarPalletGranelCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_OCRegistrarEmpaqueCompra_MercadoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_OCRegistrarEmpaqueCompra_MercadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_OCRegistrarEmpaqueCompra_MercadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_RegistrarPalletGranel_MercadoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_RegistrarPalletGranel_MercadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_RegistrarPalletGranel_MercadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_OCRegistrarPalletCompra_NE_MercadoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_OCRegistrarPalletCompra_NE_MercadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_OCRegistrarPalletCompra_NE_MercadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_OCCreaPalletMPPrimeraUltima_MercadoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_OCCreaPalletMPPrimeraUltima_MercadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_OCCreaPalletMPPrimeraUltima_MercadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_OCRegistrarPalletCompra_NE_Mercado_SACompletedEventHandler(ByVal sender As Object, ByVal e As WM_OCRegistrarPalletCompra_NE_Mercado_SACompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_OCRegistrarPalletCompra_NE_Mercado_SACompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_OCRegistrarEmpaqueCompra_Mercado_SACompletedEventHandler(ByVal sender As Object, ByVal e As WM_OCRegistrarEmpaqueCompra_Mercado_SACompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_OCRegistrarEmpaqueCompra_Mercado_SACompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_RegistrarPalletGranel_Mercado_SACompletedEventHandler(ByVal sender As Object, ByVal e As WM_RegistrarPalletGranel_Mercado_SACompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_RegistrarPalletGranel_Mercado_SACompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_OCCreaPalletMPPrimeraUltima_Mercado_SACompletedEventHandler(ByVal sender As Object, ByVal e As WM_OCCreaPalletMPPrimeraUltima_Mercado_SACompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_OCCreaPalletMPPrimeraUltima_Mercado_SACompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_OCRegistrarEmpaqueCompraKanbanCompletedEventHandler(ByVal sender As Object, ByVal e As WM_OCRegistrarEmpaqueCompraKanbanCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_OCRegistrarEmpaqueCompraKanbanCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_OCCierraPalletMPCompraCompletedEventHandler(ByVal sender As Object, ByVal e As WM_OCCierraPalletMPCompraCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_OCCierraPalletMPCompraCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_OCCierraPalletCompraRefaccionesCompletedEventHandler(ByVal sender As Object, ByVal e As WM_OCCierraPalletCompraRefaccionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_OCCierraPalletCompraRefaccionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_CosultaEmpaquesOCCompletedEventHandler(ByVal sender As Object, ByVal e As WM_CosultaEmpaquesOCCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_CosultaEmpaquesOCCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_DelEmpaqueOrdenRecepcionCompletedEventHandler(ByVal sender As Object, ByVal e As WM_DelEmpaqueOrdenRecepcionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_DelEmpaqueOrdenRecepcionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_CreaLoteRecepcionOCCompletedEventHandler(ByVal sender As Object, ByVal e As WM_CreaLoteRecepcionOCCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_CreaLoteRecepcionOCCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_OCCreaPalletMPCompraUnicoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_OCCreaPalletMPCompraUnicoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_OCCreaPalletMPCompraUnicoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultarPalletAbiertoOCCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultarPalletAbiertoOCCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultarPalletAbiertoOCCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaPalletArmadoOCCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaPalletArmadoOCCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaPalletArmadoOCCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaPosicionPisoOCCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaPosicionPisoOCCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaPosicionPisoOCCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_OCCreaPalletMPPrimeraUltimaCompletedEventHandler(ByVal sender As Object, ByVal e As WM_OCCreaPalletMPPrimeraUltimaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_OCCreaPalletMPPrimeraUltimaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ListarOCLiberadasCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ListarOCLiberadasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ListarOCLiberadasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_CerrarRecepcionCompletedEventHandler(ByVal sender As Object, ByVal e As WM_CerrarRecepcionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_CerrarRecepcionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ListarOrdenesCompraQACompletedEventHandler(ByVal sender As Object, ByVal e As WM_ListarOrdenesCompraQACompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ListarOrdenesCompraQACompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ListarPartidasORQACompletedEventHandler(ByVal sender As Object, ByVal e As WM_ListarPartidasORQACompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ListarPartidasORQACompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaEmpaqueMuestreoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaEmpaqueMuestreoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaEmpaqueMuestreoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_QAAceptaEmpaqueCompletedEventHandler(ByVal sender As Object, ByVal e As WM_QAAceptaEmpaqueCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_QAAceptaEmpaqueCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_QARechazaEmpaqueCompletedEventHandler(ByVal sender As Object, ByVal e As WM_QARechazaEmpaqueCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_QARechazaEmpaqueCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_QARechazoTotalCompletedEventHandler(ByVal sender As Object, ByVal e As WM_QARechazoTotalCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_QARechazoTotalCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_QATerminarProcesoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_QATerminarProcesoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_QATerminarProcesoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_CierraPalletRechazadoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_CierraPalletRechazadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_CierraPalletRechazadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_MoverEmpaqueACuarentenaCompletedEventHandler(ByVal sender As Object, ByVal e As WM_MoverEmpaqueACuarentenaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_MoverEmpaqueACuarentenaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_MoverContenedorACuarentenaCompletedEventHandler(ByVal sender As Object, ByVal e As WM_MoverContenedorACuarentenaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_MoverContenedorACuarentenaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_MoverEmpaqueADisponibleCompletedEventHandler(ByVal sender As Object, ByVal e As WM_MoverEmpaqueADisponibleCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_MoverEmpaqueADisponibleCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_MoverContenedorADisponibleCompletedEventHandler(ByVal sender As Object, ByVal e As WM_MoverContenedorADisponibleCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_MoverContenedorADisponibleCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_CuarentenaRecuperaEmpaqueCompletedEventHandler(ByVal sender As Object, ByVal e As WM_CuarentenaRecuperaEmpaqueCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_CuarentenaRecuperaEmpaqueCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_CuarentenaBajaPalletCompletedEventHandler(ByVal sender As Object, ByVal e As WM_CuarentenaBajaPalletCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_CuarentenaBajaPalletCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_CuarentenaBajaEmpaqueCompletedEventHandler(ByVal sender As Object, ByVal e As WM_CuarentenaBajaEmpaqueCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_CuarentenaBajaEmpaqueCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultarPalletAbiertoCuarentenaCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultarPalletAbiertoCuarentenaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultarPalletAbiertoCuarentenaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_CierraPalletMPCuarentenaCompletedEventHandler(ByVal sender As Object, ByVal e As WM_CierraPalletMPCuarentenaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_CierraPalletMPCuarentenaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_CuarentenaMarcaPalletCompletedEventHandler(ByVal sender As Object, ByVal e As WM_CuarentenaMarcaPalletCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_CuarentenaMarcaPalletCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultarPalletPTCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultarPalletPTCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultarPalletPTCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultarPalletReabasteceCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultarPalletReabasteceCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultarPalletReabasteceCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaEmpaquesPallet_NECompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaEmpaquesPallet_NECompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaEmpaquesPallet_NECompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_SugierePosicionCompletedEventHandler(ByVal sender As Object, ByVal e As WM_SugierePosicionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_SugierePosicionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ColocaPalletCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ColocaPalletCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ColocaPalletCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ColocaPalletKanbanCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ColocaPalletKanbanCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ColocaPalletKanbanCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ReubicarEmbalajeCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ReubicarEmbalajeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ReubicarEmbalajeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ContenedorSugeridoReubicacionCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ContenedorSugeridoReubicacionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ContenedorSugeridoReubicacionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaEmpaqueMultipleSKUCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaEmpaqueMultipleSKUCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaEmpaqueMultipleSKUCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaPosicionCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaPosicionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaPosicionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ReubicarProductoPorCantidadesCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ReubicarProductoPorCantidadesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ReubicarProductoPorCantidadesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ReubicarProductoPorSKUCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ReubicarProductoPorSKUCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ReubicarProductoPorSKUCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ReubicarProductoPorSKUPiezasCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ReubicarProductoPorSKUPiezasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ReubicarProductoPorSKUPiezasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ReabastecePickingCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ReabastecePickingCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ReabastecePickingCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ReabastecePickingKanbanCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ReabastecePickingKanbanCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ReabastecePickingKanbanCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaMaquinasCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaMaquinasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaMaquinasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaPartidasMaquilaCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaPartidasMaquilaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaPartidasMaquilaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaPartidasSpinnerCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaPartidasSpinnerCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaPartidasSpinnerCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_OSListarPartidasOrdenesSurtidoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_OSListarPartidasOrdenesSurtidoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_OSListarPartidasOrdenesSurtidoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_OSConsultaPartidaOrdenesSurtidoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_OSConsultaPartidaOrdenesSurtidoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_OSConsultaPartidaOrdenesSurtidoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaPalletASurtirCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaPalletASurtirCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaPalletASurtirCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaEmpaqueASurtirCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaEmpaqueASurtirCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaEmpaqueASurtirCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_OSSugerirPalletCompletedEventHandler(ByVal sender As Object, ByVal e As WM_OSSugerirPalletCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_OSSugerirPalletCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_OSSugerirEmpaqueCompletedEventHandler(ByVal sender As Object, ByVal e As WM_OSSugerirEmpaqueCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_OSSugerirEmpaqueCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_OSSugerirEmpaqueUnidadCompletedEventHandler(ByVal sender As Object, ByVal e As WM_OSSugerirEmpaqueUnidadCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_OSSugerirEmpaqueUnidadCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_OSSurtirPalletCompletedEventHandler(ByVal sender As Object, ByVal e As WM_OSSurtirPalletCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_OSSurtirPalletCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_OSSurtirEmpaqueCompletedEventHandler(ByVal sender As Object, ByVal e As WM_OSSurtirEmpaqueCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_OSSurtirEmpaqueCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_OSSurtirEmpaques_NECompletedEventHandler(ByVal sender As Object, ByVal e As WM_OSSurtirEmpaques_NECompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_OSSurtirEmpaques_NECompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_OSSurtirPiezasCompletedEventHandler(ByVal sender As Object, ByVal e As WM_OSSurtirPiezasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_OSSurtirPiezasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_OSSurtirPiezasSKUCompletedEventHandler(ByVal sender As Object, ByVal e As WM_OSSurtirPiezasSKUCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_OSSurtirPiezasSKUCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_OSCancelarSurtPiezasCompletedEventHandler(ByVal sender As Object, ByVal e As WM_OSCancelarSurtPiezasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_OSCancelarSurtPiezasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_OSConsultaPalletPKAbiertoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_OSConsultaPalletPKAbiertoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_OSConsultaPalletPKAbiertoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_OSCerrarPalletPKCompletedEventHandler(ByVal sender As Object, ByVal e As WM_OSCerrarPalletPKCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_OSCerrarPalletPKCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_OSListarPartidasOSPrecargaCompletedEventHandler(ByVal sender As Object, ByVal e As WM_OSListarPartidasOSPrecargaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_OSListarPartidasOSPrecargaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_OSSurtirPalletPrecargaCompletedEventHandler(ByVal sender As Object, ByVal e As WM_OSSurtirPalletPrecargaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_OSSurtirPalletPrecargaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_OSSugerirPalletPrecargaCompletedEventHandler(ByVal sender As Object, ByVal e As WM_OSSugerirPalletPrecargaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_OSSugerirPalletPrecargaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaPedidoSurtidoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaPedidoSurtidoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaPedidoSurtidoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaSurtidoDetPartidaCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaSurtidoDetPartidaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaSurtidoDetPartidaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaEmpaqueSurtidoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaEmpaqueSurtidoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaEmpaqueSurtidoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaPalletSurtidoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaPalletSurtidoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaPalletSurtidoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaPalletSurtido_NECompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaPalletSurtido_NECompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaPalletSurtido_NECompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaContenedorSurtidoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaContenedorSurtidoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaContenedorSurtidoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaValidacionPalletCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaValidacionPalletCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaValidacionPalletCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_PalletsArmadoPedidoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_PalletsArmadoPedidoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_PalletsArmadoPedidoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaTarimaConsolidadaCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaTarimaConsolidadaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaTarimaConsolidadaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaTarimaConsolidada_NECompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaTarimaConsolidada_NECompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaTarimaConsolidada_NECompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_RegistroEmpaqueSurtidoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_RegistroEmpaqueSurtidoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_RegistroEmpaqueSurtidoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_RegistroEmpaqueSurtido_NECompletedEventHandler(ByVal sender As Object, ByVal e As WM_RegistroEmpaqueSurtido_NECompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_RegistroEmpaqueSurtido_NECompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_RegistroPalletSurtidoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_RegistroPalletSurtidoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_RegistroPalletSurtidoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_RegistroPalletSurtidoMultPartCompletedEventHandler(ByVal sender As Object, ByVal e As WM_RegistroPalletSurtidoMultPartCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_RegistroPalletSurtidoMultPartCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_CierraPalletSurtidoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_CierraPalletSurtidoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_CierraPalletSurtidoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaPalletSugeridoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaPalletSugeridoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaPalletSugeridoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaEmpaqueSugeridoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaEmpaqueSugeridoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaEmpaqueSugeridoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaEmpaqueSugerido_NECompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaEmpaqueSugerido_NECompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaEmpaqueSugerido_NECompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaContenedorSugeridoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaContenedorSugeridoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaContenedorSugeridoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_ConsultaEmpaqueEntregaSurtidoCompletedEventHandler(ByVal sender As Object, ByVal e As WM_ConsultaEmpaqueEntregaSurtidoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_ConsultaEmpaqueEntregaSurtidoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_EntregaSurtidoLineaCompletedEventHandler(ByVal sender As Object, ByVal e As WM_EntregaSurtidoLineaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_EntregaSurtidoLineaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_AlmacenaEmbarqueCompletedEventHandler(ByVal sender As Object, ByVal e As WM_AlmacenaEmbarqueCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_AlmacenaEmbarqueCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WM_RegistroEmpaqueSurtidoOSCompletedEventHandler(ByVal sender As Object, ByVal e As WM_RegistroEmpaqueSurtidoOSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WM_RegistroEmpaqueSurtidoOSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CResultado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CResultado)
            End Get
        End Property
    End Class
End Namespace
